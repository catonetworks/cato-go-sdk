// Code generated by github.com/Yamashou/gqlgenc, DO NOT EDIT.

package cato_go_sdk

import (
	"context"

	"github.com/Yamashou/gqlgenc/clientv2"
	cato_models "github.com/catonetworks/cato-go-sdk/models"
	"github.com/catonetworks/cato-go-sdk/scalars"
)

type CatoClient interface {
	AccountBySubdomain(ctx context.Context, accountID string, subdomains []string, interceptors ...clientv2.RequestInterceptor) (*AccountBySubdomain, error)
	AccountMetrics(ctx context.Context, toRate *bool, perSecond *bool, withMissingData *bool, buckets *int64, labels []cato_models.TimeseriesMetricType, types []string, toRate1 *bool, perSecond1 *bool, withMissingData1 *bool, perSecond2 *bool, withMissingData2 *bool, perSecond3 *bool, withMissingData3 *bool, siteIDs []string, ids []string, toRate2 *bool, perSecond4 *bool, withMissingData4 *bool, perSecond5 *bool, withMissingData5 *bool, perSecond6 *bool, withMissingData6 *bool, userIDs []string, perSecond7 *bool, withMissingData7 *bool, labels1 []cato_models.TimeseriesMetricType, buckets1 *int64, accountID *string, id *string, timeFrame string, groupInterfaces *bool, groupDevices *bool, interceptors ...clientv2.RequestInterceptor) (*AccountMetrics, error)
	AccountRoles(ctx context.Context, accountID string, accountType *cato_models.AccountType, interceptors ...clientv2.RequestInterceptor) (*AccountRoles, error)
	AccountSnapshot(ctx context.Context, siteIDs []string, userIDs []string, accountID *string, interceptors ...clientv2.RequestInterceptor) (*AccountSnapshot, error)
	AdminAddAdmin(ctx context.Context, addAdminInput cato_models.AddAdminInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*AdminAddAdmin, error)
	AdminRemoveAdmin(ctx context.Context, adminID string, accountID string, interceptors ...clientv2.RequestInterceptor) (*AdminRemoveAdmin, error)
	AdminUpdateAdmin(ctx context.Context, adminID string, updateAdminInput cato_models.UpdateAdminInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*AdminUpdateAdmin, error)
	Admin(ctx context.Context, accountID string, adminID string, interceptors ...clientv2.RequestInterceptor) (*Admin, error)
	Admins(ctx context.Context, accountID string, limit *int64, from *int64, search *string, sort []*cato_models.SortInput, adminIDs []string, interceptors ...clientv2.RequestInterceptor) (*Admins, error)
	AppStats(ctx context.Context, limit *int64, from *int64, accountID string, timeFrame string, measures []*cato_models.Measure, dimensions []*cato_models.Dimension, filters []*cato_models.AppStatsFilter, sort []*cato_models.AppStatsSort, interceptors ...clientv2.RequestInterceptor) (*AppStats, error)
	AppStatsTimeSeries(ctx context.Context, perSecond *bool, withMissingData *bool, buckets int64, accountID string, timeFrame string, measures []*cato_models.Measure, dimensions []*cato_models.Dimension, filters []*cato_models.AppStatsFilter, interceptors ...clientv2.RequestInterceptor) (*AppStatsTimeSeries, error)
	AuditFeed(ctx context.Context, fieldNames []cato_models.AuditFieldName, accountIDs []string, ids []string, timeFrame string, filters []*cato_models.AuditFieldFilterInput, marker *string, interceptors ...clientv2.RequestInterceptor) (*AuditFeed, error)
	EntityLookup(ctx context.Context, accountID string, typeArg cato_models.EntityType, limit *int64, from *int64, parent *cato_models.EntityInput, search *string, entityIDs []string, sort []*cato_models.SortInput, filters []*cato_models.LookupFilterInput, helperFields []string, interceptors ...clientv2.RequestInterceptor) (*EntityLookup, error)
	Events(ctx context.Context, limit *int64, from *int64, accountID string, timeFrame string, measures []*cato_models.EventsMeasure, dimensions []*cato_models.EventsDimension, filters []*cato_models.EventsFilter, sort []*cato_models.EventsSort, interceptors ...clientv2.RequestInterceptor) (*Events, error)
	EventsFeed(ctx context.Context, fieldNames []cato_models.EventFieldName, accountIDs []string, filters []*cato_models.EventFeedFieldFilterInput, marker *string, interceptors ...clientv2.RequestInterceptor) (*EventsFeed, error)
	EventsTimeSeries(ctx context.Context, perSecond *bool, withMissingData *bool, buckets int64, accountID string, timeFrame string, measures []*cato_models.EventsMeasure, dimensions []*cato_models.EventsDimension, filters []*cato_models.EventsFilter, interceptors ...clientv2.RequestInterceptor) (*EventsTimeSeries, error)
	HardwareManagement(ctx context.Context, input *cato_models.SocketInventoryInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*HardwareManagement, error)
	Licensing(ctx context.Context, accountID string, interceptors ...clientv2.RequestInterceptor) (*Licensing, error)
	SiteAddBgpPeer(ctx context.Context, addBgpPeerInput cato_models.AddBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddBgpPeer, error)
	SiteRemoveBgpPeer(ctx context.Context, removeBgpPeerInput cato_models.RemoveBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteRemoveBgpPeer, error)
	SiteUpdateBgpPeer(ctx context.Context, updateBgpPeerInput cato_models.UpdateBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateBgpPeer, error)
	SitesAddBgpPeer(ctx context.Context, addBgpPeerInput cato_models.AddBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SitesAddBgpPeer, error)
	SitesRemoveBgpPeer(ctx context.Context, removeBgpPeerInput cato_models.RemoveBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SitesRemoveBgpPeer, error)
	SitesUpdateBgpPeer(ctx context.Context, updateBgpPeerInput cato_models.UpdateBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SitesUpdateBgpPeer, error)
	PolicyInternetFirewallAddSection(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyAddSectionInput cato_models.PolicyAddSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallAddSection, error)
	PolicyInternetFirewallCreatePolicyRevision(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyCreateRevisionInput cato_models.PolicyCreateRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallCreatePolicyRevision, error)
	PolicyInternetFirewallDiscardPolicyRevision(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyDiscardRevisionInput *cato_models.PolicyDiscardRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallDiscardPolicyRevision, error)
	PolicyInternetFirewallMoveRule(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyMoveRuleInput cato_models.PolicyMoveRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallMoveRule, error)
	PolicyInternetFirewallMoveSection(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyMoveSectionInput cato_models.PolicyMoveSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallMoveSection, error)
	PolicyInternetFirewallRemoveRule(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, internetFirewallRemoveRuleInput cato_models.InternetFirewallRemoveRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallRemoveRule, error)
	PolicyInternetFirewallRemoveSection(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyRemoveSectionInput cato_models.PolicyRemoveSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallRemoveSection, error)
	PolicyInternetFirewallPublishPolicyRevision(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyPublishRevisionInput *cato_models.PolicyPublishRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallPublishPolicyRevision, error)
	PolicyInternetFirewallUpdateRule(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, internetFirewallUpdateRuleInput cato_models.InternetFirewallUpdateRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallUpdateRule, error)
	PolicyInternetFirewallUpdateSection(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyUpdateSectionInput cato_models.PolicyUpdateSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallUpdateSection, error)
	PolicyInternetFirewallUpdatePolicy(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, internetFirewallPolicyUpdateInput cato_models.InternetFirewallPolicyUpdateInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallUpdatePolicy, error)
	Policy(ctx context.Context, internetFirewallPolicyInput *cato_models.InternetFirewallPolicyInput, wanFirewallPolicyInput *cato_models.WanFirewallPolicyInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*Policy, error)

	// Temporary entries to support independent calls for IFW and WAN Policies
	PolicyInternetFirewall(ctx context.Context, internetFirewallPolicyInput *cato_models.InternetFirewallPolicyInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*Policy, error)
	PolicyWanFirewall(ctx context.Context, wanFirewallPolicyInput *cato_models.WanFirewallPolicyInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*Policy, error)
	// End of temporary additions

	PolicyInternetFirewallAddRule(ctx context.Context, internetFirewallAddRuleInput cato_models.InternetFirewallAddRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallAddRule, error)
	PolicyWanFirewallAddRule(ctx context.Context, wanFirewallAddRuleInput cato_models.WanFirewallAddRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallAddRule, error)
	PolicyWanFirewallAddSection(ctx context.Context, policyAddSectionInput cato_models.PolicyAddSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallAddSection, error)
	PolicyWanFirewallCreatePolicyRevision(ctx context.Context, policyCreateRevisionInput cato_models.PolicyCreateRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallCreatePolicyRevision, error)
	PolicyWanFirewallDiscardPolicyRevision(ctx context.Context, policyDiscardRevisionInput *cato_models.PolicyDiscardRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallDiscardPolicyRevision, error)
	PolicyWanFirewallMoveRule(ctx context.Context, policyMoveRuleInput cato_models.PolicyMoveRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallMoveRule, error)
	PolicyWanFirewallMoveSection(ctx context.Context, policyMoveSectionInput cato_models.PolicyMoveSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallMoveSection, error)
	PolicyWanFirewallPublishPolicyRevision(ctx context.Context, policyPublishRevisionInput *cato_models.PolicyPublishRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallPublishPolicyRevision, error)
	PolicyWanFirewallRemoveRule(ctx context.Context, wanFirewallRemoveRuleInput cato_models.WanFirewallRemoveRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallRemoveRule, error)
	PolicyWanFirewallRemoveSection(ctx context.Context, policyRemoveSectionInput cato_models.PolicyRemoveSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallRemoveSection, error)
	PolicyWanFirewallUpdatePolicy(ctx context.Context, wanFirewallPolicyUpdateInput cato_models.WanFirewallPolicyUpdateInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallUpdatePolicy, error)
	PolicyWanFirewallUpdateRule(ctx context.Context, wanFirewallUpdateRuleInput cato_models.WanFirewallUpdateRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallUpdateRule, error)
	PolicyWanFirewallUpdateSection(ctx context.Context, policyUpdateSectionInput cato_models.PolicyUpdateSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallUpdateSection, error)
	Site(ctx context.Context, cloudInterconnectPhysicalConnectionInput cato_models.CloudInterconnectPhysicalConnectionInput, cloudInterconnectPhysicalConnectionIDInput cato_models.CloudInterconnectPhysicalConnectionIDInput, cloudInterconnectConnectionConnectivityInput cato_models.CloudInterconnectConnectionConnectivityInput, bgpPeerRefInput cato_models.BgpPeerRefInput, bgpPeerListInput cato_models.BgpPeerListInput, siteBgpStatusInput cato_models.SiteBgpStatusInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*Site, error)
	SiteAddIpsecIkeV2Site(ctx context.Context, addIpsecIkeV2SiteInput cato_models.AddIpsecIkeV2SiteInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddIpsecIkeV2Site, error)
	SiteAddIpsecIkeV2SiteTunnels(ctx context.Context, siteID string, addIpsecIkeV2SiteTunnelsInput cato_models.AddIpsecIkeV2SiteTunnelsInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddIpsecIkeV2SiteTunnels, error)
	SiteAddNetworkRange(ctx context.Context, lanSocketInterfaceID string, addNetworkRangeInput cato_models.AddNetworkRangeInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddNetworkRange, error)
	SiteAddSocketSite(ctx context.Context, addSocketSiteInput cato_models.AddSocketSiteInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddSocketSite, error)
	SiteAddStaticHost(ctx context.Context, siteID string, addStaticHostInput cato_models.AddStaticHostInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddStaticHost, error)
	SiteRemoveNetworkRange(ctx context.Context, networkRangeID string, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteRemoveNetworkRange, error)
	SiteRemoveSite(ctx context.Context, siteID string, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteRemoveSite, error)
	SiteRemoveStaticHost(ctx context.Context, hostID string, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteRemoveStaticHost, error)
	SiteUpdateHa(ctx context.Context, siteID string, updateHaInput cato_models.UpdateHaInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateHa, error)
	SiteUpdateIpsecIkeV2SiteGeneralDetails(ctx context.Context, siteID string, updateIpsecIkeV2SiteGeneralDetailsInput cato_models.UpdateIpsecIkeV2SiteGeneralDetailsInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateIpsecIkeV2SiteGeneralDetails, error)
	SiteUpdateIpsecIkeV2SiteTunnels(ctx context.Context, siteID string, updateIpsecIkeV2SiteTunnelsInput cato_models.UpdateIpsecIkeV2SiteTunnelsInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateIpsecIkeV2SiteTunnels, error)
	SiteUpdateNetworkRange(ctx context.Context, networkRangeID string, updateNetworkRangeInput cato_models.UpdateNetworkRangeInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateNetworkRange, error)
	SiteUpdateSiteGeneralDetails(ctx context.Context, siteID string, updateSiteGeneralDetailsInput cato_models.UpdateSiteGeneralDetailsInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateSiteGeneralDetails, error)
	SiteUpdateSocketInterface(ctx context.Context, siteID string, socketInterfaceID cato_models.SocketInterfaceIDEnum, updateSocketInterfaceInput cato_models.UpdateSocketInterfaceInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateSocketInterface, error)
	SiteUpdateStaticHost(ctx context.Context, hostID string, updateStaticHostInput cato_models.UpdateStaticHostInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateStaticHost, error)
	SubDomains(ctx context.Context, accountID string, managedAccount *bool, interceptors ...clientv2.RequestInterceptor) (*SubDomains, error)
	Xdr(ctx context.Context, storyInput cato_models.StoryInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*Xdr, error)
}

type Client struct {
	Client *clientv2.Client
}

func NewClient(cli clientv2.HttpClient, baseURL string, options *clientv2.Options, interceptors ...clientv2.RequestInterceptor) CatoClient {
	return &Client{Client: clientv2.NewClient(cli, baseURL, options, interceptors...)}
}

type AccountBySubdomain_AccountBySubdomain struct {
	ID        string "json:\"id\" graphql:\"id\""
	Name      string "json:\"name\" graphql:\"name\""
	Subdomain string "json:\"subdomain\" graphql:\"subdomain\""
}

func (t *AccountBySubdomain_AccountBySubdomain) GetID() string {
	if t == nil {
		t = &AccountBySubdomain_AccountBySubdomain{}
	}
	return t.ID
}
func (t *AccountBySubdomain_AccountBySubdomain) GetName() string {
	if t == nil {
		t = &AccountBySubdomain_AccountBySubdomain{}
	}
	return t.Name
}
func (t *AccountBySubdomain_AccountBySubdomain) GetSubdomain() string {
	if t == nil {
		t = &AccountBySubdomain_AccountBySubdomain{}
	}
	return t.Subdomain
}

type AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics struct {
	BytesDownstream            *float64 "json:\"bytesDownstream,omitempty\" graphql:\"bytesDownstream\""
	BytesTotal                 *float64 "json:\"bytesTotal,omitempty\" graphql:\"bytesTotal\""
	BytesUpstream              *float64 "json:\"bytesUpstream,omitempty\" graphql:\"bytesUpstream\""
	Duration                   *int64   "json:\"duration,omitempty\" graphql:\"duration\""
	FlowCount                  *float64 "json:\"flowCount,omitempty\" graphql:\"flowCount\""
	Granularity                *int64   "json:\"granularity,omitempty\" graphql:\"granularity\""
	HostCount                  *float64 "json:\"hostCount,omitempty\" graphql:\"hostCount\""
	HostLimit                  *float64 "json:\"hostLimit,omitempty\" graphql:\"hostLimit\""
	JitterDownstream           *float64 "json:\"jitterDownstream,omitempty\" graphql:\"jitterDownstream\""
	JitterUpstream             *float64 "json:\"jitterUpstream,omitempty\" graphql:\"jitterUpstream\""
	LostDownstream             *float64 "json:\"lostDownstream,omitempty\" graphql:\"lostDownstream\""
	LostDownstreamPcnt         *float64 "json:\"lostDownstreamPcnt,omitempty\" graphql:\"lostDownstreamPcnt\""
	LostUpstream               *float64 "json:\"lostUpstream,omitempty\" graphql:\"lostUpstream\""
	LostUpstreamPcnt           *float64 "json:\"lostUpstreamPcnt,omitempty\" graphql:\"lostUpstreamPcnt\""
	PacketsDiscardedDownstream *float64 "json:\"packetsDiscardedDownstream,omitempty\" graphql:\"packetsDiscardedDownstream\""
	PacketsDiscardedUpstream   *float64 "json:\"packetsDiscardedUpstream,omitempty\" graphql:\"packetsDiscardedUpstream\""
	PacketsDownstream          *float64 "json:\"packetsDownstream,omitempty\" graphql:\"packetsDownstream\""
	PacketsUpstream            *float64 "json:\"packetsUpstream,omitempty\" graphql:\"packetsUpstream\""
	Rtt                        *int64   "json:\"rtt,omitempty\" graphql:\"rtt\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetBytesDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.BytesDownstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetBytesTotal() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.BytesTotal
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetBytesUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.BytesUpstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetDuration() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.Duration
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetFlowCount() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.FlowCount
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetGranularity() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.Granularity
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetHostCount() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.HostCount
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetHostLimit() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.HostLimit
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetJitterDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.JitterDownstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetJitterUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.JitterUpstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetLostDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.LostDownstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetLostDownstreamPcnt() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.LostDownstreamPcnt
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetLostUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.LostUpstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetLostUpstreamPcnt() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.LostUpstreamPcnt
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetPacketsDiscardedDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.PacketsDiscardedDownstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetPacketsDiscardedUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.PacketsDiscardedUpstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetPacketsDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.PacketsDownstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetPacketsUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.PacketsUpstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics) GetRtt() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics{}
	}
	return t.Rtt
}

type AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Dimensions struct {
	Label string  "json:\"label\" graphql:\"label\""
	Value *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Dimensions) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Dimensions{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Dimensions) GetValue() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Dimensions{}
	}
	return t.Value
}

type AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key_Dimensions struct {
	FieldName string  "json:\"fieldName\" graphql:\"fieldName\""
	Value     *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key_Dimensions) GetFieldName() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key_Dimensions{}
	}
	return t.FieldName
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key_Dimensions) GetValue() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key_Dimensions{}
	}
	return t.Value
}

type AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key struct {
	Dimensions       []*AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	MeasureFieldName string                                                                      "json:\"measureFieldName\" graphql:\"measureFieldName\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key) GetDimensions() []*AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key_Dimensions {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key{}
	}
	return t.Dimensions
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key) GetMeasureFieldName() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key{}
	}
	return t.MeasureFieldName
}

type AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries struct {
	Data       [][]float64                                                             "json:\"data,omitempty\" graphql:\"data\""
	Dimensions []*AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	Info       []string                                                                "json:\"info,omitempty\" graphql:\"info\""
	Key        *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key          "json:\"key,omitempty\" graphql:\"key\""
	Label      string                                                                  "json:\"label\" graphql:\"label\""
	Sum        *float64                                                                "json:\"sum,omitempty\" graphql:\"sum\""
	Units      *cato_models.UnitType                                                   "json:\"units,omitempty\" graphql:\"units\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries) GetData() [][]float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries{}
	}
	return t.Data
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries) GetDimensions() []*AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Dimensions {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries{}
	}
	return t.Dimensions
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries) GetInfo() []string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries{}
	}
	return t.Info
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries) GetKey() *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries_Key {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries{}
	}
	return t.Key
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries) GetSum() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries{}
	}
	return t.Sum
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries) GetUnits() *cato_models.UnitType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries{}
	}
	return t.Units
}

type AccountMetrics_AccountMetrics_Sites_Interfaces_Annotations struct {
	Label      string                     "json:\"label\" graphql:\"label\""
	ShortLabel string                     "json:\"shortLabel\" graphql:\"shortLabel\""
	Time       float64                    "json:\"time\" graphql:\"time\""
	Type       cato_models.AnnotationType "json:\"type\" graphql:\"type\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Annotations) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Annotations{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Annotations) GetShortLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Annotations{}
	}
	return t.ShortLabel
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Annotations) GetTime() float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Annotations{}
	}
	return t.Time
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Annotations) GetType() *cato_models.AnnotationType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Annotations{}
	}
	return &t.Type
}

type AccountMetrics_AccountMetrics_Sites_Interfaces_Periods struct {
	Duration []float64              "json:\"duration\" graphql:\"duration\""
	Title    string                 "json:\"title\" graphql:\"title\""
	Type     cato_models.PeriodType "json:\"type\" graphql:\"type\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Periods) GetDuration() []float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Periods{}
	}
	return t.Duration
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Periods) GetTitle() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Periods{}
	}
	return t.Title
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_Periods) GetType() *cato_models.PeriodType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_Periods{}
	}
	return &t.Type
}

type AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo struct {
	City        *string  "json:\"city,omitempty\" graphql:\"city\""
	CountryCode *string  "json:\"countryCode,omitempty\" graphql:\"countryCode\""
	CountryName *string  "json:\"countryName,omitempty\" graphql:\"countryName\""
	IP          *string  "json:\"ip,omitempty\" graphql:\"ip\""
	Latitude    *float64 "json:\"latitude,omitempty\" graphql:\"latitude\""
	Longitude   *float64 "json:\"longitude,omitempty\" graphql:\"longitude\""
	Provider    *string  "json:\"provider,omitempty\" graphql:\"provider\""
	State       *string  "json:\"state,omitempty\" graphql:\"state\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo) GetCity() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo{}
	}
	return t.City
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo) GetCountryCode() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo{}
	}
	return t.CountryCode
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo) GetCountryName() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo{}
	}
	return t.CountryName
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo) GetIP() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo{}
	}
	return t.IP
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo) GetLatitude() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo{}
	}
	return t.Latitude
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo) GetLongitude() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo{}
	}
	return t.Longitude
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo) GetProvider() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo{}
	}
	return t.Provider
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo) GetState() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo{}
	}
	return t.State
}

type AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo struct {
	ID                *string                     "json:\"id,omitempty\" graphql:\"id\""
	IsPrimary         *bool                       "json:\"isPrimary,omitempty\" graphql:\"isPrimary\""
	Platform          *cato_models.SocketPlatform "json:\"platform,omitempty\" graphql:\"platform\""
	Serial            *string                     "json:\"serial,omitempty\" graphql:\"serial\""
	Version           *string                     "json:\"version,omitempty\" graphql:\"version\""
	VersionUpdateTime *string                     "json:\"versionUpdateTime,omitempty\" graphql:\"versionUpdateTime\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo) GetID() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo{}
	}
	return t.ID
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo) GetIsPrimary() *bool {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo{}
	}
	return t.IsPrimary
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo) GetPlatform() *cato_models.SocketPlatform {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo{}
	}
	return t.Platform
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo) GetSerial() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo{}
	}
	return t.Serial
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo) GetVersion() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo{}
	}
	return t.Version
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo) GetVersionUpdateTime() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo{}
	}
	return t.VersionUpdateTime
}

type AccountMetrics_AccountMetrics_Sites_Interfaces_IpsecInfo struct {
	CatoIP     *string "json:\"catoIP,omitempty\" graphql:\"catoIP\""
	IkeVersion *int64  "json:\"ikeVersion,omitempty\" graphql:\"ikeVersion\""
	IsPrimary  *bool   "json:\"isPrimary,omitempty\" graphql:\"isPrimary\""
	RemoteIP   *string "json:\"remoteIP,omitempty\" graphql:\"remoteIP\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_IpsecInfo) GetCatoIP() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_IpsecInfo{}
	}
	return t.CatoIP
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_IpsecInfo) GetIkeVersion() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_IpsecInfo{}
	}
	return t.IkeVersion
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_IpsecInfo) GetIsPrimary() *bool {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_IpsecInfo{}
	}
	return t.IsPrimary
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_IpsecInfo) GetRemoteIP() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_IpsecInfo{}
	}
	return t.RemoteIP
}

type AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo struct {
	DestType            *string "json:\"destType,omitempty\" graphql:\"destType\""
	DownstreamBandwidth *int64  "json:\"downstreamBandwidth,omitempty\" graphql:\"downstreamBandwidth\""
	ID                  string  "json:\"id\" graphql:\"id\""
	Name                *string "json:\"name,omitempty\" graphql:\"name\""
	UpstreamBandwidth   *int64  "json:\"upstreamBandwidth,omitempty\" graphql:\"upstreamBandwidth\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo) GetDestType() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo{}
	}
	return t.DestType
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo) GetDownstreamBandwidth() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo{}
	}
	return t.DownstreamBandwidth
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo) GetID() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo{}
	}
	return t.ID
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo) GetName() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo{}
	}
	return t.Name
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo) GetUpstreamBandwidth() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo{}
	}
	return t.UpstreamBandwidth
}

type AccountMetrics_AccountMetrics_Sites_Interfaces struct {
	Annotations   []*AccountMetrics_AccountMetrics_Sites_Interfaces_Annotations "json:\"annotations,omitempty\" graphql:\"annotations\""
	InterfaceInfo *AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo "json:\"interfaceInfo,omitempty\" graphql:\"interfaceInfo\""
	IpsecInfo     *AccountMetrics_AccountMetrics_Sites_Interfaces_IpsecInfo     "json:\"ipsecInfo,omitempty\" graphql:\"ipsecInfo\""
	Metrics       *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics       "json:\"metrics,omitempty\" graphql:\"metrics\""
	Name          *string                                                       "json:\"name,omitempty\" graphql:\"name\""
	Periods       []*AccountMetrics_AccountMetrics_Sites_Interfaces_Periods     "json:\"periods,omitempty\" graphql:\"periods\""
	RemoteIP      *string                                                       "json:\"remoteIP,omitempty\" graphql:\"remoteIP\""
	RemoteIPInfo  *AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo  "json:\"remoteIPInfo,omitempty\" graphql:\"remoteIPInfo\""
	SocketInfo    *AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo    "json:\"socketInfo,omitempty\" graphql:\"socketInfo\""
	Timeseries    []*AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries  "json:\"timeseries,omitempty\" graphql:\"timeseries\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Interfaces) GetAnnotations() []*AccountMetrics_AccountMetrics_Sites_Interfaces_Annotations {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces{}
	}
	return t.Annotations
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces) GetInterfaceInfo() *AccountMetrics_AccountMetrics_Sites_Interfaces_InterfaceInfo {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces{}
	}
	return t.InterfaceInfo
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces) GetIpsecInfo() *AccountMetrics_AccountMetrics_Sites_Interfaces_IpsecInfo {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces{}
	}
	return t.IpsecInfo
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces) GetMetrics() *AccountMetrics_AccountMetrics_Sites_Interfaces_Metrics {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces{}
	}
	return t.Metrics
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces) GetName() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces{}
	}
	return t.Name
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces) GetPeriods() []*AccountMetrics_AccountMetrics_Sites_Interfaces_Periods {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces{}
	}
	return t.Periods
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces) GetRemoteIP() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces{}
	}
	return t.RemoteIP
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces) GetRemoteIPInfo() *AccountMetrics_AccountMetrics_Sites_Interfaces_RemoteIPInfo {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces{}
	}
	return t.RemoteIPInfo
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces) GetSocketInfo() *AccountMetrics_AccountMetrics_Sites_Interfaces_SocketInfo {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces{}
	}
	return t.SocketInfo
}
func (t *AccountMetrics_AccountMetrics_Sites_Interfaces) GetTimeseries() []*AccountMetrics_AccountMetrics_Sites_Interfaces_Timeseries {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Interfaces{}
	}
	return t.Timeseries
}

type AccountMetrics_AccountMetrics_Sites_Metrics struct {
	BytesDownstream            *float64 "json:\"bytesDownstream,omitempty\" graphql:\"bytesDownstream\""
	BytesTotal                 *float64 "json:\"bytesTotal,omitempty\" graphql:\"bytesTotal\""
	BytesUpstream              *float64 "json:\"bytesUpstream,omitempty\" graphql:\"bytesUpstream\""
	Duration                   *int64   "json:\"duration,omitempty\" graphql:\"duration\""
	FlowCount                  *float64 "json:\"flowCount,omitempty\" graphql:\"flowCount\""
	Granularity                *int64   "json:\"granularity,omitempty\" graphql:\"granularity\""
	HostCount                  *float64 "json:\"hostCount,omitempty\" graphql:\"hostCount\""
	HostLimit                  *float64 "json:\"hostLimit,omitempty\" graphql:\"hostLimit\""
	JitterDownstream           *float64 "json:\"jitterDownstream,omitempty\" graphql:\"jitterDownstream\""
	JitterUpstream             *float64 "json:\"jitterUpstream,omitempty\" graphql:\"jitterUpstream\""
	LostDownstream             *float64 "json:\"lostDownstream,omitempty\" graphql:\"lostDownstream\""
	LostDownstreamPcnt         *float64 "json:\"lostDownstreamPcnt,omitempty\" graphql:\"lostDownstreamPcnt\""
	LostUpstream               *float64 "json:\"lostUpstream,omitempty\" graphql:\"lostUpstream\""
	LostUpstreamPcnt           *float64 "json:\"lostUpstreamPcnt,omitempty\" graphql:\"lostUpstreamPcnt\""
	PacketsDiscardedDownstream *float64 "json:\"packetsDiscardedDownstream,omitempty\" graphql:\"packetsDiscardedDownstream\""
	PacketsDiscardedUpstream   *float64 "json:\"packetsDiscardedUpstream,omitempty\" graphql:\"packetsDiscardedUpstream\""
	PacketsDownstream          *float64 "json:\"packetsDownstream,omitempty\" graphql:\"packetsDownstream\""
	PacketsUpstream            *float64 "json:\"packetsUpstream,omitempty\" graphql:\"packetsUpstream\""
	Rtt                        *int64   "json:\"rtt,omitempty\" graphql:\"rtt\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetBytesDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.BytesDownstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetBytesTotal() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.BytesTotal
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetBytesUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.BytesUpstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetDuration() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.Duration
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetFlowCount() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.FlowCount
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetGranularity() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.Granularity
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetHostCount() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.HostCount
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetHostLimit() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.HostLimit
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetJitterDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.JitterDownstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetJitterUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.JitterUpstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetLostDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.LostDownstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetLostDownstreamPcnt() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.LostDownstreamPcnt
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetLostUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.LostUpstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetLostUpstreamPcnt() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.LostUpstreamPcnt
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetPacketsDiscardedDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.PacketsDiscardedDownstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetPacketsDiscardedUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.PacketsDiscardedUpstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetPacketsDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.PacketsDownstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetPacketsUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.PacketsUpstream
}
func (t *AccountMetrics_AccountMetrics_Sites_Metrics) GetRtt() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Metrics{}
	}
	return t.Rtt
}

type AccountMetrics_AccountMetrics_Sites_Info_Interfaces struct {
	DestType            *string "json:\"destType,omitempty\" graphql:\"destType\""
	DownstreamBandwidth *int64  "json:\"downstreamBandwidth,omitempty\" graphql:\"downstreamBandwidth\""
	ID                  string  "json:\"id\" graphql:\"id\""
	Name                *string "json:\"name,omitempty\" graphql:\"name\""
	UpstreamBandwidth   *int64  "json:\"upstreamBandwidth,omitempty\" graphql:\"upstreamBandwidth\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Info_Interfaces) GetDestType() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Interfaces{}
	}
	return t.DestType
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Interfaces) GetDownstreamBandwidth() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Interfaces{}
	}
	return t.DownstreamBandwidth
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Interfaces) GetID() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Interfaces{}
	}
	return t.ID
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Interfaces) GetName() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Interfaces{}
	}
	return t.Name
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Interfaces) GetUpstreamBandwidth() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Interfaces{}
	}
	return t.UpstreamBandwidth
}

type AccountMetrics_AccountMetrics_Sites_Info_Sockets struct {
	ID                *string                     "json:\"id,omitempty\" graphql:\"id\""
	IsPrimary         *bool                       "json:\"isPrimary,omitempty\" graphql:\"isPrimary\""
	Platform          *cato_models.SocketPlatform "json:\"platform,omitempty\" graphql:\"platform\""
	Serial            *string                     "json:\"serial,omitempty\" graphql:\"serial\""
	Version           *string                     "json:\"version,omitempty\" graphql:\"version\""
	VersionUpdateTime *string                     "json:\"versionUpdateTime,omitempty\" graphql:\"versionUpdateTime\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Info_Sockets) GetID() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Sockets{}
	}
	return t.ID
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Sockets) GetIsPrimary() *bool {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Sockets{}
	}
	return t.IsPrimary
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Sockets) GetPlatform() *cato_models.SocketPlatform {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Sockets{}
	}
	return t.Platform
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Sockets) GetSerial() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Sockets{}
	}
	return t.Serial
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Sockets) GetVersion() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Sockets{}
	}
	return t.Version
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Sockets) GetVersionUpdateTime() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Sockets{}
	}
	return t.VersionUpdateTime
}

type AccountMetrics_AccountMetrics_Sites_Info_Ipsec struct {
	CatoIP     *string "json:\"catoIP,omitempty\" graphql:\"catoIP\""
	IkeVersion *int64  "json:\"ikeVersion,omitempty\" graphql:\"ikeVersion\""
	IsPrimary  *bool   "json:\"isPrimary,omitempty\" graphql:\"isPrimary\""
	RemoteIP   *string "json:\"remoteIP,omitempty\" graphql:\"remoteIP\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Info_Ipsec) GetCatoIP() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Ipsec{}
	}
	return t.CatoIP
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Ipsec) GetIkeVersion() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Ipsec{}
	}
	return t.IkeVersion
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Ipsec) GetIsPrimary() *bool {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Ipsec{}
	}
	return t.IsPrimary
}
func (t *AccountMetrics_AccountMetrics_Sites_Info_Ipsec) GetRemoteIP() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info_Ipsec{}
	}
	return t.RemoteIP
}

type AccountMetrics_AccountMetrics_Sites_Info struct {
	ConnType     *cato_models.ProtoType                                 "json:\"connType,omitempty\" graphql:\"connType\""
	CountryCode  *string                                                "json:\"countryCode,omitempty\" graphql:\"countryCode\""
	CountryName  *string                                                "json:\"countryName,omitempty\" graphql:\"countryName\""
	CreationTime *string                                                "json:\"creationTime,omitempty\" graphql:\"creationTime\""
	Description  *string                                                "json:\"description,omitempty\" graphql:\"description\""
	Interfaces   []*AccountMetrics_AccountMetrics_Sites_Info_Interfaces "json:\"interfaces,omitempty\" graphql:\"interfaces\""
	Ipsec        []*AccountMetrics_AccountMetrics_Sites_Info_Ipsec      "json:\"ipsec,omitempty\" graphql:\"ipsec\""
	IsHa         *bool                                                  "json:\"isHA,omitempty\" graphql:\"isHA\""
	Name         *string                                                "json:\"name,omitempty\" graphql:\"name\""
	Region       *string                                                "json:\"region,omitempty\" graphql:\"region\""
	Sockets      []*AccountMetrics_AccountMetrics_Sites_Info_Sockets    "json:\"sockets,omitempty\" graphql:\"sockets\""
	Type         *cato_models.SiteType                                  "json:\"type,omitempty\" graphql:\"type\""
}

func (t *AccountMetrics_AccountMetrics_Sites_Info) GetConnType() *cato_models.ProtoType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.ConnType
}
func (t *AccountMetrics_AccountMetrics_Sites_Info) GetCountryCode() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.CountryCode
}
func (t *AccountMetrics_AccountMetrics_Sites_Info) GetCountryName() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.CountryName
}
func (t *AccountMetrics_AccountMetrics_Sites_Info) GetCreationTime() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.CreationTime
}
func (t *AccountMetrics_AccountMetrics_Sites_Info) GetDescription() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.Description
}
func (t *AccountMetrics_AccountMetrics_Sites_Info) GetInterfaces() []*AccountMetrics_AccountMetrics_Sites_Info_Interfaces {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.Interfaces
}
func (t *AccountMetrics_AccountMetrics_Sites_Info) GetIpsec() []*AccountMetrics_AccountMetrics_Sites_Info_Ipsec {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.Ipsec
}
func (t *AccountMetrics_AccountMetrics_Sites_Info) GetIsHa() *bool {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.IsHa
}
func (t *AccountMetrics_AccountMetrics_Sites_Info) GetName() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.Name
}
func (t *AccountMetrics_AccountMetrics_Sites_Info) GetRegion() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.Region
}
func (t *AccountMetrics_AccountMetrics_Sites_Info) GetSockets() []*AccountMetrics_AccountMetrics_Sites_Info_Sockets {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.Sockets
}
func (t *AccountMetrics_AccountMetrics_Sites_Info) GetType() *cato_models.SiteType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_Info{}
	}
	return t.Type
}

type AccountMetrics_AccountMetrics_Sites_HostCount_Dimensions struct {
	Label string  "json:\"label\" graphql:\"label\""
	Value *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *AccountMetrics_AccountMetrics_Sites_HostCount_Dimensions) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostCount_Dimensions{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Sites_HostCount_Dimensions) GetValue() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostCount_Dimensions{}
	}
	return t.Value
}

type AccountMetrics_AccountMetrics_Sites_HostCount_Key struct {
	MeasureFieldName string "json:\"measureFieldName\" graphql:\"measureFieldName\""
}

func (t *AccountMetrics_AccountMetrics_Sites_HostCount_Key) GetMeasureFieldName() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostCount_Key{}
	}
	return t.MeasureFieldName
}

type AccountMetrics_AccountMetrics_Sites_HostCount struct {
	Data       [][]float64                                                 "json:\"data,omitempty\" graphql:\"data\""
	Dimensions []*AccountMetrics_AccountMetrics_Sites_HostCount_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	Info       []string                                                    "json:\"info,omitempty\" graphql:\"info\""
	Key        *AccountMetrics_AccountMetrics_Sites_HostCount_Key          "json:\"key,omitempty\" graphql:\"key\""
	Label      string                                                      "json:\"label\" graphql:\"label\""
	Sum        *float64                                                    "json:\"sum,omitempty\" graphql:\"sum\""
	Units      *cato_models.UnitType                                       "json:\"units,omitempty\" graphql:\"units\""
}

func (t *AccountMetrics_AccountMetrics_Sites_HostCount) GetData() [][]float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostCount{}
	}
	return t.Data
}
func (t *AccountMetrics_AccountMetrics_Sites_HostCount) GetDimensions() []*AccountMetrics_AccountMetrics_Sites_HostCount_Dimensions {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostCount{}
	}
	return t.Dimensions
}
func (t *AccountMetrics_AccountMetrics_Sites_HostCount) GetInfo() []string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostCount{}
	}
	return t.Info
}
func (t *AccountMetrics_AccountMetrics_Sites_HostCount) GetKey() *AccountMetrics_AccountMetrics_Sites_HostCount_Key {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostCount{}
	}
	return t.Key
}
func (t *AccountMetrics_AccountMetrics_Sites_HostCount) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostCount{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Sites_HostCount) GetSum() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostCount{}
	}
	return t.Sum
}
func (t *AccountMetrics_AccountMetrics_Sites_HostCount) GetUnits() *cato_models.UnitType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostCount{}
	}
	return t.Units
}

type AccountMetrics_AccountMetrics_Sites_FlowCount_Dimensions struct {
	Label string  "json:\"label\" graphql:\"label\""
	Value *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *AccountMetrics_AccountMetrics_Sites_FlowCount_Dimensions) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_FlowCount_Dimensions{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Sites_FlowCount_Dimensions) GetValue() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_FlowCount_Dimensions{}
	}
	return t.Value
}

type AccountMetrics_AccountMetrics_Sites_FlowCount_Key struct {
	MeasureFieldName string "json:\"measureFieldName\" graphql:\"measureFieldName\""
}

func (t *AccountMetrics_AccountMetrics_Sites_FlowCount_Key) GetMeasureFieldName() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_FlowCount_Key{}
	}
	return t.MeasureFieldName
}

type AccountMetrics_AccountMetrics_Sites_FlowCount struct {
	Data       [][]float64                                                 "json:\"data,omitempty\" graphql:\"data\""
	Dimensions []*AccountMetrics_AccountMetrics_Sites_FlowCount_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	Info       []string                                                    "json:\"info,omitempty\" graphql:\"info\""
	Key        *AccountMetrics_AccountMetrics_Sites_FlowCount_Key          "json:\"key,omitempty\" graphql:\"key\""
	Label      string                                                      "json:\"label\" graphql:\"label\""
	Sum        *float64                                                    "json:\"sum,omitempty\" graphql:\"sum\""
	Units      *cato_models.UnitType                                       "json:\"units,omitempty\" graphql:\"units\""
}

func (t *AccountMetrics_AccountMetrics_Sites_FlowCount) GetData() [][]float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_FlowCount{}
	}
	return t.Data
}
func (t *AccountMetrics_AccountMetrics_Sites_FlowCount) GetDimensions() []*AccountMetrics_AccountMetrics_Sites_FlowCount_Dimensions {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_FlowCount{}
	}
	return t.Dimensions
}
func (t *AccountMetrics_AccountMetrics_Sites_FlowCount) GetInfo() []string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_FlowCount{}
	}
	return t.Info
}
func (t *AccountMetrics_AccountMetrics_Sites_FlowCount) GetKey() *AccountMetrics_AccountMetrics_Sites_FlowCount_Key {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_FlowCount{}
	}
	return t.Key
}
func (t *AccountMetrics_AccountMetrics_Sites_FlowCount) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_FlowCount{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Sites_FlowCount) GetSum() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_FlowCount{}
	}
	return t.Sum
}
func (t *AccountMetrics_AccountMetrics_Sites_FlowCount) GetUnits() *cato_models.UnitType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_FlowCount{}
	}
	return t.Units
}

type AccountMetrics_AccountMetrics_Sites_HostLimit_Dimensions struct {
	Label string  "json:\"label\" graphql:\"label\""
	Value *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *AccountMetrics_AccountMetrics_Sites_HostLimit_Dimensions) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostLimit_Dimensions{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Sites_HostLimit_Dimensions) GetValue() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostLimit_Dimensions{}
	}
	return t.Value
}

type AccountMetrics_AccountMetrics_Sites_HostLimit_Key struct {
	MeasureFieldName string "json:\"measureFieldName\" graphql:\"measureFieldName\""
}

func (t *AccountMetrics_AccountMetrics_Sites_HostLimit_Key) GetMeasureFieldName() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostLimit_Key{}
	}
	return t.MeasureFieldName
}

type AccountMetrics_AccountMetrics_Sites_HostLimit struct {
	Data       [][]float64                                                 "json:\"data,omitempty\" graphql:\"data\""
	Dimensions []*AccountMetrics_AccountMetrics_Sites_HostLimit_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	Info       []string                                                    "json:\"info,omitempty\" graphql:\"info\""
	Key        *AccountMetrics_AccountMetrics_Sites_HostLimit_Key          "json:\"key,omitempty\" graphql:\"key\""
	Label      string                                                      "json:\"label\" graphql:\"label\""
	Sum        *float64                                                    "json:\"sum,omitempty\" graphql:\"sum\""
	Units      *cato_models.UnitType                                       "json:\"units,omitempty\" graphql:\"units\""
}

func (t *AccountMetrics_AccountMetrics_Sites_HostLimit) GetData() [][]float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostLimit{}
	}
	return t.Data
}
func (t *AccountMetrics_AccountMetrics_Sites_HostLimit) GetDimensions() []*AccountMetrics_AccountMetrics_Sites_HostLimit_Dimensions {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostLimit{}
	}
	return t.Dimensions
}
func (t *AccountMetrics_AccountMetrics_Sites_HostLimit) GetInfo() []string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostLimit{}
	}
	return t.Info
}
func (t *AccountMetrics_AccountMetrics_Sites_HostLimit) GetKey() *AccountMetrics_AccountMetrics_Sites_HostLimit_Key {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostLimit{}
	}
	return t.Key
}
func (t *AccountMetrics_AccountMetrics_Sites_HostLimit) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostLimit{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Sites_HostLimit) GetSum() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostLimit{}
	}
	return t.Sum
}
func (t *AccountMetrics_AccountMetrics_Sites_HostLimit) GetUnits() *cato_models.UnitType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites_HostLimit{}
	}
	return t.Units
}

type AccountMetrics_AccountMetrics_Sites struct {
	FlowCount  *AccountMetrics_AccountMetrics_Sites_FlowCount    "json:\"flowCount,omitempty\" graphql:\"flowCount\""
	HostCount  *AccountMetrics_AccountMetrics_Sites_HostCount    "json:\"hostCount,omitempty\" graphql:\"hostCount\""
	HostLimit  *AccountMetrics_AccountMetrics_Sites_HostLimit    "json:\"hostLimit,omitempty\" graphql:\"hostLimit\""
	ID         *string                                           "json:\"id,omitempty\" graphql:\"id\""
	Info       *AccountMetrics_AccountMetrics_Sites_Info         "json:\"info,omitempty\" graphql:\"info\""
	Interfaces []*AccountMetrics_AccountMetrics_Sites_Interfaces "json:\"interfaces,omitempty\" graphql:\"interfaces\""
	Metrics    *AccountMetrics_AccountMetrics_Sites_Metrics      "json:\"metrics,omitempty\" graphql:\"metrics\""
	Name       *string                                           "json:\"name,omitempty\" graphql:\"name\""
}

func (t *AccountMetrics_AccountMetrics_Sites) GetFlowCount() *AccountMetrics_AccountMetrics_Sites_FlowCount {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites{}
	}
	return t.FlowCount
}
func (t *AccountMetrics_AccountMetrics_Sites) GetHostCount() *AccountMetrics_AccountMetrics_Sites_HostCount {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites{}
	}
	return t.HostCount
}
func (t *AccountMetrics_AccountMetrics_Sites) GetHostLimit() *AccountMetrics_AccountMetrics_Sites_HostLimit {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites{}
	}
	return t.HostLimit
}
func (t *AccountMetrics_AccountMetrics_Sites) GetID() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites{}
	}
	return t.ID
}
func (t *AccountMetrics_AccountMetrics_Sites) GetInfo() *AccountMetrics_AccountMetrics_Sites_Info {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites{}
	}
	return t.Info
}
func (t *AccountMetrics_AccountMetrics_Sites) GetInterfaces() []*AccountMetrics_AccountMetrics_Sites_Interfaces {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites{}
	}
	return t.Interfaces
}
func (t *AccountMetrics_AccountMetrics_Sites) GetMetrics() *AccountMetrics_AccountMetrics_Sites_Metrics {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites{}
	}
	return t.Metrics
}
func (t *AccountMetrics_AccountMetrics_Sites) GetName() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Sites{}
	}
	return t.Name
}

type AccountMetrics_AccountMetrics_Users_Interfaces struct {
	Name     *string "json:\"name,omitempty\" graphql:\"name\""
	RemoteIP *string "json:\"remoteIP,omitempty\" graphql:\"remoteIP\""
}

func (t *AccountMetrics_AccountMetrics_Users_Interfaces) GetName() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Interfaces{}
	}
	return t.Name
}
func (t *AccountMetrics_AccountMetrics_Users_Interfaces) GetRemoteIP() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Interfaces{}
	}
	return t.RemoteIP
}

type AccountMetrics_AccountMetrics_Users_Metrics struct {
	BytesDownstream            *float64 "json:\"bytesDownstream,omitempty\" graphql:\"bytesDownstream\""
	BytesTotal                 *float64 "json:\"bytesTotal,omitempty\" graphql:\"bytesTotal\""
	BytesUpstream              *float64 "json:\"bytesUpstream,omitempty\" graphql:\"bytesUpstream\""
	Duration                   *int64   "json:\"duration,omitempty\" graphql:\"duration\""
	FlowCount                  *float64 "json:\"flowCount,omitempty\" graphql:\"flowCount\""
	Granularity                *int64   "json:\"granularity,omitempty\" graphql:\"granularity\""
	HostCount                  *float64 "json:\"hostCount,omitempty\" graphql:\"hostCount\""
	HostLimit                  *float64 "json:\"hostLimit,omitempty\" graphql:\"hostLimit\""
	JitterDownstream           *float64 "json:\"jitterDownstream,omitempty\" graphql:\"jitterDownstream\""
	JitterUpstream             *float64 "json:\"jitterUpstream,omitempty\" graphql:\"jitterUpstream\""
	LostDownstream             *float64 "json:\"lostDownstream,omitempty\" graphql:\"lostDownstream\""
	LostDownstreamPcnt         *float64 "json:\"lostDownstreamPcnt,omitempty\" graphql:\"lostDownstreamPcnt\""
	LostUpstream               *float64 "json:\"lostUpstream,omitempty\" graphql:\"lostUpstream\""
	LostUpstreamPcnt           *float64 "json:\"lostUpstreamPcnt,omitempty\" graphql:\"lostUpstreamPcnt\""
	PacketsDiscardedDownstream *float64 "json:\"packetsDiscardedDownstream,omitempty\" graphql:\"packetsDiscardedDownstream\""
	PacketsDiscardedUpstream   *float64 "json:\"packetsDiscardedUpstream,omitempty\" graphql:\"packetsDiscardedUpstream\""
	PacketsDownstream          *float64 "json:\"packetsDownstream,omitempty\" graphql:\"packetsDownstream\""
	PacketsUpstream            *float64 "json:\"packetsUpstream,omitempty\" graphql:\"packetsUpstream\""
	Rtt                        *int64   "json:\"rtt,omitempty\" graphql:\"rtt\""
}

func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetBytesDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.BytesDownstream
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetBytesTotal() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.BytesTotal
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetBytesUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.BytesUpstream
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetDuration() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.Duration
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetFlowCount() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.FlowCount
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetGranularity() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.Granularity
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetHostCount() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.HostCount
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetHostLimit() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.HostLimit
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetJitterDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.JitterDownstream
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetJitterUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.JitterUpstream
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetLostDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.LostDownstream
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetLostDownstreamPcnt() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.LostDownstreamPcnt
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetLostUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.LostUpstream
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetLostUpstreamPcnt() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.LostUpstreamPcnt
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetPacketsDiscardedDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.PacketsDiscardedDownstream
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetPacketsDiscardedUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.PacketsDiscardedUpstream
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetPacketsDownstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.PacketsDownstream
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetPacketsUpstream() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.PacketsUpstream
}
func (t *AccountMetrics_AccountMetrics_Users_Metrics) GetRtt() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Metrics{}
	}
	return t.Rtt
}

type AccountMetrics_AccountMetrics_Users_Info struct {
	ConnType     *cato_models.ProtoType "json:\"connType,omitempty\" graphql:\"connType\""
	CountryCode  *string                "json:\"countryCode,omitempty\" graphql:\"countryCode\""
	CountryName  *string                "json:\"countryName,omitempty\" graphql:\"countryName\""
	CreationTime *string                "json:\"creationTime,omitempty\" graphql:\"creationTime\""
	Description  *string                "json:\"description,omitempty\" graphql:\"description\""
	IsHa         *bool                  "json:\"isHA,omitempty\" graphql:\"isHA\""
	Name         *string                "json:\"name,omitempty\" graphql:\"name\""
	Region       *string                "json:\"region,omitempty\" graphql:\"region\""
	Type         *cato_models.SiteType  "json:\"type,omitempty\" graphql:\"type\""
}

func (t *AccountMetrics_AccountMetrics_Users_Info) GetConnType() *cato_models.ProtoType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Info{}
	}
	return t.ConnType
}
func (t *AccountMetrics_AccountMetrics_Users_Info) GetCountryCode() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Info{}
	}
	return t.CountryCode
}
func (t *AccountMetrics_AccountMetrics_Users_Info) GetCountryName() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Info{}
	}
	return t.CountryName
}
func (t *AccountMetrics_AccountMetrics_Users_Info) GetCreationTime() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Info{}
	}
	return t.CreationTime
}
func (t *AccountMetrics_AccountMetrics_Users_Info) GetDescription() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Info{}
	}
	return t.Description
}
func (t *AccountMetrics_AccountMetrics_Users_Info) GetIsHa() *bool {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Info{}
	}
	return t.IsHa
}
func (t *AccountMetrics_AccountMetrics_Users_Info) GetName() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Info{}
	}
	return t.Name
}
func (t *AccountMetrics_AccountMetrics_Users_Info) GetRegion() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Info{}
	}
	return t.Region
}
func (t *AccountMetrics_AccountMetrics_Users_Info) GetType() *cato_models.SiteType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_Info{}
	}
	return t.Type
}

type AccountMetrics_AccountMetrics_Users_HostCount struct {
	Data  [][]float64           "json:\"data,omitempty\" graphql:\"data\""
	Info  []string              "json:\"info,omitempty\" graphql:\"info\""
	Label string                "json:\"label\" graphql:\"label\""
	Sum   *float64              "json:\"sum,omitempty\" graphql:\"sum\""
	Units *cato_models.UnitType "json:\"units,omitempty\" graphql:\"units\""
}

func (t *AccountMetrics_AccountMetrics_Users_HostCount) GetData() [][]float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_HostCount{}
	}
	return t.Data
}
func (t *AccountMetrics_AccountMetrics_Users_HostCount) GetInfo() []string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_HostCount{}
	}
	return t.Info
}
func (t *AccountMetrics_AccountMetrics_Users_HostCount) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_HostCount{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Users_HostCount) GetSum() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_HostCount{}
	}
	return t.Sum
}
func (t *AccountMetrics_AccountMetrics_Users_HostCount) GetUnits() *cato_models.UnitType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_HostCount{}
	}
	return t.Units
}

type AccountMetrics_AccountMetrics_Users_FlowCount struct {
	Data  [][]float64           "json:\"data,omitempty\" graphql:\"data\""
	Info  []string              "json:\"info,omitempty\" graphql:\"info\""
	Label string                "json:\"label\" graphql:\"label\""
	Sum   *float64              "json:\"sum,omitempty\" graphql:\"sum\""
	Units *cato_models.UnitType "json:\"units,omitempty\" graphql:\"units\""
}

func (t *AccountMetrics_AccountMetrics_Users_FlowCount) GetData() [][]float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_FlowCount{}
	}
	return t.Data
}
func (t *AccountMetrics_AccountMetrics_Users_FlowCount) GetInfo() []string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_FlowCount{}
	}
	return t.Info
}
func (t *AccountMetrics_AccountMetrics_Users_FlowCount) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_FlowCount{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Users_FlowCount) GetSum() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_FlowCount{}
	}
	return t.Sum
}
func (t *AccountMetrics_AccountMetrics_Users_FlowCount) GetUnits() *cato_models.UnitType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_FlowCount{}
	}
	return t.Units
}

type AccountMetrics_AccountMetrics_Users_HostLimit struct {
	Data  [][]float64           "json:\"data,omitempty\" graphql:\"data\""
	Info  []string              "json:\"info,omitempty\" graphql:\"info\""
	Label string                "json:\"label\" graphql:\"label\""
	Sum   *float64              "json:\"sum,omitempty\" graphql:\"sum\""
	Units *cato_models.UnitType "json:\"units,omitempty\" graphql:\"units\""
}

func (t *AccountMetrics_AccountMetrics_Users_HostLimit) GetData() [][]float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_HostLimit{}
	}
	return t.Data
}
func (t *AccountMetrics_AccountMetrics_Users_HostLimit) GetInfo() []string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_HostLimit{}
	}
	return t.Info
}
func (t *AccountMetrics_AccountMetrics_Users_HostLimit) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_HostLimit{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Users_HostLimit) GetSum() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_HostLimit{}
	}
	return t.Sum
}
func (t *AccountMetrics_AccountMetrics_Users_HostLimit) GetUnits() *cato_models.UnitType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users_HostLimit{}
	}
	return t.Units
}

type AccountMetrics_AccountMetrics_Users struct {
	FlowCount  *AccountMetrics_AccountMetrics_Users_FlowCount    "json:\"flowCount,omitempty\" graphql:\"flowCount\""
	HostCount  *AccountMetrics_AccountMetrics_Users_HostCount    "json:\"hostCount,omitempty\" graphql:\"hostCount\""
	HostLimit  *AccountMetrics_AccountMetrics_Users_HostLimit    "json:\"hostLimit,omitempty\" graphql:\"hostLimit\""
	ID         *string                                           "json:\"id,omitempty\" graphql:\"id\""
	Info       *AccountMetrics_AccountMetrics_Users_Info         "json:\"info,omitempty\" graphql:\"info\""
	Interfaces []*AccountMetrics_AccountMetrics_Users_Interfaces "json:\"interfaces,omitempty\" graphql:\"interfaces\""
	Metrics    *AccountMetrics_AccountMetrics_Users_Metrics      "json:\"metrics,omitempty\" graphql:\"metrics\""
	Name       *string                                           "json:\"name,omitempty\" graphql:\"name\""
}

func (t *AccountMetrics_AccountMetrics_Users) GetFlowCount() *AccountMetrics_AccountMetrics_Users_FlowCount {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users{}
	}
	return t.FlowCount
}
func (t *AccountMetrics_AccountMetrics_Users) GetHostCount() *AccountMetrics_AccountMetrics_Users_HostCount {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users{}
	}
	return t.HostCount
}
func (t *AccountMetrics_AccountMetrics_Users) GetHostLimit() *AccountMetrics_AccountMetrics_Users_HostLimit {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users{}
	}
	return t.HostLimit
}
func (t *AccountMetrics_AccountMetrics_Users) GetID() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users{}
	}
	return t.ID
}
func (t *AccountMetrics_AccountMetrics_Users) GetInfo() *AccountMetrics_AccountMetrics_Users_Info {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users{}
	}
	return t.Info
}
func (t *AccountMetrics_AccountMetrics_Users) GetInterfaces() []*AccountMetrics_AccountMetrics_Users_Interfaces {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users{}
	}
	return t.Interfaces
}
func (t *AccountMetrics_AccountMetrics_Users) GetMetrics() *AccountMetrics_AccountMetrics_Users_Metrics {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users{}
	}
	return t.Metrics
}
func (t *AccountMetrics_AccountMetrics_Users) GetName() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Users{}
	}
	return t.Name
}

type AccountMetrics_AccountMetrics_Timeseries struct {
	Data  [][]float64           "json:\"data,omitempty\" graphql:\"data\""
	Info  []string              "json:\"info,omitempty\" graphql:\"info\""
	Label string                "json:\"label\" graphql:\"label\""
	Sum   *float64              "json:\"sum,omitempty\" graphql:\"sum\""
	Units *cato_models.UnitType "json:\"units,omitempty\" graphql:\"units\""
}

func (t *AccountMetrics_AccountMetrics_Timeseries) GetData() [][]float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Timeseries{}
	}
	return t.Data
}
func (t *AccountMetrics_AccountMetrics_Timeseries) GetInfo() []string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Timeseries{}
	}
	return t.Info
}
func (t *AccountMetrics_AccountMetrics_Timeseries) GetLabel() string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Timeseries{}
	}
	return t.Label
}
func (t *AccountMetrics_AccountMetrics_Timeseries) GetSum() *float64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Timeseries{}
	}
	return t.Sum
}
func (t *AccountMetrics_AccountMetrics_Timeseries) GetUnits() *cato_models.UnitType {
	if t == nil {
		t = &AccountMetrics_AccountMetrics_Timeseries{}
	}
	return t.Units
}

type AccountMetrics_AccountMetrics struct {
	From        *string                                     "json:\"from,omitempty\" graphql:\"from\""
	Granularity *int64                                      "json:\"granularity,omitempty\" graphql:\"granularity\""
	ID          *string                                     "json:\"id,omitempty\" graphql:\"id\""
	Sites       []*AccountMetrics_AccountMetrics_Sites      "json:\"sites,omitempty\" graphql:\"sites\""
	Timeseries  []*AccountMetrics_AccountMetrics_Timeseries "json:\"timeseries,omitempty\" graphql:\"timeseries\""
	To          *string                                     "json:\"to,omitempty\" graphql:\"to\""
	Users       []*AccountMetrics_AccountMetrics_Users      "json:\"users,omitempty\" graphql:\"users\""
}

func (t *AccountMetrics_AccountMetrics) GetFrom() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics{}
	}
	return t.From
}
func (t *AccountMetrics_AccountMetrics) GetGranularity() *int64 {
	if t == nil {
		t = &AccountMetrics_AccountMetrics{}
	}
	return t.Granularity
}
func (t *AccountMetrics_AccountMetrics) GetID() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics{}
	}
	return t.ID
}
func (t *AccountMetrics_AccountMetrics) GetSites() []*AccountMetrics_AccountMetrics_Sites {
	if t == nil {
		t = &AccountMetrics_AccountMetrics{}
	}
	return t.Sites
}
func (t *AccountMetrics_AccountMetrics) GetTimeseries() []*AccountMetrics_AccountMetrics_Timeseries {
	if t == nil {
		t = &AccountMetrics_AccountMetrics{}
	}
	return t.Timeseries
}
func (t *AccountMetrics_AccountMetrics) GetTo() *string {
	if t == nil {
		t = &AccountMetrics_AccountMetrics{}
	}
	return t.To
}
func (t *AccountMetrics_AccountMetrics) GetUsers() []*AccountMetrics_AccountMetrics_Users {
	if t == nil {
		t = &AccountMetrics_AccountMetrics{}
	}
	return t.Users
}

type AccountRoles_AccountRoles_Items struct {
	Description  *string "json:\"description,omitempty\" graphql:\"description\""
	ID           string  "json:\"id\" graphql:\"id\""
	IsPredefined bool    "json:\"isPredefined\" graphql:\"isPredefined\""
	Name         string  "json:\"name\" graphql:\"name\""
}

func (t *AccountRoles_AccountRoles_Items) GetDescription() *string {
	if t == nil {
		t = &AccountRoles_AccountRoles_Items{}
	}
	return t.Description
}
func (t *AccountRoles_AccountRoles_Items) GetID() string {
	if t == nil {
		t = &AccountRoles_AccountRoles_Items{}
	}
	return t.ID
}
func (t *AccountRoles_AccountRoles_Items) GetIsPredefined() bool {
	if t == nil {
		t = &AccountRoles_AccountRoles_Items{}
	}
	return t.IsPredefined
}
func (t *AccountRoles_AccountRoles_Items) GetName() string {
	if t == nil {
		t = &AccountRoles_AccountRoles_Items{}
	}
	return t.Name
}

type AccountRoles_AccountRoles struct {
	Items []*AccountRoles_AccountRoles_Items "json:\"items\" graphql:\"items\""
	Total int64                              "json:\"total\" graphql:\"total\""
}

func (t *AccountRoles_AccountRoles) GetItems() []*AccountRoles_AccountRoles_Items {
	if t == nil {
		t = &AccountRoles_AccountRoles{}
	}
	return t.Items
}
func (t *AccountRoles_AccountRoles) GetTotal() int64 {
	if t == nil {
		t = &AccountRoles_AccountRoles{}
	}
	return t.Total
}

type AccountSnapshot_AccountSnapshot_Sites_HaStatusSiteSnapshot struct {
	Keepalive       *cato_models.HaSubStatus "json:\"keepalive,omitempty\" graphql:\"keepalive\""
	Readiness       *cato_models.HaReadiness "json:\"readiness,omitempty\" graphql:\"readiness\""
	SocketVersion   *cato_models.HaSubStatus "json:\"socketVersion,omitempty\" graphql:\"socketVersion\""
	WanConnectivity *cato_models.HaSubStatus "json:\"wanConnectivity,omitempty\" graphql:\"wanConnectivity\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_HaStatusSiteSnapshot) GetKeepalive() *cato_models.HaSubStatus {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_HaStatusSiteSnapshot{}
	}
	return t.Keepalive
}
func (t *AccountSnapshot_AccountSnapshot_Sites_HaStatusSiteSnapshot) GetReadiness() *cato_models.HaReadiness {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_HaStatusSiteSnapshot{}
	}
	return t.Readiness
}
func (t *AccountSnapshot_AccountSnapshot_Sites_HaStatusSiteSnapshot) GetSocketVersion() *cato_models.HaSubStatus {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_HaStatusSiteSnapshot{}
	}
	return t.SocketVersion
}
func (t *AccountSnapshot_AccountSnapshot_Sites_HaStatusSiteSnapshot) GetWanConnectivity() *cato_models.HaSubStatus {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_HaStatusSiteSnapshot{}
	}
	return t.WanConnectivity
}

type AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot struct {
	City        *string  "json:\"city,omitempty\" graphql:\"city\""
	CountryCode *string  "json:\"countryCode,omitempty\" graphql:\"countryCode\""
	CountryName *string  "json:\"countryName,omitempty\" graphql:\"countryName\""
	IP          *string  "json:\"ip,omitempty\" graphql:\"ip\""
	Latitude    *float64 "json:\"latitude,omitempty\" graphql:\"latitude\""
	Longitude   *float64 "json:\"longitude,omitempty\" graphql:\"longitude\""
	Provider    *string  "json:\"provider,omitempty\" graphql:\"provider\""
	State       *string  "json:\"state,omitempty\" graphql:\"state\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetCity() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.City
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetCountryCode() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.CountryCode
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetCountryName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.CountryName
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.IP
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetLatitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.Latitude
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetLongitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.Longitude
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetProvider() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.Provider
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetState() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.State
}

type AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot struct {
	DestType            *string "json:\"destType,omitempty\" graphql:\"destType\""
	DownstreamBandwidth *int64  "json:\"downstreamBandwidth,omitempty\" graphql:\"downstreamBandwidth\""
	ID                  string  "json:\"id\" graphql:\"id\""
	Name                *string "json:\"name,omitempty\" graphql:\"name\""
	UpstreamBandwidth   *int64  "json:\"upstreamBandwidth,omitempty\" graphql:\"upstreamBandwidth\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot) GetDestType() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot{}
	}
	return t.DestType
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot) GetDownstreamBandwidth() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot{}
	}
	return t.DownstreamBandwidth
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot) GetID() string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot) GetName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot{}
	}
	return t.Name
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot) GetUpstreamBandwidth() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot{}
	}
	return t.UpstreamBandwidth
}

type AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot struct {
	Apn                 *string                                  "json:\"apn,omitempty\" graphql:\"apn\""
	ApnSelectionMethod  *cato_models.ApnMethod                   "json:\"apnSelectionMethod,omitempty\" graphql:\"apnSelectionMethod\""
	DisconnectionReason *cato_models.CellularDisconnectionReason "json:\"disconnectionReason,omitempty\" graphql:\"disconnectionReason\""
	Iccid               *string                                  "json:\"iccid,omitempty\" graphql:\"iccid\""
	Imei                *string                                  "json:\"imei,omitempty\" graphql:\"imei\""
	IsModemConnected    bool                                     "json:\"isModemConnected\" graphql:\"isModemConnected\""
	IsModemSuspended    bool                                     "json:\"isModemSuspended\" graphql:\"isModemSuspended\""
	IsRoamingAllowed    bool                                     "json:\"isRoamingAllowed\" graphql:\"isRoamingAllowed\""
	IsSimSlot1Detected  bool                                     "json:\"isSimSlot1Detected\" graphql:\"isSimSlot1Detected\""
	IsSimSlot2Detected  bool                                     "json:\"isSimSlot2Detected\" graphql:\"isSimSlot2Detected\""
	ModemStatus         *cato_models.CellularModemStatus         "json:\"modemStatus,omitempty\" graphql:\"modemStatus\""
	NetworkType         *cato_models.CellularNetworkType         "json:\"networkType,omitempty\" graphql:\"networkType\""
	OperatorName        *string                                  "json:\"operatorName,omitempty\" graphql:\"operatorName\""
	SignalStrength      *string                                  "json:\"signalStrength,omitempty\" graphql:\"signalStrength\""
	SimNumber           *string                                  "json:\"simNumber,omitempty\" graphql:\"simNumber\""
	SimSlotID           *int64                                   "json:\"simSlotId,omitempty\" graphql:\"simSlotId\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetApn() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.Apn
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetApnSelectionMethod() *cato_models.ApnMethod {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.ApnSelectionMethod
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetDisconnectionReason() *cato_models.CellularDisconnectionReason {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.DisconnectionReason
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIccid() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.Iccid
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetImei() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.Imei
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIsModemConnected() bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.IsModemConnected
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIsModemSuspended() bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.IsModemSuspended
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIsRoamingAllowed() bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.IsRoamingAllowed
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIsSimSlot1Detected() bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.IsSimSlot1Detected
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIsSimSlot2Detected() bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.IsSimSlot2Detected
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetModemStatus() *cato_models.CellularModemStatus {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.ModemStatus
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetNetworkType() *cato_models.CellularNetworkType {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.NetworkType
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetOperatorName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.OperatorName
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetSignalStrength() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.SignalStrength
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetSimNumber() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.SimNumber
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetSimSlotID() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.SimSlotID
}

type AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces struct {
	CellularInterfaceInfoInterfaceSnapshot *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot "json:\"cellularInterfaceInfoInterfaceSnapshot,omitempty\" graphql:\"cellularInterfaceInfoInterfaceSnapshot\""
	Connected                              *bool                                                                                            "json:\"connected,omitempty\" graphql:\"connected\""
	ID                                     *string                                                                                          "json:\"id,omitempty\" graphql:\"id\""
	InfoInterfaceSnapshot                  *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot                  "json:\"infoInterfaceSnapshot,omitempty\" graphql:\"infoInterfaceSnapshot\""
	Name                                   *string                                                                                          "json:\"name,omitempty\" graphql:\"name\""
	NaturalOrder                           *int64                                                                                           "json:\"naturalOrder,omitempty\" graphql:\"naturalOrder\""
	PhysicalPort                           *int64                                                                                           "json:\"physicalPort,omitempty\" graphql:\"physicalPort\""
	PopName                                *string                                                                                          "json:\"popName,omitempty\" graphql:\"popName\""
	PreviousPopID                          *int64                                                                                           "json:\"previousPopID,omitempty\" graphql:\"previousPopID\""
	PreviousPopName                        *string                                                                                          "json:\"previousPopName,omitempty\" graphql:\"previousPopName\""
	TunnelConnectionReason                 *string                                                                                          "json:\"tunnelConnectionReason,omitempty\" graphql:\"tunnelConnectionReason\""
	TunnelRemoteIP                         *string                                                                                          "json:\"tunnelRemoteIP,omitempty\" graphql:\"tunnelRemoteIP\""
	TunnelRemoteIPInfoInterfaceSnapshot    *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot    "json:\"tunnelRemoteIPInfoInterfaceSnapshot,omitempty\" graphql:\"tunnelRemoteIPInfoInterfaceSnapshot\""
	TunnelUptime                           *int64                                                                                           "json:\"tunnelUptime,omitempty\" graphql:\"tunnelUptime\""
	Type                                   *string                                                                                          "json:\"type,omitempty\" graphql:\"type\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetCellularInterfaceInfoInterfaceSnapshot() *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.CellularInterfaceInfoInterfaceSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetConnected() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.Connected
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetInfoInterfaceSnapshot() *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_InfoInterfaceSnapshot {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.InfoInterfaceSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.Name
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetNaturalOrder() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.NaturalOrder
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetPhysicalPort() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.PhysicalPort
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetPopName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.PopName
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetPreviousPopID() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.PreviousPopID
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetPreviousPopName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.PreviousPopName
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetTunnelConnectionReason() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.TunnelConnectionReason
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetTunnelRemoteIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.TunnelRemoteIP
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetTunnelRemoteIPInfoInterfaceSnapshot() *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.TunnelRemoteIPInfoInterfaceSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetTunnelUptime() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.TunnelUptime
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces) GetType() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces{}
	}
	return t.Type
}

type AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection struct {
	City        *string  "json:\"city,omitempty\" graphql:\"city\""
	CountryCode *string  "json:\"countryCode,omitempty\" graphql:\"countryCode\""
	CountryName *string  "json:\"countryName,omitempty\" graphql:\"countryName\""
	IP          *string  "json:\"ip,omitempty\" graphql:\"ip\""
	Latitude    *float64 "json:\"latitude,omitempty\" graphql:\"latitude\""
	Longitude   *float64 "json:\"longitude,omitempty\" graphql:\"longitude\""
	Provider    *string  "json:\"provider,omitempty\" graphql:\"provider\""
	State       *string  "json:\"state,omitempty\" graphql:\"state\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetCity() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.City
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetCountryCode() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.CountryCode
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetCountryName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.CountryName
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.IP
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetLatitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.Latitude
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetLongitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.Longitude
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetProvider() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.Provider
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetState() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.State
}

type AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections struct {
	DeviceName                   *string                                                                                       "json:\"deviceName,omitempty\" graphql:\"deviceName\""
	Duration                     *int64                                                                                        "json:\"duration,omitempty\" graphql:\"duration\""
	InterfaceName                *string                                                                                       "json:\"interfaceName,omitempty\" graphql:\"interfaceName\""
	LastConnected                *string                                                                                       "json:\"lastConnected,omitempty\" graphql:\"lastConnected\""
	PopName                      *string                                                                                       "json:\"popName,omitempty\" graphql:\"popName\""
	RemoteIP                     *string                                                                                       "json:\"remoteIP,omitempty\" graphql:\"remoteIP\""
	RemoteIPInfoRecentConnection *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection "json:\"remoteIPInfoRecentConnection,omitempty\" graphql:\"remoteIPInfoRecentConnection\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections) GetDeviceName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections{}
	}
	return t.DeviceName
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections) GetDuration() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections{}
	}
	return t.Duration
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections) GetInterfaceName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections{}
	}
	return t.InterfaceName
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections) GetLastConnected() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections{}
	}
	return t.LastConnected
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections) GetPopName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections{}
	}
	return t.PopName
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections) GetRemoteIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections{}
	}
	return t.RemoteIP
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections) GetRemoteIPInfoRecentConnection() *AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections_RemoteIPInfoRecentConnection {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections{}
	}
	return t.RemoteIPInfoRecentConnection
}

type AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo struct {
	ID                 *string                     "json:\"id,omitempty\" graphql:\"id\""
	IsPrimary          *bool                       "json:\"isPrimary,omitempty\" graphql:\"isPrimary\""
	PlatformSocketInfo *cato_models.SocketPlatform "json:\"platformSocketInfo,omitempty\" graphql:\"platformSocketInfo\""
	Serial             *string                     "json:\"serial,omitempty\" graphql:\"serial\""
	Version            *string                     "json:\"version,omitempty\" graphql:\"version\""
	VersionUpdateTime  *string                     "json:\"versionUpdateTime,omitempty\" graphql:\"versionUpdateTime\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo) GetIsPrimary() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo{}
	}
	return t.IsPrimary
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo) GetPlatformSocketInfo() *cato_models.SocketPlatform {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo{}
	}
	return t.PlatformSocketInfo
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo) GetSerial() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo{}
	}
	return t.Serial
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo) GetVersion() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo{}
	}
	return t.Version
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo) GetVersionUpdateTime() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo{}
	}
	return t.VersionUpdateTime
}

type AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState struct {
	Duplex    *string "json:\"duplex,omitempty\" graphql:\"duplex\""
	ID        *string "json:\"id,omitempty\" graphql:\"id\""
	LinkSpeed *string "json:\"linkSpeed,omitempty\" graphql:\"linkSpeed\""
	MediaIn   *bool   "json:\"mediaIn,omitempty\" graphql:\"mediaIn\""
	Up        *bool   "json:\"up,omitempty\" graphql:\"up\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState) GetDuplex() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState{}
	}
	return t.Duplex
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState) GetLinkSpeed() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState{}
	}
	return t.LinkSpeed
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState) GetMediaIn() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState{}
	}
	return t.MediaIn
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState) GetUp() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState{}
	}
	return t.Up
}

type AccountSnapshot_AccountSnapshot_Sites_Devices struct {
	Connected           *bool                                                                "json:\"connected,omitempty\" graphql:\"connected\""
	ConnectedSince      *string                                                              "json:\"connectedSince,omitempty\" graphql:\"connectedSince\""
	HaRole              *string                                                              "json:\"haRole,omitempty\" graphql:\"haRole\""
	ID                  *string                                                              "json:\"id,omitempty\" graphql:\"id\""
	Identifier          *string                                                              "json:\"identifier,omitempty\" graphql:\"identifier\""
	Interfaces          []*AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces          "json:\"interfaces,omitempty\" graphql:\"interfaces\""
	InterfacesLinkState []*AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState "json:\"interfacesLinkState,omitempty\" graphql:\"interfacesLinkState\""
	InternalIP          *string                                                              "json:\"internalIP,omitempty\" graphql:\"internalIP\""
	LastConnected       *string                                                              "json:\"lastConnected,omitempty\" graphql:\"lastConnected\""
	LastDuration        *int64                                                               "json:\"lastDuration,omitempty\" graphql:\"lastDuration\""
	LastPopID           *int64                                                               "json:\"lastPopID,omitempty\" graphql:\"lastPopID\""
	LastPopName         *string                                                              "json:\"lastPopName,omitempty\" graphql:\"lastPopName\""
	MfaCreationTime     *int64                                                               "json:\"mfaCreationTime,omitempty\" graphql:\"mfaCreationTime\""
	MfaExpirationTime   *int64                                                               "json:\"mfaExpirationTime,omitempty\" graphql:\"mfaExpirationTime\""
	Name                *string                                                              "json:\"name,omitempty\" graphql:\"name\""
	OsType              *string                                                              "json:\"osType,omitempty\" graphql:\"osType\""
	OsVersion           *string                                                              "json:\"osVersion,omitempty\" graphql:\"osVersion\""
	RecentConnections   []*AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections   "json:\"recentConnections,omitempty\" graphql:\"recentConnections\""
	ReleaseGroup        *string                                                              "json:\"releaseGroup,omitempty\" graphql:\"releaseGroup\""
	SocketInfo          *AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo            "json:\"socketInfo,omitempty\" graphql:\"socketInfo\""
	Type                *string                                                              "json:\"type,omitempty\" graphql:\"type\""
	Version             *string                                                              "json:\"version,omitempty\" graphql:\"version\""
	VersionNumber       *int64                                                               "json:\"versionNumber,omitempty\" graphql:\"versionNumber\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetConnected() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.Connected
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetConnectedSince() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.ConnectedSince
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetHaRole() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.HaRole
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetIdentifier() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.Identifier
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetInterfaces() []*AccountSnapshot_AccountSnapshot_Sites_Devices_Interfaces {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.Interfaces
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetInterfacesLinkState() []*AccountSnapshot_AccountSnapshot_Sites_Devices_InterfacesLinkState {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.InterfacesLinkState
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetInternalIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.InternalIP
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetLastConnected() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.LastConnected
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetLastDuration() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.LastDuration
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetLastPopID() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.LastPopID
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetLastPopName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.LastPopName
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetMfaCreationTime() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.MfaCreationTime
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetMfaExpirationTime() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.MfaExpirationTime
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.Name
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetOsType() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.OsType
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetOsVersion() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.OsVersion
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetRecentConnections() []*AccountSnapshot_AccountSnapshot_Sites_Devices_RecentConnections {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.RecentConnections
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetReleaseGroup() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.ReleaseGroup
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetSocketInfo() *AccountSnapshot_AccountSnapshot_Sites_Devices_SocketInfo {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.SocketInfo
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetType() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.Type
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetVersion() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.Version
}
func (t *AccountSnapshot_AccountSnapshot_Sites_Devices) GetVersionNumber() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_Devices{}
	}
	return t.VersionNumber
}

type AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces struct {
	DestType            *string "json:\"destType,omitempty\" graphql:\"destType\""
	DownstreamBandwidth *int64  "json:\"downstreamBandwidth,omitempty\" graphql:\"downstreamBandwidth\""
	ID                  string  "json:\"id\" graphql:\"id\""
	Name                *string "json:\"name,omitempty\" graphql:\"name\""
	UpstreamBandwidth   *int64  "json:\"upstreamBandwidth,omitempty\" graphql:\"upstreamBandwidth\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces) GetDestType() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces{}
	}
	return t.DestType
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces) GetDownstreamBandwidth() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces{}
	}
	return t.DownstreamBandwidth
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces) GetID() string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces) GetName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces{}
	}
	return t.Name
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces) GetUpstreamBandwidth() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces{}
	}
	return t.UpstreamBandwidth
}

type AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets struct {
	ID                 *string                     "json:\"id,omitempty\" graphql:\"id\""
	IsPrimary          *bool                       "json:\"isPrimary,omitempty\" graphql:\"isPrimary\""
	PlatformSocketInfo *cato_models.SocketPlatform "json:\"platformSocketInfo,omitempty\" graphql:\"platformSocketInfo\""
	Serial             *string                     "json:\"serial,omitempty\" graphql:\"serial\""
	Version            *string                     "json:\"version,omitempty\" graphql:\"version\""
	VersionUpdateTime  *string                     "json:\"versionUpdateTime,omitempty\" graphql:\"versionUpdateTime\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets) GetIsPrimary() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets{}
	}
	return t.IsPrimary
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets) GetPlatformSocketInfo() *cato_models.SocketPlatform {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets{}
	}
	return t.PlatformSocketInfo
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets) GetSerial() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets{}
	}
	return t.Serial
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets) GetVersion() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets{}
	}
	return t.Version
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets) GetVersionUpdateTime() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets{}
	}
	return t.VersionUpdateTime
}

type AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Ipsec struct {
	CatoIP     *string "json:\"catoIP,omitempty\" graphql:\"catoIP\""
	IkeVersion *int64  "json:\"ikeVersion,omitempty\" graphql:\"ikeVersion\""
	IsPrimary  *bool   "json:\"isPrimary,omitempty\" graphql:\"isPrimary\""
	RemoteIP   *string "json:\"remoteIP,omitempty\" graphql:\"remoteIP\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Ipsec) GetCatoIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Ipsec{}
	}
	return t.CatoIP
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Ipsec) GetIkeVersion() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Ipsec{}
	}
	return t.IkeVersion
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Ipsec) GetIsPrimary() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Ipsec{}
	}
	return t.IsPrimary
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Ipsec) GetRemoteIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Ipsec{}
	}
	return t.RemoteIP
}

type AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot struct {
	ConnType     *cato_models.ProtoType                                               "json:\"connType,omitempty\" graphql:\"connType\""
	CountryCode  *string                                                              "json:\"countryCode,omitempty\" graphql:\"countryCode\""
	CountryName  *string                                                              "json:\"countryName,omitempty\" graphql:\"countryName\""
	CreationTime *string                                                              "json:\"creationTime,omitempty\" graphql:\"creationTime\""
	Description  *string                                                              "json:\"description,omitempty\" graphql:\"description\""
	Interfaces   []*AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces "json:\"interfaces,omitempty\" graphql:\"interfaces\""
	Ipsec        []*AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Ipsec      "json:\"ipsec,omitempty\" graphql:\"ipsec\""
	IsHa         *bool                                                                "json:\"isHA,omitempty\" graphql:\"isHA\""
	Name         *string                                                              "json:\"name,omitempty\" graphql:\"name\""
	Region       *string                                                              "json:\"region,omitempty\" graphql:\"region\""
	Sockets      []*AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets    "json:\"sockets,omitempty\" graphql:\"sockets\""
	Type         *cato_models.SiteType                                                "json:\"type,omitempty\" graphql:\"type\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetConnType() *cato_models.ProtoType {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.ConnType
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetCountryCode() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.CountryCode
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetCountryName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.CountryName
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetCreationTime() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.CreationTime
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetDescription() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.Description
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetInterfaces() []*AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Interfaces {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.Interfaces
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetIpsec() []*AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Ipsec {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.Ipsec
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetIsHa() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.IsHa
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.Name
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetRegion() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.Region
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetSockets() []*AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot_Sockets {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.Sockets
}
func (t *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot) GetType() *cato_models.SiteType {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot{}
	}
	return t.Type
}

type AccountSnapshot_AccountSnapshot_Sites struct {
	AltWanStatus                   *string                                                     "json:\"altWanStatus,omitempty\" graphql:\"altWanStatus\""
	ConnectedSince                 *string                                                     "json:\"connectedSince,omitempty\" graphql:\"connectedSince\""
	ConnectivityStatusSiteSnapshot *cato_models.ConnectivityStatus                             "json:\"connectivityStatusSiteSnapshot,omitempty\" graphql:\"connectivityStatusSiteSnapshot\""
	Devices                        []*AccountSnapshot_AccountSnapshot_Sites_Devices            "json:\"devices,omitempty\" graphql:\"devices\""
	HaStatusSiteSnapshot           *AccountSnapshot_AccountSnapshot_Sites_HaStatusSiteSnapshot "json:\"haStatusSiteSnapshot,omitempty\" graphql:\"haStatusSiteSnapshot\""
	HostCount                      *int64                                                      "json:\"hostCount,omitempty\" graphql:\"hostCount\""
	ID                             *string                                                     "json:\"id,omitempty\" graphql:\"id\""
	InfoSiteSnapshot               *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot     "json:\"infoSiteSnapshot,omitempty\" graphql:\"infoSiteSnapshot\""
	LastConnected                  *string                                                     "json:\"lastConnected,omitempty\" graphql:\"lastConnected\""
	OperationalStatusSiteSnapshot  *scalars.OperationalStatus                                  "json:\"operationalStatusSiteSnapshot,omitempty\" graphql:\"operationalStatusSiteSnapshot\""
	PopName                        *string                                                     "json:\"popName,omitempty\" graphql:\"popName\""
	ProtoID                        *int64                                                      "json:\"protoId,omitempty\" graphql:\"protoId\""
}

func (t *AccountSnapshot_AccountSnapshot_Sites) GetAltWanStatus() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.AltWanStatus
}
func (t *AccountSnapshot_AccountSnapshot_Sites) GetConnectedSince() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.ConnectedSince
}
func (t *AccountSnapshot_AccountSnapshot_Sites) GetConnectivityStatusSiteSnapshot() *cato_models.ConnectivityStatus {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.ConnectivityStatusSiteSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Sites) GetDevices() []*AccountSnapshot_AccountSnapshot_Sites_Devices {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.Devices
}
func (t *AccountSnapshot_AccountSnapshot_Sites) GetHaStatusSiteSnapshot() *AccountSnapshot_AccountSnapshot_Sites_HaStatusSiteSnapshot {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.HaStatusSiteSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Sites) GetHostCount() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.HostCount
}
func (t *AccountSnapshot_AccountSnapshot_Sites) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Sites) GetInfoSiteSnapshot() *AccountSnapshot_AccountSnapshot_Sites_InfoSiteSnapshot {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.InfoSiteSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Sites) GetLastConnected() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.LastConnected
}
func (t *AccountSnapshot_AccountSnapshot_Sites) GetOperationalStatusSiteSnapshot() *scalars.OperationalStatus {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.OperationalStatusSiteSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Sites) GetPopName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.PopName
}
func (t *AccountSnapshot_AccountSnapshot_Sites) GetProtoID() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Sites{}
	}
	return t.ProtoID
}

type AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot struct {
	City        *string  "json:\"city,omitempty\" graphql:\"city\""
	CountryCode *string  "json:\"countryCode,omitempty\" graphql:\"countryCode\""
	CountryName *string  "json:\"countryName,omitempty\" graphql:\"countryName\""
	IP          *string  "json:\"ip,omitempty\" graphql:\"ip\""
	Latitude    *float64 "json:\"latitude,omitempty\" graphql:\"latitude\""
	Longitude   *float64 "json:\"longitude,omitempty\" graphql:\"longitude\""
	Provider    *string  "json:\"provider,omitempty\" graphql:\"provider\""
	State       *string  "json:\"state,omitempty\" graphql:\"state\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot) GetCity() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot{}
	}
	return t.City
}
func (t *AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot) GetCountryCode() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot{}
	}
	return t.CountryCode
}
func (t *AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot) GetCountryName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot{}
	}
	return t.CountryName
}
func (t *AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot) GetIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot{}
	}
	return t.IP
}
func (t *AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot) GetLatitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot{}
	}
	return t.Latitude
}
func (t *AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot) GetLongitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot{}
	}
	return t.Longitude
}
func (t *AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot) GetProvider() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot{}
	}
	return t.Provider
}
func (t *AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot) GetState() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot{}
	}
	return t.State
}

type AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot struct {
	City        *string  "json:\"city,omitempty\" graphql:\"city\""
	CountryCode *string  "json:\"countryCode,omitempty\" graphql:\"countryCode\""
	CountryName *string  "json:\"countryName,omitempty\" graphql:\"countryName\""
	IP          *string  "json:\"ip,omitempty\" graphql:\"ip\""
	Latitude    *float64 "json:\"latitude,omitempty\" graphql:\"latitude\""
	Longitude   *float64 "json:\"longitude,omitempty\" graphql:\"longitude\""
	Provider    *string  "json:\"provider,omitempty\" graphql:\"provider\""
	State       *string  "json:\"state,omitempty\" graphql:\"state\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetCity() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.City
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetCountryCode() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.CountryCode
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetCountryName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.CountryName
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.IP
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetLatitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.Latitude
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetLongitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.Longitude
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetProvider() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.Provider
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot) GetState() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot{}
	}
	return t.State
}

type AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot struct {
	DestType            *string "json:\"destType,omitempty\" graphql:\"destType\""
	DownstreamBandwidth *int64  "json:\"downstreamBandwidth,omitempty\" graphql:\"downstreamBandwidth\""
	ID                  string  "json:\"id\" graphql:\"id\""
	Name                *string "json:\"name,omitempty\" graphql:\"name\""
	UpstreamBandwidth   *int64  "json:\"upstreamBandwidth,omitempty\" graphql:\"upstreamBandwidth\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot) GetDestType() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot{}
	}
	return t.DestType
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot) GetDownstreamBandwidth() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot{}
	}
	return t.DownstreamBandwidth
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot) GetID() string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot) GetName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot{}
	}
	return t.Name
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot) GetUpstreamBandwidth() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot{}
	}
	return t.UpstreamBandwidth
}

type AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot struct {
	Apn                 *string                                  "json:\"apn,omitempty\" graphql:\"apn\""
	ApnSelectionMethod  *cato_models.ApnMethod                   "json:\"apnSelectionMethod,omitempty\" graphql:\"apnSelectionMethod\""
	DisconnectionReason *cato_models.CellularDisconnectionReason "json:\"disconnectionReason,omitempty\" graphql:\"disconnectionReason\""
	Iccid               *string                                  "json:\"iccid,omitempty\" graphql:\"iccid\""
	Imei                *string                                  "json:\"imei,omitempty\" graphql:\"imei\""
	IsModemConnected    bool                                     "json:\"isModemConnected\" graphql:\"isModemConnected\""
	IsModemSuspended    bool                                     "json:\"isModemSuspended\" graphql:\"isModemSuspended\""
	IsRoamingAllowed    bool                                     "json:\"isRoamingAllowed\" graphql:\"isRoamingAllowed\""
	IsSimSlot1Detected  bool                                     "json:\"isSimSlot1Detected\" graphql:\"isSimSlot1Detected\""
	IsSimSlot2Detected  bool                                     "json:\"isSimSlot2Detected\" graphql:\"isSimSlot2Detected\""
	ModemStatus         *cato_models.CellularModemStatus         "json:\"modemStatus,omitempty\" graphql:\"modemStatus\""
	NetworkType         *cato_models.CellularNetworkType         "json:\"networkType,omitempty\" graphql:\"networkType\""
	OperatorName        *string                                  "json:\"operatorName,omitempty\" graphql:\"operatorName\""
	SignalStrength      *string                                  "json:\"signalStrength,omitempty\" graphql:\"signalStrength\""
	SimNumber           *string                                  "json:\"simNumber,omitempty\" graphql:\"simNumber\""
	SimSlotID           *int64                                   "json:\"simSlotId,omitempty\" graphql:\"simSlotId\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetApn() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.Apn
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetApnSelectionMethod() *cato_models.ApnMethod {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.ApnSelectionMethod
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetDisconnectionReason() *cato_models.CellularDisconnectionReason {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.DisconnectionReason
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIccid() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.Iccid
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetImei() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.Imei
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIsModemConnected() bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.IsModemConnected
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIsModemSuspended() bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.IsModemSuspended
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIsRoamingAllowed() bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.IsRoamingAllowed
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIsSimSlot1Detected() bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.IsSimSlot1Detected
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetIsSimSlot2Detected() bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.IsSimSlot2Detected
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetModemStatus() *cato_models.CellularModemStatus {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.ModemStatus
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetNetworkType() *cato_models.CellularNetworkType {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.NetworkType
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetOperatorName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.OperatorName
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetSignalStrength() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.SignalStrength
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetSimNumber() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.SimNumber
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot) GetSimSlotID() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot{}
	}
	return t.SimSlotID
}

type AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces struct {
	CellularInterfaceInfoInterfaceSnapshot *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot "json:\"cellularInterfaceInfoInterfaceSnapshot,omitempty\" graphql:\"cellularInterfaceInfoInterfaceSnapshot\""
	Connected                              *bool                                                                                            "json:\"connected,omitempty\" graphql:\"connected\""
	ID                                     *string                                                                                          "json:\"id,omitempty\" graphql:\"id\""
	InfoInterfaceSnapshot                  *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot                  "json:\"infoInterfaceSnapshot,omitempty\" graphql:\"infoInterfaceSnapshot\""
	Name                                   *string                                                                                          "json:\"name,omitempty\" graphql:\"name\""
	NaturalOrder                           *int64                                                                                           "json:\"naturalOrder,omitempty\" graphql:\"naturalOrder\""
	PhysicalPort                           *int64                                                                                           "json:\"physicalPort,omitempty\" graphql:\"physicalPort\""
	PopName                                *string                                                                                          "json:\"popName,omitempty\" graphql:\"popName\""
	PreviousPopID                          *int64                                                                                           "json:\"previousPopID,omitempty\" graphql:\"previousPopID\""
	PreviousPopName                        *string                                                                                          "json:\"previousPopName,omitempty\" graphql:\"previousPopName\""
	TunnelConnectionReason                 *string                                                                                          "json:\"tunnelConnectionReason,omitempty\" graphql:\"tunnelConnectionReason\""
	TunnelRemoteIP                         *string                                                                                          "json:\"tunnelRemoteIP,omitempty\" graphql:\"tunnelRemoteIP\""
	TunnelRemoteIPInfoInterfaceSnapshot    *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot    "json:\"tunnelRemoteIPInfoInterfaceSnapshot,omitempty\" graphql:\"tunnelRemoteIPInfoInterfaceSnapshot\""
	TunnelUptime                           *int64                                                                                           "json:\"tunnelUptime,omitempty\" graphql:\"tunnelUptime\""
	Type                                   *string                                                                                          "json:\"type,omitempty\" graphql:\"type\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetCellularInterfaceInfoInterfaceSnapshot() *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_CellularInterfaceInfoInterfaceSnapshot {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.CellularInterfaceInfoInterfaceSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetConnected() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.Connected
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetInfoInterfaceSnapshot() *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_InfoInterfaceSnapshot {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.InfoInterfaceSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.Name
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetNaturalOrder() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.NaturalOrder
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetPhysicalPort() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.PhysicalPort
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetPopName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.PopName
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetPreviousPopID() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.PreviousPopID
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetPreviousPopName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.PreviousPopName
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetTunnelConnectionReason() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.TunnelConnectionReason
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetTunnelRemoteIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.TunnelRemoteIP
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetTunnelRemoteIPInfoInterfaceSnapshot() *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces_TunnelRemoteIPInfoInterfaceSnapshot {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.TunnelRemoteIPInfoInterfaceSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetTunnelUptime() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.TunnelUptime
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces) GetType() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces{}
	}
	return t.Type
}

type AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection struct {
	City        *string  "json:\"city,omitempty\" graphql:\"city\""
	CountryCode *string  "json:\"countryCode,omitempty\" graphql:\"countryCode\""
	CountryName *string  "json:\"countryName,omitempty\" graphql:\"countryName\""
	IP          *string  "json:\"ip,omitempty\" graphql:\"ip\""
	Latitude    *float64 "json:\"latitude,omitempty\" graphql:\"latitude\""
	Longitude   *float64 "json:\"longitude,omitempty\" graphql:\"longitude\""
	Provider    *string  "json:\"provider,omitempty\" graphql:\"provider\""
	State       *string  "json:\"state,omitempty\" graphql:\"state\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetCity() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.City
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetCountryCode() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.CountryCode
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetCountryName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.CountryName
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.IP
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetLatitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.Latitude
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetLongitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.Longitude
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetProvider() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.Provider
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection) GetState() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection{}
	}
	return t.State
}

type AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections struct {
	DeviceName                   *string                                                                                       "json:\"deviceName,omitempty\" graphql:\"deviceName\""
	Duration                     *int64                                                                                        "json:\"duration,omitempty\" graphql:\"duration\""
	InterfaceName                *string                                                                                       "json:\"interfaceName,omitempty\" graphql:\"interfaceName\""
	LastConnected                *string                                                                                       "json:\"lastConnected,omitempty\" graphql:\"lastConnected\""
	PopName                      *string                                                                                       "json:\"popName,omitempty\" graphql:\"popName\""
	RemoteIP                     *string                                                                                       "json:\"remoteIP,omitempty\" graphql:\"remoteIP\""
	RemoteIPInfoRecentConnection *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection "json:\"remoteIPInfoRecentConnection,omitempty\" graphql:\"remoteIPInfoRecentConnection\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections) GetDeviceName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections{}
	}
	return t.DeviceName
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections) GetDuration() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections{}
	}
	return t.Duration
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections) GetInterfaceName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections{}
	}
	return t.InterfaceName
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections) GetLastConnected() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections{}
	}
	return t.LastConnected
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections) GetPopName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections{}
	}
	return t.PopName
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections) GetRemoteIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections{}
	}
	return t.RemoteIP
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections) GetRemoteIPInfoRecentConnection() *AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections_RemoteIPInfoRecentConnection {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections{}
	}
	return t.RemoteIPInfoRecentConnection
}

type AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo struct {
	ID                 *string                     "json:\"id,omitempty\" graphql:\"id\""
	IsPrimary          *bool                       "json:\"isPrimary,omitempty\" graphql:\"isPrimary\""
	PlatformSocketInfo *cato_models.SocketPlatform "json:\"platformSocketInfo,omitempty\" graphql:\"platformSocketInfo\""
	Serial             *string                     "json:\"serial,omitempty\" graphql:\"serial\""
	Version            *string                     "json:\"version,omitempty\" graphql:\"version\""
	VersionUpdateTime  *string                     "json:\"versionUpdateTime,omitempty\" graphql:\"versionUpdateTime\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo) GetIsPrimary() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo{}
	}
	return t.IsPrimary
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo) GetPlatformSocketInfo() *cato_models.SocketPlatform {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo{}
	}
	return t.PlatformSocketInfo
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo) GetSerial() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo{}
	}
	return t.Serial
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo) GetVersion() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo{}
	}
	return t.Version
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo) GetVersionUpdateTime() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo{}
	}
	return t.VersionUpdateTime
}

type AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState struct {
	Duplex    *string "json:\"duplex,omitempty\" graphql:\"duplex\""
	ID        *string "json:\"id,omitempty\" graphql:\"id\""
	LinkSpeed *string "json:\"linkSpeed,omitempty\" graphql:\"linkSpeed\""
	MediaIn   *bool   "json:\"mediaIn,omitempty\" graphql:\"mediaIn\""
	Up        *bool   "json:\"up,omitempty\" graphql:\"up\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState) GetDuplex() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState{}
	}
	return t.Duplex
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState) GetLinkSpeed() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState{}
	}
	return t.LinkSpeed
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState) GetMediaIn() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState{}
	}
	return t.MediaIn
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState) GetUp() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState{}
	}
	return t.Up
}

type AccountSnapshot_AccountSnapshot_Users_Devices struct {
	Connected           *bool                                                                "json:\"connected,omitempty\" graphql:\"connected\""
	ConnectedSince      *string                                                              "json:\"connectedSince,omitempty\" graphql:\"connectedSince\""
	HaRole              *string                                                              "json:\"haRole,omitempty\" graphql:\"haRole\""
	ID                  *string                                                              "json:\"id,omitempty\" graphql:\"id\""
	Identifier          *string                                                              "json:\"identifier,omitempty\" graphql:\"identifier\""
	Interfaces          []*AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces          "json:\"interfaces,omitempty\" graphql:\"interfaces\""
	InterfacesLinkState []*AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState "json:\"interfacesLinkState,omitempty\" graphql:\"interfacesLinkState\""
	InternalIP          *string                                                              "json:\"internalIP,omitempty\" graphql:\"internalIP\""
	LastConnected       *string                                                              "json:\"lastConnected,omitempty\" graphql:\"lastConnected\""
	LastDuration        *int64                                                               "json:\"lastDuration,omitempty\" graphql:\"lastDuration\""
	LastPopID           *int64                                                               "json:\"lastPopID,omitempty\" graphql:\"lastPopID\""
	LastPopName         *string                                                              "json:\"lastPopName,omitempty\" graphql:\"lastPopName\""
	MfaCreationTime     *int64                                                               "json:\"mfaCreationTime,omitempty\" graphql:\"mfaCreationTime\""
	MfaExpirationTime   *int64                                                               "json:\"mfaExpirationTime,omitempty\" graphql:\"mfaExpirationTime\""
	Name                *string                                                              "json:\"name,omitempty\" graphql:\"name\""
	OsType              *string                                                              "json:\"osType,omitempty\" graphql:\"osType\""
	OsVersion           *string                                                              "json:\"osVersion,omitempty\" graphql:\"osVersion\""
	RecentConnections   []*AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections   "json:\"recentConnections,omitempty\" graphql:\"recentConnections\""
	ReleaseGroup        *string                                                              "json:\"releaseGroup,omitempty\" graphql:\"releaseGroup\""
	SocketInfo          *AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo            "json:\"socketInfo,omitempty\" graphql:\"socketInfo\""
	Type                *string                                                              "json:\"type,omitempty\" graphql:\"type\""
	Version             *string                                                              "json:\"version,omitempty\" graphql:\"version\""
	VersionNumber       *int64                                                               "json:\"versionNumber,omitempty\" graphql:\"versionNumber\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetConnected() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.Connected
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetConnectedSince() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.ConnectedSince
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetHaRole() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.HaRole
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetIdentifier() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.Identifier
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetInterfaces() []*AccountSnapshot_AccountSnapshot_Users_Devices_Interfaces {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.Interfaces
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetInterfacesLinkState() []*AccountSnapshot_AccountSnapshot_Users_Devices_InterfacesLinkState {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.InterfacesLinkState
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetInternalIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.InternalIP
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetLastConnected() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.LastConnected
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetLastDuration() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.LastDuration
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetLastPopID() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.LastPopID
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetLastPopName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.LastPopName
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetMfaCreationTime() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.MfaCreationTime
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetMfaExpirationTime() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.MfaExpirationTime
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.Name
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetOsType() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.OsType
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetOsVersion() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.OsVersion
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetRecentConnections() []*AccountSnapshot_AccountSnapshot_Users_Devices_RecentConnections {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.RecentConnections
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetReleaseGroup() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.ReleaseGroup
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetSocketInfo() *AccountSnapshot_AccountSnapshot_Users_Devices_SocketInfo {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.SocketInfo
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetType() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.Type
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetVersion() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.Version
}
func (t *AccountSnapshot_AccountSnapshot_Users_Devices) GetVersionNumber() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_Devices{}
	}
	return t.VersionNumber
}

type AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot struct {
	AuthMethod   *string                    "json:\"authMethod,omitempty\" graphql:\"authMethod\""
	CreationTime *string                    "json:\"creationTime,omitempty\" graphql:\"creationTime\""
	Email        *string                    "json:\"email,omitempty\" graphql:\"email\""
	Name         *string                    "json:\"name,omitempty\" graphql:\"name\""
	Origin       *string                    "json:\"origin,omitempty\" graphql:\"origin\""
	PhoneNumber  *string                    "json:\"phoneNumber,omitempty\" graphql:\"phoneNumber\""
	Status       *scalars.OperationalStatus "json:\"status,omitempty\" graphql:\"status\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot) GetAuthMethod() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot{}
	}
	return t.AuthMethod
}
func (t *AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot) GetCreationTime() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot{}
	}
	return t.CreationTime
}
func (t *AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot) GetEmail() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot{}
	}
	return t.Email
}
func (t *AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot) GetName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot{}
	}
	return t.Name
}
func (t *AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot) GetOrigin() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot{}
	}
	return t.Origin
}
func (t *AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot) GetPhoneNumber() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot{}
	}
	return t.PhoneNumber
}
func (t *AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot) GetStatus() *scalars.OperationalStatus {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot{}
	}
	return t.Status
}

type AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo struct {
	City        *string  "json:\"city,omitempty\" graphql:\"city\""
	CountryCode *string  "json:\"countryCode,omitempty\" graphql:\"countryCode\""
	CountryName *string  "json:\"countryName,omitempty\" graphql:\"countryName\""
	IP          *string  "json:\"ip,omitempty\" graphql:\"ip\""
	Latitude    *float64 "json:\"latitude,omitempty\" graphql:\"latitude\""
	Longitude   *float64 "json:\"longitude,omitempty\" graphql:\"longitude\""
	Provider    *string  "json:\"provider,omitempty\" graphql:\"provider\""
	State       *string  "json:\"state,omitempty\" graphql:\"state\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo) GetCity() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo{}
	}
	return t.City
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo) GetCountryCode() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo{}
	}
	return t.CountryCode
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo) GetCountryName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo{}
	}
	return t.CountryName
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo) GetIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo{}
	}
	return t.IP
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo) GetLatitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo{}
	}
	return t.Latitude
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo) GetLongitude() *float64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo{}
	}
	return t.Longitude
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo) GetProvider() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo{}
	}
	return t.Provider
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo) GetState() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo{}
	}
	return t.State
}

type AccountSnapshot_AccountSnapshot_Users_RecentConnections struct {
	DeviceName    *string                                                               "json:\"deviceName,omitempty\" graphql:\"deviceName\""
	Duration      *int64                                                                "json:\"duration,omitempty\" graphql:\"duration\""
	InterfaceName *string                                                               "json:\"interfaceName,omitempty\" graphql:\"interfaceName\""
	LastConnected *string                                                               "json:\"lastConnected,omitempty\" graphql:\"lastConnected\""
	PopName       *string                                                               "json:\"popName,omitempty\" graphql:\"popName\""
	RemoteIP      *string                                                               "json:\"remoteIP,omitempty\" graphql:\"remoteIP\""
	RemoteIPInfo  *AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo "json:\"remoteIPInfo,omitempty\" graphql:\"remoteIPInfo\""
}

func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections) GetDeviceName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections{}
	}
	return t.DeviceName
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections) GetDuration() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections{}
	}
	return t.Duration
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections) GetInterfaceName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections{}
	}
	return t.InterfaceName
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections) GetLastConnected() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections{}
	}
	return t.LastConnected
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections) GetPopName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections{}
	}
	return t.PopName
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections) GetRemoteIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections{}
	}
	return t.RemoteIP
}
func (t *AccountSnapshot_AccountSnapshot_Users_RecentConnections) GetRemoteIPInfo() *AccountSnapshot_AccountSnapshot_Users_RecentConnections_RemoteIPInfo {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users_RecentConnections{}
	}
	return t.RemoteIPInfo
}

type AccountSnapshot_AccountSnapshot_Users struct {
	ConnectedInOffice              *bool                                                           "json:\"connectedInOffice,omitempty\" graphql:\"connectedInOffice\""
	ConnectivityStatusUserSnapshot *cato_models.ConnectivityStatus                                 "json:\"connectivityStatusUserSnapshot,omitempty\" graphql:\"connectivityStatusUserSnapshot\""
	DeviceName                     *string                                                         "json:\"deviceName,omitempty\" graphql:\"deviceName\""
	Devices                        []*AccountSnapshot_AccountSnapshot_Users_Devices                "json:\"devices,omitempty\" graphql:\"devices\""
	ID                             *string                                                         "json:\"id,omitempty\" graphql:\"id\""
	InfoUserSnapshot               *AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot         "json:\"infoUserSnapshot,omitempty\" graphql:\"infoUserSnapshot\""
	InternalIP                     *string                                                         "json:\"internalIP,omitempty\" graphql:\"internalIP\""
	LastConnected                  *string                                                         "json:\"lastConnected,omitempty\" graphql:\"lastConnected\""
	Name                           *string                                                         "json:\"name,omitempty\" graphql:\"name\""
	OperationalStatusUserSnapshot  *scalars.OperationalStatus                                      "json:\"operationalStatusUserSnapshot,omitempty\" graphql:\"operationalStatusUserSnapshot\""
	OsType                         *string                                                         "json:\"osType,omitempty\" graphql:\"osType\""
	OsVersion                      *string                                                         "json:\"osVersion,omitempty\" graphql:\"osVersion\""
	PopID                          *int64                                                          "json:\"popID,omitempty\" graphql:\"popID\""
	PopName                        *string                                                         "json:\"popName,omitempty\" graphql:\"popName\""
	RecentConnections              []*AccountSnapshot_AccountSnapshot_Users_RecentConnections      "json:\"recentConnections,omitempty\" graphql:\"recentConnections\""
	RemoteIP                       *string                                                         "json:\"remoteIP,omitempty\" graphql:\"remoteIP\""
	RemoteIPInfoUserSnapshot       *AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot "json:\"remoteIPInfoUserSnapshot,omitempty\" graphql:\"remoteIPInfoUserSnapshot\""
	Uptime                         *int64                                                          "json:\"uptime,omitempty\" graphql:\"uptime\""
	Version                        *string                                                         "json:\"version,omitempty\" graphql:\"version\""
	VersionNumber                  *int64                                                          "json:\"versionNumber,omitempty\" graphql:\"versionNumber\""
}

func (t *AccountSnapshot_AccountSnapshot_Users) GetConnectedInOffice() *bool {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.ConnectedInOffice
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetConnectivityStatusUserSnapshot() *cato_models.ConnectivityStatus {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.ConnectivityStatusUserSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetDeviceName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.DeviceName
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetDevices() []*AccountSnapshot_AccountSnapshot_Users_Devices {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.Devices
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetInfoUserSnapshot() *AccountSnapshot_AccountSnapshot_Users_InfoUserSnapshot {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.InfoUserSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetInternalIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.InternalIP
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetLastConnected() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.LastConnected
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.Name
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetOperationalStatusUserSnapshot() *scalars.OperationalStatus {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.OperationalStatusUserSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetOsType() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.OsType
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetOsVersion() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.OsVersion
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetPopID() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.PopID
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetPopName() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.PopName
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetRecentConnections() []*AccountSnapshot_AccountSnapshot_Users_RecentConnections {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.RecentConnections
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetRemoteIP() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.RemoteIP
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetRemoteIPInfoUserSnapshot() *AccountSnapshot_AccountSnapshot_Users_RemoteIPInfoUserSnapshot {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.RemoteIPInfoUserSnapshot
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetUptime() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.Uptime
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetVersion() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.Version
}
func (t *AccountSnapshot_AccountSnapshot_Users) GetVersionNumber() *int64 {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot_Users{}
	}
	return t.VersionNumber
}

type AccountSnapshot_AccountSnapshot struct {
	ID        *string                                  "json:\"id,omitempty\" graphql:\"id\""
	Sites     []*AccountSnapshot_AccountSnapshot_Sites "json:\"sites,omitempty\" graphql:\"sites\""
	Timestamp *string                                  "json:\"timestamp,omitempty\" graphql:\"timestamp\""
	Users     []*AccountSnapshot_AccountSnapshot_Users "json:\"users,omitempty\" graphql:\"users\""
}

func (t *AccountSnapshot_AccountSnapshot) GetID() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot{}
	}
	return t.ID
}
func (t *AccountSnapshot_AccountSnapshot) GetSites() []*AccountSnapshot_AccountSnapshot_Sites {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot{}
	}
	return t.Sites
}
func (t *AccountSnapshot_AccountSnapshot) GetTimestamp() *string {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot{}
	}
	return t.Timestamp
}
func (t *AccountSnapshot_AccountSnapshot) GetUsers() []*AccountSnapshot_AccountSnapshot_Users {
	if t == nil {
		t = &AccountSnapshot_AccountSnapshot{}
	}
	return t.Users
}

type AdminAddAdmin_Admin_AddAdmin struct {
	AdminID string "json:\"adminID\" graphql:\"adminID\""
}

func (t *AdminAddAdmin_Admin_AddAdmin) GetAdminID() string {
	if t == nil {
		t = &AdminAddAdmin_Admin_AddAdmin{}
	}
	return t.AdminID
}

type AdminAddAdmin_Admin struct {
	AddAdmin *AdminAddAdmin_Admin_AddAdmin "json:\"addAdmin,omitempty\" graphql:\"addAdmin\""
}

func (t *AdminAddAdmin_Admin) GetAddAdmin() *AdminAddAdmin_Admin_AddAdmin {
	if t == nil {
		t = &AdminAddAdmin_Admin{}
	}
	return t.AddAdmin
}

type AdminRemoveAdmin_Admin_RemoveAdmin struct {
	AdminID string "json:\"adminID\" graphql:\"adminID\""
}

func (t *AdminRemoveAdmin_Admin_RemoveAdmin) GetAdminID() string {
	if t == nil {
		t = &AdminRemoveAdmin_Admin_RemoveAdmin{}
	}
	return t.AdminID
}

type AdminRemoveAdmin_Admin struct {
	RemoveAdmin *AdminRemoveAdmin_Admin_RemoveAdmin "json:\"removeAdmin,omitempty\" graphql:\"removeAdmin\""
}

func (t *AdminRemoveAdmin_Admin) GetRemoveAdmin() *AdminRemoveAdmin_Admin_RemoveAdmin {
	if t == nil {
		t = &AdminRemoveAdmin_Admin{}
	}
	return t.RemoveAdmin
}

type AdminUpdateAdmin_Admin_UpdateAdmin struct {
	AdminID string "json:\"adminID\" graphql:\"adminID\""
}

func (t *AdminUpdateAdmin_Admin_UpdateAdmin) GetAdminID() string {
	if t == nil {
		t = &AdminUpdateAdmin_Admin_UpdateAdmin{}
	}
	return t.AdminID
}

type AdminUpdateAdmin_Admin struct {
	UpdateAdmin *AdminUpdateAdmin_Admin_UpdateAdmin "json:\"updateAdmin,omitempty\" graphql:\"updateAdmin\""
}

func (t *AdminUpdateAdmin_Admin) GetUpdateAdmin() *AdminUpdateAdmin_Admin_UpdateAdmin {
	if t == nil {
		t = &AdminUpdateAdmin_Admin{}
	}
	return t.UpdateAdmin
}

type Admin_Admin_ManagedRoles_Role struct {
	Description  *string "json:\"description,omitempty\" graphql:\"description\""
	ID           string  "json:\"id\" graphql:\"id\""
	IsPredefined bool    "json:\"isPredefined\" graphql:\"isPredefined\""
	Name         string  "json:\"name\" graphql:\"name\""
}

func (t *Admin_Admin_ManagedRoles_Role) GetDescription() *string {
	if t == nil {
		t = &Admin_Admin_ManagedRoles_Role{}
	}
	return t.Description
}
func (t *Admin_Admin_ManagedRoles_Role) GetID() string {
	if t == nil {
		t = &Admin_Admin_ManagedRoles_Role{}
	}
	return t.ID
}
func (t *Admin_Admin_ManagedRoles_Role) GetIsPredefined() bool {
	if t == nil {
		t = &Admin_Admin_ManagedRoles_Role{}
	}
	return t.IsPredefined
}
func (t *Admin_Admin_ManagedRoles_Role) GetName() string {
	if t == nil {
		t = &Admin_Admin_ManagedRoles_Role{}
	}
	return t.Name
}

type Admin_Admin_ManagedRoles_AllowedEntities struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *Admin_Admin_ManagedRoles_AllowedEntities) GetID() string {
	if t == nil {
		t = &Admin_Admin_ManagedRoles_AllowedEntities{}
	}
	return t.ID
}
func (t *Admin_Admin_ManagedRoles_AllowedEntities) GetName() *string {
	if t == nil {
		t = &Admin_Admin_ManagedRoles_AllowedEntities{}
	}
	return t.Name
}
func (t *Admin_Admin_ManagedRoles_AllowedEntities) GetType() *cato_models.EntityType {
	if t == nil {
		t = &Admin_Admin_ManagedRoles_AllowedEntities{}
	}
	return &t.Type
}

type Admin_Admin_ManagedRoles struct {
	AllowedAccounts []string                                    "json:\"allowedAccounts,omitempty\" graphql:\"allowedAccounts\""
	AllowedEntities []*Admin_Admin_ManagedRoles_AllowedEntities "json:\"allowedEntities,omitempty\" graphql:\"allowedEntities\""
	Role            Admin_Admin_ManagedRoles_Role               "json:\"role\" graphql:\"role\""
}

func (t *Admin_Admin_ManagedRoles) GetAllowedAccounts() []string {
	if t == nil {
		t = &Admin_Admin_ManagedRoles{}
	}
	return t.AllowedAccounts
}
func (t *Admin_Admin_ManagedRoles) GetAllowedEntities() []*Admin_Admin_ManagedRoles_AllowedEntities {
	if t == nil {
		t = &Admin_Admin_ManagedRoles{}
	}
	return t.AllowedEntities
}
func (t *Admin_Admin_ManagedRoles) GetRole() *Admin_Admin_ManagedRoles_Role {
	if t == nil {
		t = &Admin_Admin_ManagedRoles{}
	}
	return &t.Role
}

type Admin_Admin_ResellerRoles_Role struct {
	Description  *string "json:\"description,omitempty\" graphql:\"description\""
	ID           string  "json:\"id\" graphql:\"id\""
	IsPredefined bool    "json:\"isPredefined\" graphql:\"isPredefined\""
	Name         string  "json:\"name\" graphql:\"name\""
}

func (t *Admin_Admin_ResellerRoles_Role) GetDescription() *string {
	if t == nil {
		t = &Admin_Admin_ResellerRoles_Role{}
	}
	return t.Description
}
func (t *Admin_Admin_ResellerRoles_Role) GetID() string {
	if t == nil {
		t = &Admin_Admin_ResellerRoles_Role{}
	}
	return t.ID
}
func (t *Admin_Admin_ResellerRoles_Role) GetIsPredefined() bool {
	if t == nil {
		t = &Admin_Admin_ResellerRoles_Role{}
	}
	return t.IsPredefined
}
func (t *Admin_Admin_ResellerRoles_Role) GetName() string {
	if t == nil {
		t = &Admin_Admin_ResellerRoles_Role{}
	}
	return t.Name
}

type Admin_Admin_ResellerRoles_AllowedEntities struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *Admin_Admin_ResellerRoles_AllowedEntities) GetID() string {
	if t == nil {
		t = &Admin_Admin_ResellerRoles_AllowedEntities{}
	}
	return t.ID
}
func (t *Admin_Admin_ResellerRoles_AllowedEntities) GetName() *string {
	if t == nil {
		t = &Admin_Admin_ResellerRoles_AllowedEntities{}
	}
	return t.Name
}
func (t *Admin_Admin_ResellerRoles_AllowedEntities) GetType() *cato_models.EntityType {
	if t == nil {
		t = &Admin_Admin_ResellerRoles_AllowedEntities{}
	}
	return &t.Type
}

type Admin_Admin_ResellerRoles struct {
	AllowedAccounts []string                                     "json:\"allowedAccounts,omitempty\" graphql:\"allowedAccounts\""
	AllowedEntities []*Admin_Admin_ResellerRoles_AllowedEntities "json:\"allowedEntities,omitempty\" graphql:\"allowedEntities\""
	Role            Admin_Admin_ResellerRoles_Role               "json:\"role\" graphql:\"role\""
}

func (t *Admin_Admin_ResellerRoles) GetAllowedAccounts() []string {
	if t == nil {
		t = &Admin_Admin_ResellerRoles{}
	}
	return t.AllowedAccounts
}
func (t *Admin_Admin_ResellerRoles) GetAllowedEntities() []*Admin_Admin_ResellerRoles_AllowedEntities {
	if t == nil {
		t = &Admin_Admin_ResellerRoles{}
	}
	return t.AllowedEntities
}
func (t *Admin_Admin_ResellerRoles) GetRole() *Admin_Admin_ResellerRoles_Role {
	if t == nil {
		t = &Admin_Admin_ResellerRoles{}
	}
	return &t.Role
}

type Admin_Admin struct {
	CreationDate         string                       "json:\"creationDate\" graphql:\"creationDate\""
	Email                string                       "json:\"email\" graphql:\"email\""
	FirstName            string                       "json:\"firstName\" graphql:\"firstName\""
	ID                   string                       "json:\"id\" graphql:\"id\""
	LastName             string                       "json:\"lastName\" graphql:\"lastName\""
	ManagedRoles         []*Admin_Admin_ManagedRoles  "json:\"managedRoles,omitempty\" graphql:\"managedRoles\""
	MfaEnabled           bool                         "json:\"mfaEnabled\" graphql:\"mfaEnabled\""
	PasswordNeverExpires bool                         "json:\"passwordNeverExpires\" graphql:\"passwordNeverExpires\""
	ResellerRoles        []*Admin_Admin_ResellerRoles "json:\"resellerRoles,omitempty\" graphql:\"resellerRoles\""
}

func (t *Admin_Admin) GetCreationDate() string {
	if t == nil {
		t = &Admin_Admin{}
	}
	return t.CreationDate
}
func (t *Admin_Admin) GetEmail() string {
	if t == nil {
		t = &Admin_Admin{}
	}
	return t.Email
}
func (t *Admin_Admin) GetFirstName() string {
	if t == nil {
		t = &Admin_Admin{}
	}
	return t.FirstName
}
func (t *Admin_Admin) GetID() string {
	if t == nil {
		t = &Admin_Admin{}
	}
	return t.ID
}
func (t *Admin_Admin) GetLastName() string {
	if t == nil {
		t = &Admin_Admin{}
	}
	return t.LastName
}
func (t *Admin_Admin) GetManagedRoles() []*Admin_Admin_ManagedRoles {
	if t == nil {
		t = &Admin_Admin{}
	}
	return t.ManagedRoles
}
func (t *Admin_Admin) GetMfaEnabled() bool {
	if t == nil {
		t = &Admin_Admin{}
	}
	return t.MfaEnabled
}
func (t *Admin_Admin) GetPasswordNeverExpires() bool {
	if t == nil {
		t = &Admin_Admin{}
	}
	return t.PasswordNeverExpires
}
func (t *Admin_Admin) GetResellerRoles() []*Admin_Admin_ResellerRoles {
	if t == nil {
		t = &Admin_Admin{}
	}
	return t.ResellerRoles
}

type Admins_Admins_Items_AllowedItems struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *Admins_Admins_Items_AllowedItems) GetID() string {
	if t == nil {
		t = &Admins_Admins_Items_AllowedItems{}
	}
	return t.ID
}
func (t *Admins_Admins_Items_AllowedItems) GetName() *string {
	if t == nil {
		t = &Admins_Admins_Items_AllowedItems{}
	}
	return t.Name
}
func (t *Admins_Admins_Items_AllowedItems) GetType() *cato_models.EntityType {
	if t == nil {
		t = &Admins_Admins_Items_AllowedItems{}
	}
	return &t.Type
}

type Admins_Admins_Items_ManagedRoles_Role struct {
	Description  *string "json:\"description,omitempty\" graphql:\"description\""
	ID           string  "json:\"id\" graphql:\"id\""
	IsPredefined bool    "json:\"isPredefined\" graphql:\"isPredefined\""
	Name         string  "json:\"name\" graphql:\"name\""
}

func (t *Admins_Admins_Items_ManagedRoles_Role) GetDescription() *string {
	if t == nil {
		t = &Admins_Admins_Items_ManagedRoles_Role{}
	}
	return t.Description
}
func (t *Admins_Admins_Items_ManagedRoles_Role) GetID() string {
	if t == nil {
		t = &Admins_Admins_Items_ManagedRoles_Role{}
	}
	return t.ID
}
func (t *Admins_Admins_Items_ManagedRoles_Role) GetIsPredefined() bool {
	if t == nil {
		t = &Admins_Admins_Items_ManagedRoles_Role{}
	}
	return t.IsPredefined
}
func (t *Admins_Admins_Items_ManagedRoles_Role) GetName() string {
	if t == nil {
		t = &Admins_Admins_Items_ManagedRoles_Role{}
	}
	return t.Name
}

type Admins_Admins_Items_ManagedRoles_AllowedEntities struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *Admins_Admins_Items_ManagedRoles_AllowedEntities) GetID() string {
	if t == nil {
		t = &Admins_Admins_Items_ManagedRoles_AllowedEntities{}
	}
	return t.ID
}
func (t *Admins_Admins_Items_ManagedRoles_AllowedEntities) GetName() *string {
	if t == nil {
		t = &Admins_Admins_Items_ManagedRoles_AllowedEntities{}
	}
	return t.Name
}
func (t *Admins_Admins_Items_ManagedRoles_AllowedEntities) GetType() *cato_models.EntityType {
	if t == nil {
		t = &Admins_Admins_Items_ManagedRoles_AllowedEntities{}
	}
	return &t.Type
}

type Admins_Admins_Items_ManagedRoles struct {
	AllowedAccounts []string                                            "json:\"allowedAccounts,omitempty\" graphql:\"allowedAccounts\""
	AllowedEntities []*Admins_Admins_Items_ManagedRoles_AllowedEntities "json:\"allowedEntities,omitempty\" graphql:\"allowedEntities\""
	Role            Admins_Admins_Items_ManagedRoles_Role               "json:\"role\" graphql:\"role\""
}

func (t *Admins_Admins_Items_ManagedRoles) GetAllowedAccounts() []string {
	if t == nil {
		t = &Admins_Admins_Items_ManagedRoles{}
	}
	return t.AllowedAccounts
}
func (t *Admins_Admins_Items_ManagedRoles) GetAllowedEntities() []*Admins_Admins_Items_ManagedRoles_AllowedEntities {
	if t == nil {
		t = &Admins_Admins_Items_ManagedRoles{}
	}
	return t.AllowedEntities
}
func (t *Admins_Admins_Items_ManagedRoles) GetRole() *Admins_Admins_Items_ManagedRoles_Role {
	if t == nil {
		t = &Admins_Admins_Items_ManagedRoles{}
	}
	return &t.Role
}

type Admins_Admins_Items_ResellerRoles_Role struct {
	Description  *string "json:\"description,omitempty\" graphql:\"description\""
	ID           string  "json:\"id\" graphql:\"id\""
	IsPredefined bool    "json:\"isPredefined\" graphql:\"isPredefined\""
	Name         string  "json:\"name\" graphql:\"name\""
}

func (t *Admins_Admins_Items_ResellerRoles_Role) GetDescription() *string {
	if t == nil {
		t = &Admins_Admins_Items_ResellerRoles_Role{}
	}
	return t.Description
}
func (t *Admins_Admins_Items_ResellerRoles_Role) GetID() string {
	if t == nil {
		t = &Admins_Admins_Items_ResellerRoles_Role{}
	}
	return t.ID
}
func (t *Admins_Admins_Items_ResellerRoles_Role) GetIsPredefined() bool {
	if t == nil {
		t = &Admins_Admins_Items_ResellerRoles_Role{}
	}
	return t.IsPredefined
}
func (t *Admins_Admins_Items_ResellerRoles_Role) GetName() string {
	if t == nil {
		t = &Admins_Admins_Items_ResellerRoles_Role{}
	}
	return t.Name
}

type Admins_Admins_Items_ResellerRoles_AllowedEntities struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *Admins_Admins_Items_ResellerRoles_AllowedEntities) GetID() string {
	if t == nil {
		t = &Admins_Admins_Items_ResellerRoles_AllowedEntities{}
	}
	return t.ID
}
func (t *Admins_Admins_Items_ResellerRoles_AllowedEntities) GetName() *string {
	if t == nil {
		t = &Admins_Admins_Items_ResellerRoles_AllowedEntities{}
	}
	return t.Name
}
func (t *Admins_Admins_Items_ResellerRoles_AllowedEntities) GetType() *cato_models.EntityType {
	if t == nil {
		t = &Admins_Admins_Items_ResellerRoles_AllowedEntities{}
	}
	return &t.Type
}

type Admins_Admins_Items_ResellerRoles struct {
	AllowedAccounts []string                                             "json:\"allowedAccounts,omitempty\" graphql:\"allowedAccounts\""
	AllowedEntities []*Admins_Admins_Items_ResellerRoles_AllowedEntities "json:\"allowedEntities,omitempty\" graphql:\"allowedEntities\""
	Role            Admins_Admins_Items_ResellerRoles_Role               "json:\"role\" graphql:\"role\""
}

func (t *Admins_Admins_Items_ResellerRoles) GetAllowedAccounts() []string {
	if t == nil {
		t = &Admins_Admins_Items_ResellerRoles{}
	}
	return t.AllowedAccounts
}
func (t *Admins_Admins_Items_ResellerRoles) GetAllowedEntities() []*Admins_Admins_Items_ResellerRoles_AllowedEntities {
	if t == nil {
		t = &Admins_Admins_Items_ResellerRoles{}
	}
	return t.AllowedEntities
}
func (t *Admins_Admins_Items_ResellerRoles) GetRole() *Admins_Admins_Items_ResellerRoles_Role {
	if t == nil {
		t = &Admins_Admins_Items_ResellerRoles{}
	}
	return &t.Role
}

type Admins_Admins_Items struct {
	AllowedItems          []*Admins_Admins_Items_AllowedItems  "json:\"allowedItems,omitempty\" graphql:\"allowedItems\""
	CreationDate          *string                              "json:\"creationDate,omitempty\" graphql:\"creationDate\""
	Email                 *string                              "json:\"email,omitempty\" graphql:\"email\""
	FirstName             *string                              "json:\"firstName,omitempty\" graphql:\"firstName\""
	ID                    string                               "json:\"id\" graphql:\"id\""
	LastName              *string                              "json:\"lastName,omitempty\" graphql:\"lastName\""
	ManagedRoles          []*Admins_Admins_Items_ManagedRoles  "json:\"managedRoles,omitempty\" graphql:\"managedRoles\""
	MfaEnabled            *bool                                "json:\"mfaEnabled,omitempty\" graphql:\"mfaEnabled\""
	ModifyDate            *string                              "json:\"modifyDate,omitempty\" graphql:\"modifyDate\""
	NativeAccountID       *string                              "json:\"nativeAccountID,omitempty\" graphql:\"nativeAccountID\""
	PasswordNeverExpires  *bool                                "json:\"passwordNeverExpires,omitempty\" graphql:\"passwordNeverExpires\""
	PresentUsageAndEvents *bool                                "json:\"presentUsageAndEvents,omitempty\" graphql:\"presentUsageAndEvents\""
	ResellerRoles         []*Admins_Admins_Items_ResellerRoles "json:\"resellerRoles,omitempty\" graphql:\"resellerRoles\""
	Role                  *cato_models.UserRole                "json:\"role,omitempty\" graphql:\"role\""
	Status                *scalars.OperationalStatus           "json:\"status,omitempty\" graphql:\"status\""
	Version               string                               "json:\"version\" graphql:\"version\""
}

func (t *Admins_Admins_Items) GetAllowedItems() []*Admins_Admins_Items_AllowedItems {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.AllowedItems
}
func (t *Admins_Admins_Items) GetCreationDate() *string {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.CreationDate
}
func (t *Admins_Admins_Items) GetEmail() *string {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.Email
}
func (t *Admins_Admins_Items) GetFirstName() *string {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.FirstName
}
func (t *Admins_Admins_Items) GetID() string {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.ID
}
func (t *Admins_Admins_Items) GetLastName() *string {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.LastName
}
func (t *Admins_Admins_Items) GetManagedRoles() []*Admins_Admins_Items_ManagedRoles {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.ManagedRoles
}
func (t *Admins_Admins_Items) GetMfaEnabled() *bool {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.MfaEnabled
}
func (t *Admins_Admins_Items) GetModifyDate() *string {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.ModifyDate
}
func (t *Admins_Admins_Items) GetNativeAccountID() *string {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.NativeAccountID
}
func (t *Admins_Admins_Items) GetPasswordNeverExpires() *bool {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.PasswordNeverExpires
}
func (t *Admins_Admins_Items) GetPresentUsageAndEvents() *bool {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.PresentUsageAndEvents
}
func (t *Admins_Admins_Items) GetResellerRoles() []*Admins_Admins_Items_ResellerRoles {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.ResellerRoles
}
func (t *Admins_Admins_Items) GetRole() *cato_models.UserRole {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.Role
}
func (t *Admins_Admins_Items) GetStatus() *scalars.OperationalStatus {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.Status
}
func (t *Admins_Admins_Items) GetVersion() string {
	if t == nil {
		t = &Admins_Admins_Items{}
	}
	return t.Version
}

type Admins_Admins struct {
	Items []*Admins_Admins_Items "json:\"items\" graphql:\"items\""
	Total int64                  "json:\"total\" graphql:\"total\""
}

func (t *Admins_Admins) GetItems() []*Admins_Admins_Items {
	if t == nil {
		t = &Admins_Admins{}
	}
	return t.Items
}
func (t *Admins_Admins) GetTotal() int64 {
	if t == nil {
		t = &Admins_Admins{}
	}
	return t.Total
}

type AppStats_AppStats_Records_Fields_Value_StringValue struct {
	String *string "json:\"string,omitempty\" graphql:\"string\""
}

func (t *AppStats_AppStats_Records_Fields_Value_StringValue) GetString() *string {
	if t == nil {
		t = &AppStats_AppStats_Records_Fields_Value_StringValue{}
	}
	return t.String
}

type AppStats_AppStats_Records_Fields_Value_DateValue struct {
	Date *string "json:\"date,omitempty\" graphql:\"date\""
}

func (t *AppStats_AppStats_Records_Fields_Value_DateValue) GetDate() *string {
	if t == nil {
		t = &AppStats_AppStats_Records_Fields_Value_DateValue{}
	}
	return t.Date
}

type AppStats_AppStats_Records_Fields_Value_Entity struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *AppStats_AppStats_Records_Fields_Value_Entity) GetID() string {
	if t == nil {
		t = &AppStats_AppStats_Records_Fields_Value_Entity{}
	}
	return t.ID
}
func (t *AppStats_AppStats_Records_Fields_Value_Entity) GetName() *string {
	if t == nil {
		t = &AppStats_AppStats_Records_Fields_Value_Entity{}
	}
	return t.Name
}
func (t *AppStats_AppStats_Records_Fields_Value_Entity) GetType() *cato_models.EntityType {
	if t == nil {
		t = &AppStats_AppStats_Records_Fields_Value_Entity{}
	}
	return &t.Type
}

type AppStats_AppStats_Records_Fields_Value struct {
	DateValue   AppStats_AppStats_Records_Fields_Value_DateValue   "graphql:\"... on DateValue\""
	Entity      AppStats_AppStats_Records_Fields_Value_Entity      "graphql:\"... on Entity\""
	StringValue AppStats_AppStats_Records_Fields_Value_StringValue "graphql:\"... on StringValue\""
	Typename    *string                                            "json:\"__typename,omitempty\" graphql:\"__typename\""
}

func (t *AppStats_AppStats_Records_Fields_Value) GetDateValue() *AppStats_AppStats_Records_Fields_Value_DateValue {
	if t == nil {
		t = &AppStats_AppStats_Records_Fields_Value{}
	}
	return &t.DateValue
}
func (t *AppStats_AppStats_Records_Fields_Value) GetEntity() *AppStats_AppStats_Records_Fields_Value_Entity {
	if t == nil {
		t = &AppStats_AppStats_Records_Fields_Value{}
	}
	return &t.Entity
}
func (t *AppStats_AppStats_Records_Fields_Value) GetStringValue() *AppStats_AppStats_Records_Fields_Value_StringValue {
	if t == nil {
		t = &AppStats_AppStats_Records_Fields_Value{}
	}
	return &t.StringValue
}
func (t *AppStats_AppStats_Records_Fields_Value) GetTypename() *string {
	if t == nil {
		t = &AppStats_AppStats_Records_Fields_Value{}
	}
	return t.Typename
}

type AppStats_AppStats_Records_Fields struct {
	Name  cato_models.AppStatsFieldName          "json:\"name\" graphql:\"name\""
	Value AppStats_AppStats_Records_Fields_Value "json:\"value\" graphql:\"value\""
}

func (t *AppStats_AppStats_Records_Fields) GetName() *cato_models.AppStatsFieldName {
	if t == nil {
		t = &AppStats_AppStats_Records_Fields{}
	}
	return &t.Name
}
func (t *AppStats_AppStats_Records_Fields) GetValue() *AppStats_AppStats_Records_Fields_Value {
	if t == nil {
		t = &AppStats_AppStats_Records_Fields{}
	}
	return &t.Value
}

type AppStats_AppStats_Records struct {
	Fields          []*AppStats_AppStats_Records_Fields "json:\"fields,omitempty\" graphql:\"fields\""
	FieldsMap       map[string]any                      "json:\"fieldsMap,omitempty\" graphql:\"fieldsMap\""
	FieldsUnitTypes []cato_models.UnitType              "json:\"fieldsUnitTypes,omitempty\" graphql:\"fieldsUnitTypes\""
	FlatFields      [][]string                          "json:\"flatFields,omitempty\" graphql:\"flatFields\""
	PrevTimeFrame   map[string]any                      "json:\"prevTimeFrame,omitempty\" graphql:\"prevTimeFrame\""
	Trends          map[string]any                      "json:\"trends,omitempty\" graphql:\"trends\""
}

func (t *AppStats_AppStats_Records) GetFields() []*AppStats_AppStats_Records_Fields {
	if t == nil {
		t = &AppStats_AppStats_Records{}
	}
	return t.Fields
}
func (t *AppStats_AppStats_Records) GetFieldsMap() map[string]any {
	if t == nil {
		t = &AppStats_AppStats_Records{}
	}
	return t.FieldsMap
}
func (t *AppStats_AppStats_Records) GetFieldsUnitTypes() []cato_models.UnitType {
	if t == nil {
		t = &AppStats_AppStats_Records{}
	}
	return t.FieldsUnitTypes
}
func (t *AppStats_AppStats_Records) GetFlatFields() [][]string {
	if t == nil {
		t = &AppStats_AppStats_Records{}
	}
	return t.FlatFields
}
func (t *AppStats_AppStats_Records) GetPrevTimeFrame() map[string]any {
	if t == nil {
		t = &AppStats_AppStats_Records{}
	}
	return t.PrevTimeFrame
}
func (t *AppStats_AppStats_Records) GetTrends() map[string]any {
	if t == nil {
		t = &AppStats_AppStats_Records{}
	}
	return t.Trends
}

type AppStats_AppStats struct {
	From    *string                      "json:\"from,omitempty\" graphql:\"from\""
	ID      *string                      "json:\"id,omitempty\" graphql:\"id\""
	Records []*AppStats_AppStats_Records "json:\"records,omitempty\" graphql:\"records\""
	To      *string                      "json:\"to,omitempty\" graphql:\"to\""
	Total   *int64                       "json:\"total,omitempty\" graphql:\"total\""
	Totals  map[string]any               "json:\"totals,omitempty\" graphql:\"totals\""
}

func (t *AppStats_AppStats) GetFrom() *string {
	if t == nil {
		t = &AppStats_AppStats{}
	}
	return t.From
}
func (t *AppStats_AppStats) GetID() *string {
	if t == nil {
		t = &AppStats_AppStats{}
	}
	return t.ID
}
func (t *AppStats_AppStats) GetRecords() []*AppStats_AppStats_Records {
	if t == nil {
		t = &AppStats_AppStats{}
	}
	return t.Records
}
func (t *AppStats_AppStats) GetTo() *string {
	if t == nil {
		t = &AppStats_AppStats{}
	}
	return t.To
}
func (t *AppStats_AppStats) GetTotal() *int64 {
	if t == nil {
		t = &AppStats_AppStats{}
	}
	return t.Total
}
func (t *AppStats_AppStats) GetTotals() map[string]any {
	if t == nil {
		t = &AppStats_AppStats{}
	}
	return t.Totals
}

type AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Dimensions struct {
	Label string  "json:\"label\" graphql:\"label\""
	Value *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Dimensions) GetLabel() string {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Dimensions{}
	}
	return t.Label
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Dimensions) GetValue() *string {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Dimensions{}
	}
	return t.Value
}

type AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key_Dimensions struct {
	FieldName string  "json:\"fieldName\" graphql:\"fieldName\""
	Value     *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key_Dimensions) GetFieldName() string {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key_Dimensions{}
	}
	return t.FieldName
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key_Dimensions) GetValue() *string {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key_Dimensions{}
	}
	return t.Value
}

type AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key struct {
	Dimensions       []*AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	MeasureFieldName string                                                             "json:\"measureFieldName\" graphql:\"measureFieldName\""
}

func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key) GetDimensions() []*AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key_Dimensions {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key{}
	}
	return t.Dimensions
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key) GetMeasureFieldName() string {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key{}
	}
	return t.MeasureFieldName
}

type AppStatsTimeSeries_AppStatsTimeSeries_Timeseries struct {
	Data       [][]float64                                                    "json:\"data,omitempty\" graphql:\"data\""
	Dimensions []*AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	Info       []string                                                       "json:\"info,omitempty\" graphql:\"info\""
	Key        *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key          "json:\"key,omitempty\" graphql:\"key\""
	Label      string                                                         "json:\"label\" graphql:\"label\""
	Sum        *float64                                                       "json:\"sum,omitempty\" graphql:\"sum\""
	Units      *cato_models.UnitType                                          "json:\"units,omitempty\" graphql:\"units\""
}

func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries) GetData() [][]float64 {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries{}
	}
	return t.Data
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries) GetDimensions() []*AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Dimensions {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries{}
	}
	return t.Dimensions
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries) GetInfo() []string {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries{}
	}
	return t.Info
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries) GetKey() *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries_Key {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries{}
	}
	return t.Key
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries) GetLabel() string {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries{}
	}
	return t.Label
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries) GetSum() *float64 {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries{}
	}
	return t.Sum
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries_Timeseries) GetUnits() *cato_models.UnitType {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries_Timeseries{}
	}
	return t.Units
}

type AppStatsTimeSeries_AppStatsTimeSeries struct {
	From        *string                                             "json:\"from,omitempty\" graphql:\"from\""
	Granularity *int64                                              "json:\"granularity,omitempty\" graphql:\"granularity\""
	ID          *string                                             "json:\"id,omitempty\" graphql:\"id\""
	Timeseries  []*AppStatsTimeSeries_AppStatsTimeSeries_Timeseries "json:\"timeseries,omitempty\" graphql:\"timeseries\""
	To          *string                                             "json:\"to,omitempty\" graphql:\"to\""
}

func (t *AppStatsTimeSeries_AppStatsTimeSeries) GetFrom() *string {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries{}
	}
	return t.From
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries) GetGranularity() *int64 {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries{}
	}
	return t.Granularity
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries) GetID() *string {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries{}
	}
	return t.ID
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries) GetTimeseries() []*AppStatsTimeSeries_AppStatsTimeSeries_Timeseries {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries{}
	}
	return t.Timeseries
}
func (t *AppStatsTimeSeries_AppStatsTimeSeries) GetTo() *string {
	if t == nil {
		t = &AppStatsTimeSeries_AppStatsTimeSeries{}
	}
	return t.To
}

type AuditFeed_AuditFeed_Accounts_Records_Admin struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *AuditFeed_AuditFeed_Accounts_Records_Admin) GetID() string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Admin{}
	}
	return t.ID
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Admin) GetName() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Admin{}
	}
	return t.Name
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Admin) GetType() *cato_models.EntityType {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Admin{}
	}
	return &t.Type
}

type AuditFeed_AuditFeed_Accounts_Records_APIKey struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *AuditFeed_AuditFeed_Accounts_Records_APIKey) GetID() string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_APIKey{}
	}
	return t.ID
}
func (t *AuditFeed_AuditFeed_Accounts_Records_APIKey) GetName() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_APIKey{}
	}
	return t.Name
}
func (t *AuditFeed_AuditFeed_Accounts_Records_APIKey) GetType() *cato_models.EntityType {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_APIKey{}
	}
	return &t.Type
}

type AuditFeed_AuditFeed_Accounts_Records_Object struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *AuditFeed_AuditFeed_Accounts_Records_Object) GetID() string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Object{}
	}
	return t.ID
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Object) GetName() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Object{}
	}
	return t.Name
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Object) GetType() *cato_models.EntityType {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Object{}
	}
	return &t.Type
}

type AuditFeed_AuditFeed_Accounts_Records_Account_Entity struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *AuditFeed_AuditFeed_Accounts_Records_Account_Entity) GetID() string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Account_Entity{}
	}
	return t.ID
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Account_Entity) GetName() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Account_Entity{}
	}
	return t.Name
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Account_Entity) GetType() *cato_models.EntityType {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Account_Entity{}
	}
	return &t.Type
}

type AuditFeed_AuditFeed_Accounts_Records_Account struct {
	Description  string                                              "json:\"description\" graphql:\"description\""
	Entity       AuditFeed_AuditFeed_Accounts_Records_Account_Entity "json:\"entity\" graphql:\"entity\""
	HelperFields map[string]any                                      "json:\"helperFields\" graphql:\"helperFields\""
}

func (t *AuditFeed_AuditFeed_Accounts_Records_Account) GetDescription() string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Account{}
	}
	return t.Description
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Account) GetEntity() *AuditFeed_AuditFeed_Accounts_Records_Account_Entity {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Account{}
	}
	return &t.Entity
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Account) GetHelperFields() map[string]any {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Account{}
	}
	return t.HelperFields
}

type AuditFeed_AuditFeed_Accounts_Records_Fields_Value_StringValue struct {
	String *string "json:\"string,omitempty\" graphql:\"string\""
}

func (t *AuditFeed_AuditFeed_Accounts_Records_Fields_Value_StringValue) GetString() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Fields_Value_StringValue{}
	}
	return t.String
}

type AuditFeed_AuditFeed_Accounts_Records_Fields_Value_DateValue struct {
	Date *string "json:\"date,omitempty\" graphql:\"date\""
}

func (t *AuditFeed_AuditFeed_Accounts_Records_Fields_Value_DateValue) GetDate() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Fields_Value_DateValue{}
	}
	return t.Date
}

type AuditFeed_AuditFeed_Accounts_Records_Fields_Value_Entity struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *AuditFeed_AuditFeed_Accounts_Records_Fields_Value_Entity) GetID() string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Fields_Value_Entity{}
	}
	return t.ID
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Fields_Value_Entity) GetName() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Fields_Value_Entity{}
	}
	return t.Name
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Fields_Value_Entity) GetType() *cato_models.EntityType {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Fields_Value_Entity{}
	}
	return &t.Type
}

type AuditFeed_AuditFeed_Accounts_Records_Fields_Value struct {
	DateValue   AuditFeed_AuditFeed_Accounts_Records_Fields_Value_DateValue   "graphql:\"... on DateValue\""
	Entity      AuditFeed_AuditFeed_Accounts_Records_Fields_Value_Entity      "graphql:\"... on Entity\""
	StringValue AuditFeed_AuditFeed_Accounts_Records_Fields_Value_StringValue "graphql:\"... on StringValue\""
	Typename    *string                                                       "json:\"__typename,omitempty\" graphql:\"__typename\""
}

func (t *AuditFeed_AuditFeed_Accounts_Records_Fields_Value) GetDateValue() *AuditFeed_AuditFeed_Accounts_Records_Fields_Value_DateValue {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Fields_Value{}
	}
	return &t.DateValue
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Fields_Value) GetEntity() *AuditFeed_AuditFeed_Accounts_Records_Fields_Value_Entity {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Fields_Value{}
	}
	return &t.Entity
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Fields_Value) GetStringValue() *AuditFeed_AuditFeed_Accounts_Records_Fields_Value_StringValue {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Fields_Value{}
	}
	return &t.StringValue
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Fields_Value) GetTypename() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Fields_Value{}
	}
	return t.Typename
}

type AuditFeed_AuditFeed_Accounts_Records_Fields struct {
	Name  string                                            "json:\"name\" graphql:\"name\""
	Value AuditFeed_AuditFeed_Accounts_Records_Fields_Value "json:\"value\" graphql:\"value\""
}

func (t *AuditFeed_AuditFeed_Accounts_Records_Fields) GetName() string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Fields{}
	}
	return t.Name
}
func (t *AuditFeed_AuditFeed_Accounts_Records_Fields) GetValue() *AuditFeed_AuditFeed_Accounts_Records_Fields_Value {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records_Fields{}
	}
	return &t.Value
}

type AuditFeed_AuditFeed_Accounts_Records struct {
	Account    *AuditFeed_AuditFeed_Accounts_Records_Account  "json:\"account,omitempty\" graphql:\"account\""
	Admin      *AuditFeed_AuditFeed_Accounts_Records_Admin    "json:\"admin,omitempty\" graphql:\"admin\""
	APIKey     *AuditFeed_AuditFeed_Accounts_Records_APIKey   "json:\"apiKey,omitempty\" graphql:\"apiKey\""
	Fields     []*AuditFeed_AuditFeed_Accounts_Records_Fields "json:\"fields,omitempty\" graphql:\"fields\""
	FieldsMap  map[string]any                                 "json:\"fieldsMap,omitempty\" graphql:\"fieldsMap\""
	FlatFields [][]string                                     "json:\"flatFields,omitempty\" graphql:\"flatFields\""
	Object     *AuditFeed_AuditFeed_Accounts_Records_Object   "json:\"object,omitempty\" graphql:\"object\""
	Time       *string                                        "json:\"time,omitempty\" graphql:\"time\""
}

func (t *AuditFeed_AuditFeed_Accounts_Records) GetAccount() *AuditFeed_AuditFeed_Accounts_Records_Account {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records{}
	}
	return t.Account
}
func (t *AuditFeed_AuditFeed_Accounts_Records) GetAdmin() *AuditFeed_AuditFeed_Accounts_Records_Admin {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records{}
	}
	return t.Admin
}
func (t *AuditFeed_AuditFeed_Accounts_Records) GetAPIKey() *AuditFeed_AuditFeed_Accounts_Records_APIKey {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records{}
	}
	return t.APIKey
}
func (t *AuditFeed_AuditFeed_Accounts_Records) GetFields() []*AuditFeed_AuditFeed_Accounts_Records_Fields {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records{}
	}
	return t.Fields
}
func (t *AuditFeed_AuditFeed_Accounts_Records) GetFieldsMap() map[string]any {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records{}
	}
	return t.FieldsMap
}
func (t *AuditFeed_AuditFeed_Accounts_Records) GetFlatFields() [][]string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records{}
	}
	return t.FlatFields
}
func (t *AuditFeed_AuditFeed_Accounts_Records) GetObject() *AuditFeed_AuditFeed_Accounts_Records_Object {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records{}
	}
	return t.Object
}
func (t *AuditFeed_AuditFeed_Accounts_Records) GetTime() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts_Records{}
	}
	return t.Time
}

type AuditFeed_AuditFeed_Accounts struct {
	ID      *string                                 "json:\"id,omitempty\" graphql:\"id\""
	Records []*AuditFeed_AuditFeed_Accounts_Records "json:\"records,omitempty\" graphql:\"records\""
}

func (t *AuditFeed_AuditFeed_Accounts) GetID() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts{}
	}
	return t.ID
}
func (t *AuditFeed_AuditFeed_Accounts) GetRecords() []*AuditFeed_AuditFeed_Accounts_Records {
	if t == nil {
		t = &AuditFeed_AuditFeed_Accounts{}
	}
	return t.Records
}

type AuditFeed_AuditFeed struct {
	Accounts     []*AuditFeed_AuditFeed_Accounts "json:\"accounts,omitempty\" graphql:\"accounts\""
	FetchedCount int64                           "json:\"fetchedCount\" graphql:\"fetchedCount\""
	From         *string                         "json:\"from,omitempty\" graphql:\"from\""
	HasMore      *bool                           "json:\"hasMore,omitempty\" graphql:\"hasMore\""
	Marker       *string                         "json:\"marker,omitempty\" graphql:\"marker\""
	To           *string                         "json:\"to,omitempty\" graphql:\"to\""
}

func (t *AuditFeed_AuditFeed) GetAccounts() []*AuditFeed_AuditFeed_Accounts {
	if t == nil {
		t = &AuditFeed_AuditFeed{}
	}
	return t.Accounts
}
func (t *AuditFeed_AuditFeed) GetFetchedCount() int64 {
	if t == nil {
		t = &AuditFeed_AuditFeed{}
	}
	return t.FetchedCount
}
func (t *AuditFeed_AuditFeed) GetFrom() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed{}
	}
	return t.From
}
func (t *AuditFeed_AuditFeed) GetHasMore() *bool {
	if t == nil {
		t = &AuditFeed_AuditFeed{}
	}
	return t.HasMore
}
func (t *AuditFeed_AuditFeed) GetMarker() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed{}
	}
	return t.Marker
}
func (t *AuditFeed_AuditFeed) GetTo() *string {
	if t == nil {
		t = &AuditFeed_AuditFeed{}
	}
	return t.To
}

type EntityLookup_EntityLookup_Items_Entity struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *EntityLookup_EntityLookup_Items_Entity) GetID() string {
	if t == nil {
		t = &EntityLookup_EntityLookup_Items_Entity{}
	}
	return t.ID
}
func (t *EntityLookup_EntityLookup_Items_Entity) GetName() *string {
	if t == nil {
		t = &EntityLookup_EntityLookup_Items_Entity{}
	}
	return t.Name
}
func (t *EntityLookup_EntityLookup_Items_Entity) GetType() *cato_models.EntityType {
	if t == nil {
		t = &EntityLookup_EntityLookup_Items_Entity{}
	}
	return &t.Type
}

type EntityLookup_EntityLookup_Items struct {
	Description  string                                 "json:\"description\" graphql:\"description\""
	Entity       EntityLookup_EntityLookup_Items_Entity "json:\"entity\" graphql:\"entity\""
	HelperFields map[string]any                         "json:\"helperFields\" graphql:\"helperFields\""
}

func (t *EntityLookup_EntityLookup_Items) GetDescription() string {
	if t == nil {
		t = &EntityLookup_EntityLookup_Items{}
	}
	return t.Description
}
func (t *EntityLookup_EntityLookup_Items) GetEntity() *EntityLookup_EntityLookup_Items_Entity {
	if t == nil {
		t = &EntityLookup_EntityLookup_Items{}
	}
	return &t.Entity
}
func (t *EntityLookup_EntityLookup_Items) GetHelperFields() map[string]any {
	if t == nil {
		t = &EntityLookup_EntityLookup_Items{}
	}
	return t.HelperFields
}

type EntityLookup_EntityLookup struct {
	Items []*EntityLookup_EntityLookup_Items "json:\"items\" graphql:\"items\""
	Total *int64                             "json:\"total,omitempty\" graphql:\"total\""
}

func (t *EntityLookup_EntityLookup) GetItems() []*EntityLookup_EntityLookup_Items {
	if t == nil {
		t = &EntityLookup_EntityLookup{}
	}
	return t.Items
}
func (t *EntityLookup_EntityLookup) GetTotal() *int64 {
	if t == nil {
		t = &EntityLookup_EntityLookup{}
	}
	return t.Total
}

type Events_Events_Records_Fields_Value_StringValue struct {
	String *string "json:\"string,omitempty\" graphql:\"string\""
}

func (t *Events_Events_Records_Fields_Value_StringValue) GetString() *string {
	if t == nil {
		t = &Events_Events_Records_Fields_Value_StringValue{}
	}
	return t.String
}

type Events_Events_Records_Fields_Value_DateValue struct {
	Date *string "json:\"date,omitempty\" graphql:\"date\""
}

func (t *Events_Events_Records_Fields_Value_DateValue) GetDate() *string {
	if t == nil {
		t = &Events_Events_Records_Fields_Value_DateValue{}
	}
	return t.Date
}

type Events_Events_Records_Fields_Value_Entity struct {
	ID   string                 "json:\"id\" graphql:\"id\""
	Name *string                "json:\"name,omitempty\" graphql:\"name\""
	Type cato_models.EntityType "json:\"type\" graphql:\"type\""
}

func (t *Events_Events_Records_Fields_Value_Entity) GetID() string {
	if t == nil {
		t = &Events_Events_Records_Fields_Value_Entity{}
	}
	return t.ID
}
func (t *Events_Events_Records_Fields_Value_Entity) GetName() *string {
	if t == nil {
		t = &Events_Events_Records_Fields_Value_Entity{}
	}
	return t.Name
}
func (t *Events_Events_Records_Fields_Value_Entity) GetType() *cato_models.EntityType {
	if t == nil {
		t = &Events_Events_Records_Fields_Value_Entity{}
	}
	return &t.Type
}

type Events_Events_Records_Fields_Value struct {
	DateValue   Events_Events_Records_Fields_Value_DateValue   "graphql:\"... on DateValue\""
	Entity      Events_Events_Records_Fields_Value_Entity      "graphql:\"... on Entity\""
	StringValue Events_Events_Records_Fields_Value_StringValue "graphql:\"... on StringValue\""
	Typename    *string                                        "json:\"__typename,omitempty\" graphql:\"__typename\""
}

func (t *Events_Events_Records_Fields_Value) GetDateValue() *Events_Events_Records_Fields_Value_DateValue {
	if t == nil {
		t = &Events_Events_Records_Fields_Value{}
	}
	return &t.DateValue
}
func (t *Events_Events_Records_Fields_Value) GetEntity() *Events_Events_Records_Fields_Value_Entity {
	if t == nil {
		t = &Events_Events_Records_Fields_Value{}
	}
	return &t.Entity
}
func (t *Events_Events_Records_Fields_Value) GetStringValue() *Events_Events_Records_Fields_Value_StringValue {
	if t == nil {
		t = &Events_Events_Records_Fields_Value{}
	}
	return &t.StringValue
}
func (t *Events_Events_Records_Fields_Value) GetTypename() *string {
	if t == nil {
		t = &Events_Events_Records_Fields_Value{}
	}
	return t.Typename
}

type Events_Events_Records_Fields struct {
	Name  cato_models.EventFieldName         "json:\"name\" graphql:\"name\""
	Value Events_Events_Records_Fields_Value "json:\"value\" graphql:\"value\""
}

func (t *Events_Events_Records_Fields) GetName() *cato_models.EventFieldName {
	if t == nil {
		t = &Events_Events_Records_Fields{}
	}
	return &t.Name
}
func (t *Events_Events_Records_Fields) GetValue() *Events_Events_Records_Fields_Value {
	if t == nil {
		t = &Events_Events_Records_Fields{}
	}
	return &t.Value
}

type Events_Events_Records struct {
	Fields          []*Events_Events_Records_Fields "json:\"fields,omitempty\" graphql:\"fields\""
	FieldsMap       map[string]any                  "json:\"fieldsMap,omitempty\" graphql:\"fieldsMap\""
	FieldsUnitTypes []cato_models.UnitType          "json:\"fieldsUnitTypes,omitempty\" graphql:\"fieldsUnitTypes\""
	FlatFields      [][]string                      "json:\"flatFields,omitempty\" graphql:\"flatFields\""
	PrevTimeFrame   map[string]any                  "json:\"prevTimeFrame,omitempty\" graphql:\"prevTimeFrame\""
	Trends          map[string]any                  "json:\"trends,omitempty\" graphql:\"trends\""
}

func (t *Events_Events_Records) GetFields() []*Events_Events_Records_Fields {
	if t == nil {
		t = &Events_Events_Records{}
	}
	return t.Fields
}
func (t *Events_Events_Records) GetFieldsMap() map[string]any {
	if t == nil {
		t = &Events_Events_Records{}
	}
	return t.FieldsMap
}
func (t *Events_Events_Records) GetFieldsUnitTypes() []cato_models.UnitType {
	if t == nil {
		t = &Events_Events_Records{}
	}
	return t.FieldsUnitTypes
}
func (t *Events_Events_Records) GetFlatFields() [][]string {
	if t == nil {
		t = &Events_Events_Records{}
	}
	return t.FlatFields
}
func (t *Events_Events_Records) GetPrevTimeFrame() map[string]any {
	if t == nil {
		t = &Events_Events_Records{}
	}
	return t.PrevTimeFrame
}
func (t *Events_Events_Records) GetTrends() map[string]any {
	if t == nil {
		t = &Events_Events_Records{}
	}
	return t.Trends
}

type Events_Events struct {
	From    *string                  "json:\"from,omitempty\" graphql:\"from\""
	ID      *string                  "json:\"id,omitempty\" graphql:\"id\""
	Records []*Events_Events_Records "json:\"records,omitempty\" graphql:\"records\""
	To      *string                  "json:\"to,omitempty\" graphql:\"to\""
	Total   *int64                   "json:\"total,omitempty\" graphql:\"total\""
	Totals  map[string]any           "json:\"totals,omitempty\" graphql:\"totals\""
}

func (t *Events_Events) GetFrom() *string {
	if t == nil {
		t = &Events_Events{}
	}
	return t.From
}
func (t *Events_Events) GetID() *string {
	if t == nil {
		t = &Events_Events{}
	}
	return t.ID
}
func (t *Events_Events) GetRecords() []*Events_Events_Records {
	if t == nil {
		t = &Events_Events{}
	}
	return t.Records
}
func (t *Events_Events) GetTo() *string {
	if t == nil {
		t = &Events_Events{}
	}
	return t.To
}
func (t *Events_Events) GetTotal() *int64 {
	if t == nil {
		t = &Events_Events{}
	}
	return t.Total
}
func (t *Events_Events) GetTotals() map[string]any {
	if t == nil {
		t = &Events_Events{}
	}
	return t.Totals
}

type EventsFeed_EventsFeed_Accounts_Records struct {
	FieldsMap  map[string]any "json:\"fieldsMap,omitempty\" graphql:\"fieldsMap\""
	FlatFields [][]string     "json:\"flatFields,omitempty\" graphql:\"flatFields\""
	Time       *string        "json:\"time,omitempty\" graphql:\"time\""
}

func (t *EventsFeed_EventsFeed_Accounts_Records) GetFieldsMap() map[string]any {
	if t == nil {
		t = &EventsFeed_EventsFeed_Accounts_Records{}
	}
	return t.FieldsMap
}
func (t *EventsFeed_EventsFeed_Accounts_Records) GetFlatFields() [][]string {
	if t == nil {
		t = &EventsFeed_EventsFeed_Accounts_Records{}
	}
	return t.FlatFields
}
func (t *EventsFeed_EventsFeed_Accounts_Records) GetTime() *string {
	if t == nil {
		t = &EventsFeed_EventsFeed_Accounts_Records{}
	}
	return t.Time
}

type EventsFeed_EventsFeed_Accounts struct {
	ErrorString *string                                   "json:\"errorString,omitempty\" graphql:\"errorString\""
	ID          *string                                   "json:\"id,omitempty\" graphql:\"id\""
	Records     []*EventsFeed_EventsFeed_Accounts_Records "json:\"records,omitempty\" graphql:\"records\""
}

func (t *EventsFeed_EventsFeed_Accounts) GetErrorString() *string {
	if t == nil {
		t = &EventsFeed_EventsFeed_Accounts{}
	}
	return t.ErrorString
}
func (t *EventsFeed_EventsFeed_Accounts) GetID() *string {
	if t == nil {
		t = &EventsFeed_EventsFeed_Accounts{}
	}
	return t.ID
}
func (t *EventsFeed_EventsFeed_Accounts) GetRecords() []*EventsFeed_EventsFeed_Accounts_Records {
	if t == nil {
		t = &EventsFeed_EventsFeed_Accounts{}
	}
	return t.Records
}

type EventsFeed_EventsFeed struct {
	Accounts     []*EventsFeed_EventsFeed_Accounts "json:\"accounts,omitempty\" graphql:\"accounts\""
	FetchedCount int64                             "json:\"fetchedCount\" graphql:\"fetchedCount\""
	Marker       *string                           "json:\"marker,omitempty\" graphql:\"marker\""
}

func (t *EventsFeed_EventsFeed) GetAccounts() []*EventsFeed_EventsFeed_Accounts {
	if t == nil {
		t = &EventsFeed_EventsFeed{}
	}
	return t.Accounts
}
func (t *EventsFeed_EventsFeed) GetFetchedCount() int64 {
	if t == nil {
		t = &EventsFeed_EventsFeed{}
	}
	return t.FetchedCount
}
func (t *EventsFeed_EventsFeed) GetMarker() *string {
	if t == nil {
		t = &EventsFeed_EventsFeed{}
	}
	return t.Marker
}

type EventsTimeSeries_EventsTimeSeries_Timeseries_Dimensions struct {
	Label string  "json:\"label\" graphql:\"label\""
	Value *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *EventsTimeSeries_EventsTimeSeries_Timeseries_Dimensions) GetLabel() string {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries_Dimensions{}
	}
	return t.Label
}
func (t *EventsTimeSeries_EventsTimeSeries_Timeseries_Dimensions) GetValue() *string {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries_Dimensions{}
	}
	return t.Value
}

type EventsTimeSeries_EventsTimeSeries_Timeseries_Key_Dimensions struct {
	FieldName string  "json:\"fieldName\" graphql:\"fieldName\""
	Value     *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *EventsTimeSeries_EventsTimeSeries_Timeseries_Key_Dimensions) GetFieldName() string {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries_Key_Dimensions{}
	}
	return t.FieldName
}
func (t *EventsTimeSeries_EventsTimeSeries_Timeseries_Key_Dimensions) GetValue() *string {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries_Key_Dimensions{}
	}
	return t.Value
}

type EventsTimeSeries_EventsTimeSeries_Timeseries_Key struct {
	Dimensions       []*EventsTimeSeries_EventsTimeSeries_Timeseries_Key_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	MeasureFieldName string                                                         "json:\"measureFieldName\" graphql:\"measureFieldName\""
}

func (t *EventsTimeSeries_EventsTimeSeries_Timeseries_Key) GetDimensions() []*EventsTimeSeries_EventsTimeSeries_Timeseries_Key_Dimensions {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries_Key{}
	}
	return t.Dimensions
}
func (t *EventsTimeSeries_EventsTimeSeries_Timeseries_Key) GetMeasureFieldName() string {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries_Key{}
	}
	return t.MeasureFieldName
}

type EventsTimeSeries_EventsTimeSeries_Timeseries struct {
	Data       [][]float64                                                "json:\"data,omitempty\" graphql:\"data\""
	Dimensions []*EventsTimeSeries_EventsTimeSeries_Timeseries_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	Info       []string                                                   "json:\"info,omitempty\" graphql:\"info\""
	Key        *EventsTimeSeries_EventsTimeSeries_Timeseries_Key          "json:\"key,omitempty\" graphql:\"key\""
	Label      string                                                     "json:\"label\" graphql:\"label\""
	Sum        *float64                                                   "json:\"sum,omitempty\" graphql:\"sum\""
	Units      *cato_models.UnitType                                      "json:\"units,omitempty\" graphql:\"units\""
}

func (t *EventsTimeSeries_EventsTimeSeries_Timeseries) GetData() [][]float64 {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries{}
	}
	return t.Data
}
func (t *EventsTimeSeries_EventsTimeSeries_Timeseries) GetDimensions() []*EventsTimeSeries_EventsTimeSeries_Timeseries_Dimensions {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries{}
	}
	return t.Dimensions
}
func (t *EventsTimeSeries_EventsTimeSeries_Timeseries) GetInfo() []string {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries{}
	}
	return t.Info
}
func (t *EventsTimeSeries_EventsTimeSeries_Timeseries) GetKey() *EventsTimeSeries_EventsTimeSeries_Timeseries_Key {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries{}
	}
	return t.Key
}
func (t *EventsTimeSeries_EventsTimeSeries_Timeseries) GetLabel() string {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries{}
	}
	return t.Label
}
func (t *EventsTimeSeries_EventsTimeSeries_Timeseries) GetSum() *float64 {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries{}
	}
	return t.Sum
}
func (t *EventsTimeSeries_EventsTimeSeries_Timeseries) GetUnits() *cato_models.UnitType {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries_Timeseries{}
	}
	return t.Units
}

type EventsTimeSeries_EventsTimeSeries struct {
	From        *string                                         "json:\"from,omitempty\" graphql:\"from\""
	Granularity *int64                                          "json:\"granularity,omitempty\" graphql:\"granularity\""
	ID          *string                                         "json:\"id,omitempty\" graphql:\"id\""
	Timeseries  []*EventsTimeSeries_EventsTimeSeries_Timeseries "json:\"timeseries,omitempty\" graphql:\"timeseries\""
	To          *string                                         "json:\"to,omitempty\" graphql:\"to\""
}

func (t *EventsTimeSeries_EventsTimeSeries) GetFrom() *string {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries{}
	}
	return t.From
}
func (t *EventsTimeSeries_EventsTimeSeries) GetGranularity() *int64 {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries{}
	}
	return t.Granularity
}
func (t *EventsTimeSeries_EventsTimeSeries) GetID() *string {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries{}
	}
	return t.ID
}
func (t *EventsTimeSeries_EventsTimeSeries) GetTimeseries() []*EventsTimeSeries_EventsTimeSeries_Timeseries {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries{}
	}
	return t.Timeseries
}
func (t *EventsTimeSeries_EventsTimeSeries) GetTo() *string {
	if t == nil {
		t = &EventsTimeSeries_EventsTimeSeries{}
	}
	return t.To
}

type HardwareManagement_HardwareManagement_SocketInventory_Items_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *HardwareManagement_HardwareManagement_SocketInventory_Items_Site) GetID() string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items_Site{}
	}
	return t.ID
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items_Site) GetName() string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items_Site{}
	}
	return t.Name
}

type HardwareManagement_HardwareManagement_SocketInventory_Items_Account struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *HardwareManagement_HardwareManagement_SocketInventory_Items_Account) GetID() string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items_Account{}
	}
	return t.ID
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items_Account) GetName() string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items_Account{}
	}
	return t.Name
}

type HardwareManagement_HardwareManagement_SocketInventory_Items struct {
	Account          HardwareManagement_HardwareManagement_SocketInventory_Items_Account "json:\"account\" graphql:\"account\""
	DeliverySiteName *string                                                             "json:\"deliverySiteName,omitempty\" graphql:\"deliverySiteName\""
	Description      *string                                                             "json:\"description,omitempty\" graphql:\"description\""
	ID               string                                                              "json:\"id\" graphql:\"id\""
	SerialNumber     *string                                                             "json:\"serialNumber,omitempty\" graphql:\"serialNumber\""
	ShippingCompany  *string                                                             "json:\"shippingCompany,omitempty\" graphql:\"shippingCompany\""
	ShippingDate     *string                                                             "json:\"shippingDate,omitempty\" graphql:\"shippingDate\""
	Site             *HardwareManagement_HardwareManagement_SocketInventory_Items_Site   "json:\"site,omitempty\" graphql:\"site\""
	SocketMac        *string                                                             "json:\"socketMac,omitempty\" graphql:\"socketMac\""
	SocketType       *cato_models.SocketPlatform                                         "json:\"socketType,omitempty\" graphql:\"socketType\""
	SocketVersion    *string                                                             "json:\"socketVersion,omitempty\" graphql:\"socketVersion\""
	Status           *cato_models.SocketInventoryItemStatus                              "json:\"status,omitempty\" graphql:\"status\""
	TrackingNumber   *string                                                             "json:\"trackingNumber,omitempty\" graphql:\"trackingNumber\""
	TrackingURL      *string                                                             "json:\"trackingUrl,omitempty\" graphql:\"trackingUrl\""
}

func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetAccount() *HardwareManagement_HardwareManagement_SocketInventory_Items_Account {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return &t.Account
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetDeliverySiteName() *string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.DeliverySiteName
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetDescription() *string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.Description
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetID() string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.ID
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetSerialNumber() *string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.SerialNumber
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetShippingCompany() *string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.ShippingCompany
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetShippingDate() *string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.ShippingDate
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetSite() *HardwareManagement_HardwareManagement_SocketInventory_Items_Site {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.Site
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetSocketMac() *string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.SocketMac
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetSocketType() *cato_models.SocketPlatform {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.SocketType
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetSocketVersion() *string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.SocketVersion
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetStatus() *cato_models.SocketInventoryItemStatus {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.Status
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetTrackingNumber() *string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.TrackingNumber
}
func (t *HardwareManagement_HardwareManagement_SocketInventory_Items) GetTrackingURL() *string {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_Items{}
	}
	return t.TrackingURL
}

type HardwareManagement_HardwareManagement_SocketInventory_PageInfo struct {
	Total int64 "json:\"total\" graphql:\"total\""
}

func (t *HardwareManagement_HardwareManagement_SocketInventory_PageInfo) GetTotal() int64 {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory_PageInfo{}
	}
	return t.Total
}

type HardwareManagement_HardwareManagement_SocketInventory struct {
	Items    []*HardwareManagement_HardwareManagement_SocketInventory_Items "json:\"items\" graphql:\"items\""
	PageInfo HardwareManagement_HardwareManagement_SocketInventory_PageInfo "json:\"pageInfo\" graphql:\"pageInfo\""
}

func (t *HardwareManagement_HardwareManagement_SocketInventory) GetItems() []*HardwareManagement_HardwareManagement_SocketInventory_Items {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory{}
	}
	return t.Items
}
func (t *HardwareManagement_HardwareManagement_SocketInventory) GetPageInfo() *HardwareManagement_HardwareManagement_SocketInventory_PageInfo {
	if t == nil {
		t = &HardwareManagement_HardwareManagement_SocketInventory{}
	}
	return &t.PageInfo
}

type HardwareManagement_HardwareManagement struct {
	SocketInventory HardwareManagement_HardwareManagement_SocketInventory "json:\"socketInventory\" graphql:\"socketInventory\""
}

func (t *HardwareManagement_HardwareManagement) GetSocketInventory() *HardwareManagement_HardwareManagement_SocketInventory {
	if t == nil {
		t = &HardwareManagement_HardwareManagement{}
	}
	return &t.SocketInventory
}

type Licensing_Licensing_LicensingInfo_Licenses struct {
	Description    *string                   "json:\"description,omitempty\" graphql:\"description\""
	ExpirationDate string                    "json:\"expirationDate\" graphql:\"expirationDate\""
	LastUpdated    *string                   "json:\"lastUpdated,omitempty\" graphql:\"lastUpdated\""
	Plan           cato_models.LicensePlan   "json:\"plan\" graphql:\"plan\""
	Sku            cato_models.LicenseSku    "json:\"sku\" graphql:\"sku\""
	StartDate      *string                   "json:\"startDate,omitempty\" graphql:\"startDate\""
	Status         cato_models.LicenseStatus "json:\"status\" graphql:\"status\""
}

func (t *Licensing_Licensing_LicensingInfo_Licenses) GetDescription() *string {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_Licenses{}
	}
	return t.Description
}
func (t *Licensing_Licensing_LicensingInfo_Licenses) GetExpirationDate() string {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_Licenses{}
	}
	return t.ExpirationDate
}
func (t *Licensing_Licensing_LicensingInfo_Licenses) GetLastUpdated() *string {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_Licenses{}
	}
	return t.LastUpdated
}
func (t *Licensing_Licensing_LicensingInfo_Licenses) GetPlan() *cato_models.LicensePlan {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_Licenses{}
	}
	return &t.Plan
}
func (t *Licensing_Licensing_LicensingInfo_Licenses) GetSku() *cato_models.LicenseSku {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_Licenses{}
	}
	return &t.Sku
}
func (t *Licensing_Licensing_LicensingInfo_Licenses) GetStartDate() *string {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_Licenses{}
	}
	return t.StartDate
}
func (t *Licensing_Licensing_LicensingInfo_Licenses) GetStatus() *cato_models.LicenseStatus {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_Licenses{}
	}
	return &t.Status
}

type Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_PublicIps struct {
	Allocated int64 "json:\"allocated\" graphql:\"allocated\""
	Available int64 "json:\"available\" graphql:\"available\""
	Total     int64 "json:\"total\" graphql:\"total\""
}

func (t *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_PublicIps) GetAllocated() int64 {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_PublicIps{}
	}
	return t.Allocated
}
func (t *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_PublicIps) GetAvailable() int64 {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_PublicIps{}
	}
	return t.Available
}
func (t *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_PublicIps) GetTotal() int64 {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_PublicIps{}
	}
	return t.Total
}

type Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_ZtnaUsers struct {
	Allocated int64 "json:\"allocated\" graphql:\"allocated\""
	Available int64 "json:\"available\" graphql:\"available\""
	Total     int64 "json:\"total\" graphql:\"total\""
}

func (t *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_ZtnaUsers) GetAllocated() int64 {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_ZtnaUsers{}
	}
	return t.Allocated
}
func (t *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_ZtnaUsers) GetAvailable() int64 {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_ZtnaUsers{}
	}
	return t.Available
}
func (t *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_ZtnaUsers) GetTotal() int64 {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_ZtnaUsers{}
	}
	return t.Total
}

type Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations struct {
	PublicIps *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_PublicIps "json:\"publicIps,omitempty\" graphql:\"publicIps\""
	ZtnaUsers *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_ZtnaUsers "json:\"ztnaUsers,omitempty\" graphql:\"ztnaUsers\""
}

func (t *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations) GetPublicIps() *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_PublicIps {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations{}
	}
	return t.PublicIps
}
func (t *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations) GetZtnaUsers() *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations_ZtnaUsers {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations{}
	}
	return t.ZtnaUsers
}

type Licensing_Licensing_LicensingInfo struct {
	GlobalLicenseAllocations Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations "json:\"globalLicenseAllocations\" graphql:\"globalLicenseAllocations\""
	Licenses                 []*Licensing_Licensing_LicensingInfo_Licenses              "json:\"licenses\" graphql:\"licenses\""
}

func (t *Licensing_Licensing_LicensingInfo) GetGlobalLicenseAllocations() *Licensing_Licensing_LicensingInfo_GlobalLicenseAllocations {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo{}
	}
	return &t.GlobalLicenseAllocations
}
func (t *Licensing_Licensing_LicensingInfo) GetLicenses() []*Licensing_Licensing_LicensingInfo_Licenses {
	if t == nil {
		t = &Licensing_Licensing_LicensingInfo{}
	}
	return t.Licenses
}

type Licensing_Licensing struct {
	LicensingInfo *Licensing_Licensing_LicensingInfo "json:\"licensingInfo,omitempty\" graphql:\"licensingInfo\""
}

func (t *Licensing_Licensing) GetLicensingInfo() *Licensing_Licensing_LicensingInfo {
	if t == nil {
		t = &Licensing_Licensing{}
	}
	return t.LicensingInfo
}

type SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_SiteRefSite struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_SiteRefSite) GetID() string {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.ID
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_SiteRefSite) GetName() string {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.Name
}

type SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity struct {
	From scalars.Asn16 "json:\"from\" graphql:\"from\""
	To   scalars.Asn16 "json:\"to\" graphql:\"to\""
}

func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetFrom() *scalars.Asn16 {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.From
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetTo() *scalars.Asn16 {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.To
}

type SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute struct {
	BgpCommunityCommunity []*SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity "json:\"bgpCommunityCommunity\" graphql:\"bgpCommunityCommunity\""
	ID                    string                                                                                      "json:\"id\" graphql:\"id\""
	Route                 string                                                                                      "json:\"route\" graphql:\"route\""
}

func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetBgpCommunityCommunity() []*SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.BgpCommunityCommunity
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetID() string {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.ID
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetRoute() string {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.Route
}

type SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings struct {
	Multiplier       int64 "json:\"multiplier\" graphql:\"multiplier\""
	ReceiveInterval  int64 "json:\"receiveInterval\" graphql:\"receiveInterval\""
	TransmitInterval int64 "json:\"transmitInterval\" graphql:\"transmitInterval\""
}

func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetMultiplier() int64 {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.Multiplier
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetReceiveInterval() int64 {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.ReceiveInterval
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetTransmitInterval() int64 {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.TransmitInterval
}

type SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpTrackingTracking struct {
	AlertFrequency cato_models.PolicyRuleTrackingFrequencyEnum "json:\"alertFrequency\" graphql:\"alertFrequency\""
	Enabled        bool                                        "json:\"enabled\" graphql:\"enabled\""
	ID             string                                      "json:\"id\" graphql:\"id\""
	SubscriptionID *string                                     "json:\"subscriptionId,omitempty\" graphql:\"subscriptionId\""
}

func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpTrackingTracking) GetAlertFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return &t.AlertFrequency
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpTrackingTracking) GetEnabled() bool {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.Enabled
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpTrackingTracking) GetID() string {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.ID
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpTrackingTracking) GetSubscriptionID() *string {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.SubscriptionID
}

type SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer struct {
	AdvertiseAllRoutes            bool                                                                  "json:\"advertiseAllRoutes\" graphql:\"advertiseAllRoutes\""
	AdvertiseDefaultRoute         bool                                                                  "json:\"advertiseDefaultRoute\" graphql:\"advertiseDefaultRoute\""
	AdvertiseSummaryRoutes        bool                                                                  "json:\"advertiseSummaryRoutes\" graphql:\"advertiseSummaryRoutes\""
	BfdEnabled                    bool                                                                  "json:\"bfdEnabled\" graphql:\"bfdEnabled\""
	BfdSettingsBfdSettings        *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings        "json:\"bfdSettingsBfdSettings,omitempty\" graphql:\"bfdSettingsBfdSettings\""
	BgpDefaultActionDefaultAction cato_models.BgpDefaultAction                                          "json:\"bgpDefaultActionDefaultAction\" graphql:\"bgpDefaultActionDefaultAction\""
	BgpSummaryRouteSummaryRoute   []*SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute "json:\"bgpSummaryRouteSummaryRoute\" graphql:\"bgpSummaryRouteSummaryRoute\""
	BgpTrackingTracking           *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpTrackingTracking           "json:\"bgpTrackingTracking,omitempty\" graphql:\"bgpTrackingTracking\""
	CatoAsn                       scalars.Asn16                                                         "json:\"catoAsn\" graphql:\"catoAsn\""
	CatoIP                        string                                                                "json:\"catoIp\" graphql:\"catoIp\""
	HoldTime                      int64                                                                 "json:\"holdTime\" graphql:\"holdTime\""
	ID                            string                                                                "json:\"id\" graphql:\"id\""
	KeepaliveInterval             int64                                                                 "json:\"keepaliveInterval\" graphql:\"keepaliveInterval\""
	Md5AuthKey                    *string                                                               "json:\"md5AuthKey,omitempty\" graphql:\"md5AuthKey\""
	Metric                        int64                                                                 "json:\"metric\" graphql:\"metric\""
	Name                          string                                                                "json:\"name\" graphql:\"name\""
	PeerAsn                       scalars.Asn32                                                         "json:\"peerAsn\" graphql:\"peerAsn\""
	PeerIP                        string                                                                "json:\"peerIp\" graphql:\"peerIp\""
	PerformNat                    bool                                                                  "json:\"performNat\" graphql:\"performNat\""
	SiteRefSite                   SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_SiteRefSite                    "json:\"siteRefSite\" graphql:\"siteRefSite\""
}

func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetAdvertiseAllRoutes() bool {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.AdvertiseAllRoutes
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetAdvertiseDefaultRoute() bool {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.AdvertiseDefaultRoute
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetAdvertiseSummaryRoutes() bool {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.AdvertiseSummaryRoutes
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetBfdEnabled() bool {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.BfdEnabled
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetBfdSettingsBfdSettings() *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.BfdSettingsBfdSettings
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetBgpDefaultActionDefaultAction() *cato_models.BgpDefaultAction {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return &t.BgpDefaultActionDefaultAction
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetBgpSummaryRouteSummaryRoute() []*SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.BgpSummaryRouteSummaryRoute
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetBgpTrackingTracking() *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_BgpTrackingTracking {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.BgpTrackingTracking
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetCatoAsn() *scalars.Asn16 {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return &t.CatoAsn
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetCatoIP() string {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.CatoIP
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetHoldTime() int64 {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.HoldTime
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetID() string {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.ID
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetKeepaliveInterval() int64 {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.KeepaliveInterval
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetMd5AuthKey() *string {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.Md5AuthKey
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetMetric() int64 {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.Metric
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetName() string {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.Name
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetPeerAsn() *scalars.Asn32 {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return &t.PeerAsn
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetPeerIP() string {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.PeerIP
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetPerformNat() bool {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return t.PerformNat
}
func (t *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer) GetSiteRefSite() *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer_SiteRefSite {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer{}
	}
	return &t.SiteRefSite
}

type SiteAddBgpPeer_Site_AddBgpPeer struct {
	BgpPeer SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer "json:\"bgpPeer\" graphql:\"bgpPeer\""
}

func (t *SiteAddBgpPeer_Site_AddBgpPeer) GetBgpPeer() *SiteAddBgpPeer_Site_AddBgpPeer_BgpPeer {
	if t == nil {
		t = &SiteAddBgpPeer_Site_AddBgpPeer{}
	}
	return &t.BgpPeer
}

type SiteAddBgpPeer_Site struct {
	AddBgpPeer *SiteAddBgpPeer_Site_AddBgpPeer "json:\"addBgpPeer,omitempty\" graphql:\"addBgpPeer\""
}

func (t *SiteAddBgpPeer_Site) GetAddBgpPeer() *SiteAddBgpPeer_Site_AddBgpPeer {
	if t == nil {
		t = &SiteAddBgpPeer_Site{}
	}
	return t.AddBgpPeer
}

type SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_SiteRefSite struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_SiteRefSite) GetID() string {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.ID
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_SiteRefSite) GetName() string {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.Name
}

type SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity struct {
	From scalars.Asn16 "json:\"from\" graphql:\"from\""
	To   scalars.Asn16 "json:\"to\" graphql:\"to\""
}

func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetFrom() *scalars.Asn16 {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.From
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetTo() *scalars.Asn16 {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.To
}

type SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute struct {
	BgpCommunityCommunity []*SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity "json:\"bgpCommunityCommunity\" graphql:\"bgpCommunityCommunity\""
	ID                    string                                                                                            "json:\"id\" graphql:\"id\""
	Route                 string                                                                                            "json:\"route\" graphql:\"route\""
}

func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetBgpCommunityCommunity() []*SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.BgpCommunityCommunity
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetID() string {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.ID
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetRoute() string {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.Route
}

type SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings struct {
	Multiplier       int64 "json:\"multiplier\" graphql:\"multiplier\""
	ReceiveInterval  int64 "json:\"receiveInterval\" graphql:\"receiveInterval\""
	TransmitInterval int64 "json:\"transmitInterval\" graphql:\"transmitInterval\""
}

func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetMultiplier() int64 {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.Multiplier
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetReceiveInterval() int64 {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.ReceiveInterval
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetTransmitInterval() int64 {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.TransmitInterval
}

type SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpTrackingTracking struct {
	AlertFrequency cato_models.PolicyRuleTrackingFrequencyEnum "json:\"alertFrequency\" graphql:\"alertFrequency\""
	Enabled        bool                                        "json:\"enabled\" graphql:\"enabled\""
	ID             string                                      "json:\"id\" graphql:\"id\""
	SubscriptionID *string                                     "json:\"subscriptionId,omitempty\" graphql:\"subscriptionId\""
}

func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpTrackingTracking) GetAlertFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return &t.AlertFrequency
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpTrackingTracking) GetEnabled() bool {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.Enabled
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpTrackingTracking) GetID() string {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.ID
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpTrackingTracking) GetSubscriptionID() *string {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.SubscriptionID
}

type SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer struct {
	AdvertiseAllRoutes            bool                                                                        "json:\"advertiseAllRoutes\" graphql:\"advertiseAllRoutes\""
	AdvertiseDefaultRoute         bool                                                                        "json:\"advertiseDefaultRoute\" graphql:\"advertiseDefaultRoute\""
	AdvertiseSummaryRoutes        bool                                                                        "json:\"advertiseSummaryRoutes\" graphql:\"advertiseSummaryRoutes\""
	BfdEnabled                    bool                                                                        "json:\"bfdEnabled\" graphql:\"bfdEnabled\""
	BfdSettingsBfdSettings        *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings        "json:\"bfdSettingsBfdSettings,omitempty\" graphql:\"bfdSettingsBfdSettings\""
	BgpDefaultActionDefaultAction cato_models.BgpDefaultAction                                                "json:\"bgpDefaultActionDefaultAction\" graphql:\"bgpDefaultActionDefaultAction\""
	BgpSummaryRouteSummaryRoute   []*SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute "json:\"bgpSummaryRouteSummaryRoute\" graphql:\"bgpSummaryRouteSummaryRoute\""
	BgpTrackingTracking           *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpTrackingTracking           "json:\"bgpTrackingTracking,omitempty\" graphql:\"bgpTrackingTracking\""
	CatoAsn                       scalars.Asn16                                                               "json:\"catoAsn\" graphql:\"catoAsn\""
	CatoIP                        string                                                                      "json:\"catoIp\" graphql:\"catoIp\""
	HoldTime                      int64                                                                       "json:\"holdTime\" graphql:\"holdTime\""
	ID                            string                                                                      "json:\"id\" graphql:\"id\""
	KeepaliveInterval             int64                                                                       "json:\"keepaliveInterval\" graphql:\"keepaliveInterval\""
	Md5AuthKey                    *string                                                                     "json:\"md5AuthKey,omitempty\" graphql:\"md5AuthKey\""
	Metric                        int64                                                                       "json:\"metric\" graphql:\"metric\""
	Name                          string                                                                      "json:\"name\" graphql:\"name\""
	PeerAsn                       scalars.Asn32                                                               "json:\"peerAsn\" graphql:\"peerAsn\""
	PeerIP                        string                                                                      "json:\"peerIp\" graphql:\"peerIp\""
	PerformNat                    bool                                                                        "json:\"performNat\" graphql:\"performNat\""
	SiteRefSite                   SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_SiteRefSite                    "json:\"siteRefSite\" graphql:\"siteRefSite\""
}

func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetAdvertiseAllRoutes() bool {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.AdvertiseAllRoutes
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetAdvertiseDefaultRoute() bool {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.AdvertiseDefaultRoute
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetAdvertiseSummaryRoutes() bool {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.AdvertiseSummaryRoutes
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetBfdEnabled() bool {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.BfdEnabled
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetBfdSettingsBfdSettings() *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.BfdSettingsBfdSettings
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetBgpDefaultActionDefaultAction() *cato_models.BgpDefaultAction {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return &t.BgpDefaultActionDefaultAction
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetBgpSummaryRouteSummaryRoute() []*SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.BgpSummaryRouteSummaryRoute
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetBgpTrackingTracking() *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_BgpTrackingTracking {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.BgpTrackingTracking
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetCatoAsn() *scalars.Asn16 {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return &t.CatoAsn
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetCatoIP() string {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.CatoIP
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetHoldTime() int64 {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.HoldTime
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetID() string {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.ID
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetKeepaliveInterval() int64 {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.KeepaliveInterval
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetMd5AuthKey() *string {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.Md5AuthKey
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetMetric() int64 {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.Metric
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetName() string {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.Name
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetPeerAsn() *scalars.Asn32 {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return &t.PeerAsn
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetPeerIP() string {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.PeerIP
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetPerformNat() bool {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return t.PerformNat
}
func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer) GetSiteRefSite() *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer_SiteRefSite {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer{}
	}
	return &t.SiteRefSite
}

type SiteRemoveBgpPeer_Site_RemoveBgpPeer struct {
	BgpPeer SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer "json:\"bgpPeer\" graphql:\"bgpPeer\""
}

func (t *SiteRemoveBgpPeer_Site_RemoveBgpPeer) GetBgpPeer() *SiteRemoveBgpPeer_Site_RemoveBgpPeer_BgpPeer {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site_RemoveBgpPeer{}
	}
	return &t.BgpPeer
}

type SiteRemoveBgpPeer_Site struct {
	RemoveBgpPeer *SiteRemoveBgpPeer_Site_RemoveBgpPeer "json:\"removeBgpPeer,omitempty\" graphql:\"removeBgpPeer\""
}

func (t *SiteRemoveBgpPeer_Site) GetRemoveBgpPeer() *SiteRemoveBgpPeer_Site_RemoveBgpPeer {
	if t == nil {
		t = &SiteRemoveBgpPeer_Site{}
	}
	return t.RemoveBgpPeer
}

type SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_SiteRefSite struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_SiteRefSite) GetID() string {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.ID
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_SiteRefSite) GetName() string {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.Name
}

type SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity struct {
	From scalars.Asn16 "json:\"from\" graphql:\"from\""
	To   scalars.Asn16 "json:\"to\" graphql:\"to\""
}

func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetFrom() *scalars.Asn16 {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.From
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetTo() *scalars.Asn16 {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.To
}

type SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute struct {
	BgpCommunityCommunity []*SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity "json:\"bgpCommunityCommunity\" graphql:\"bgpCommunityCommunity\""
	ID                    string                                                                                            "json:\"id\" graphql:\"id\""
	Route                 string                                                                                            "json:\"route\" graphql:\"route\""
}

func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetBgpCommunityCommunity() []*SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.BgpCommunityCommunity
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetID() string {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.ID
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetRoute() string {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.Route
}

type SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings struct {
	Multiplier       int64 "json:\"multiplier\" graphql:\"multiplier\""
	ReceiveInterval  int64 "json:\"receiveInterval\" graphql:\"receiveInterval\""
	TransmitInterval int64 "json:\"transmitInterval\" graphql:\"transmitInterval\""
}

func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetMultiplier() int64 {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.Multiplier
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetReceiveInterval() int64 {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.ReceiveInterval
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetTransmitInterval() int64 {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.TransmitInterval
}

type SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpTrackingTracking struct {
	AlertFrequency cato_models.PolicyRuleTrackingFrequencyEnum "json:\"alertFrequency\" graphql:\"alertFrequency\""
	Enabled        bool                                        "json:\"enabled\" graphql:\"enabled\""
	ID             string                                      "json:\"id\" graphql:\"id\""
	SubscriptionID *string                                     "json:\"subscriptionId,omitempty\" graphql:\"subscriptionId\""
}

func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpTrackingTracking) GetAlertFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return &t.AlertFrequency
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpTrackingTracking) GetEnabled() bool {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.Enabled
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpTrackingTracking) GetID() string {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.ID
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpTrackingTracking) GetSubscriptionID() *string {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.SubscriptionID
}

type SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer struct {
	AdvertiseAllRoutes            bool                                                                        "json:\"advertiseAllRoutes\" graphql:\"advertiseAllRoutes\""
	AdvertiseDefaultRoute         bool                                                                        "json:\"advertiseDefaultRoute\" graphql:\"advertiseDefaultRoute\""
	AdvertiseSummaryRoutes        bool                                                                        "json:\"advertiseSummaryRoutes\" graphql:\"advertiseSummaryRoutes\""
	BfdEnabled                    bool                                                                        "json:\"bfdEnabled\" graphql:\"bfdEnabled\""
	BfdSettingsBfdSettings        *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings        "json:\"bfdSettingsBfdSettings,omitempty\" graphql:\"bfdSettingsBfdSettings\""
	BgpDefaultActionDefaultAction cato_models.BgpDefaultAction                                                "json:\"bgpDefaultActionDefaultAction\" graphql:\"bgpDefaultActionDefaultAction\""
	BgpSummaryRouteSummaryRoute   []*SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute "json:\"bgpSummaryRouteSummaryRoute\" graphql:\"bgpSummaryRouteSummaryRoute\""
	BgpTrackingTracking           *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpTrackingTracking           "json:\"bgpTrackingTracking,omitempty\" graphql:\"bgpTrackingTracking\""
	CatoAsn                       scalars.Asn16                                                               "json:\"catoAsn\" graphql:\"catoAsn\""
	CatoIP                        string                                                                      "json:\"catoIp\" graphql:\"catoIp\""
	HoldTime                      int64                                                                       "json:\"holdTime\" graphql:\"holdTime\""
	ID                            string                                                                      "json:\"id\" graphql:\"id\""
	KeepaliveInterval             int64                                                                       "json:\"keepaliveInterval\" graphql:\"keepaliveInterval\""
	Md5AuthKey                    *string                                                                     "json:\"md5AuthKey,omitempty\" graphql:\"md5AuthKey\""
	Metric                        int64                                                                       "json:\"metric\" graphql:\"metric\""
	Name                          string                                                                      "json:\"name\" graphql:\"name\""
	PeerAsn                       scalars.Asn32                                                               "json:\"peerAsn\" graphql:\"peerAsn\""
	PeerIP                        string                                                                      "json:\"peerIp\" graphql:\"peerIp\""
	PerformNat                    bool                                                                        "json:\"performNat\" graphql:\"performNat\""
	SiteRefSite                   SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_SiteRefSite                    "json:\"siteRefSite\" graphql:\"siteRefSite\""
}

func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetAdvertiseAllRoutes() bool {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.AdvertiseAllRoutes
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetAdvertiseDefaultRoute() bool {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.AdvertiseDefaultRoute
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetAdvertiseSummaryRoutes() bool {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.AdvertiseSummaryRoutes
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetBfdEnabled() bool {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.BfdEnabled
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetBfdSettingsBfdSettings() *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.BfdSettingsBfdSettings
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetBgpDefaultActionDefaultAction() *cato_models.BgpDefaultAction {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return &t.BgpDefaultActionDefaultAction
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetBgpSummaryRouteSummaryRoute() []*SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.BgpSummaryRouteSummaryRoute
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetBgpTrackingTracking() *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_BgpTrackingTracking {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.BgpTrackingTracking
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetCatoAsn() *scalars.Asn16 {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return &t.CatoAsn
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetCatoIP() string {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.CatoIP
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetHoldTime() int64 {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.HoldTime
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetID() string {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.ID
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetKeepaliveInterval() int64 {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.KeepaliveInterval
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetMd5AuthKey() *string {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.Md5AuthKey
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetMetric() int64 {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.Metric
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetName() string {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.Name
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetPeerAsn() *scalars.Asn32 {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return &t.PeerAsn
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetPeerIP() string {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.PeerIP
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetPerformNat() bool {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return t.PerformNat
}
func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer) GetSiteRefSite() *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer_SiteRefSite {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer{}
	}
	return &t.SiteRefSite
}

type SiteUpdateBgpPeer_Site_UpdateBgpPeer struct {
	BgpPeer SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer "json:\"bgpPeer\" graphql:\"bgpPeer\""
}

func (t *SiteUpdateBgpPeer_Site_UpdateBgpPeer) GetBgpPeer() *SiteUpdateBgpPeer_Site_UpdateBgpPeer_BgpPeer {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site_UpdateBgpPeer{}
	}
	return &t.BgpPeer
}

type SiteUpdateBgpPeer_Site struct {
	UpdateBgpPeer *SiteUpdateBgpPeer_Site_UpdateBgpPeer "json:\"updateBgpPeer,omitempty\" graphql:\"updateBgpPeer\""
}

func (t *SiteUpdateBgpPeer_Site) GetUpdateBgpPeer() *SiteUpdateBgpPeer_Site_UpdateBgpPeer {
	if t == nil {
		t = &SiteUpdateBgpPeer_Site{}
	}
	return t.UpdateBgpPeer
}

type SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_SiteRefSite struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_SiteRefSite) GetID() string {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.ID
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_SiteRefSite) GetName() string {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.Name
}

type SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity struct {
	From scalars.Asn16 "json:\"from\" graphql:\"from\""
	To   scalars.Asn16 "json:\"to\" graphql:\"to\""
}

func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetFrom() *scalars.Asn16 {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.From
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetTo() *scalars.Asn16 {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.To
}

type SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute struct {
	BgpCommunityCommunity []*SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity "json:\"bgpCommunityCommunity\" graphql:\"bgpCommunityCommunity\""
	ID                    string                                                                                        "json:\"id\" graphql:\"id\""
	Route                 string                                                                                        "json:\"route\" graphql:\"route\""
}

func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetBgpCommunityCommunity() []*SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.BgpCommunityCommunity
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetID() string {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.ID
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetRoute() string {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.Route
}

type SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings struct {
	Multiplier       int64 "json:\"multiplier\" graphql:\"multiplier\""
	ReceiveInterval  int64 "json:\"receiveInterval\" graphql:\"receiveInterval\""
	TransmitInterval int64 "json:\"transmitInterval\" graphql:\"transmitInterval\""
}

func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetMultiplier() int64 {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.Multiplier
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetReceiveInterval() int64 {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.ReceiveInterval
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetTransmitInterval() int64 {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.TransmitInterval
}

type SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpTrackingTracking struct {
	AlertFrequency cato_models.PolicyRuleTrackingFrequencyEnum "json:\"alertFrequency\" graphql:\"alertFrequency\""
	Enabled        bool                                        "json:\"enabled\" graphql:\"enabled\""
	ID             string                                      "json:\"id\" graphql:\"id\""
	SubscriptionID *string                                     "json:\"subscriptionId,omitempty\" graphql:\"subscriptionId\""
}

func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpTrackingTracking) GetAlertFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return &t.AlertFrequency
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpTrackingTracking) GetEnabled() bool {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.Enabled
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpTrackingTracking) GetID() string {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.ID
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpTrackingTracking) GetSubscriptionID() *string {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.SubscriptionID
}

type SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer struct {
	AdvertiseAllRoutes            bool                                                                    "json:\"advertiseAllRoutes\" graphql:\"advertiseAllRoutes\""
	AdvertiseDefaultRoute         bool                                                                    "json:\"advertiseDefaultRoute\" graphql:\"advertiseDefaultRoute\""
	AdvertiseSummaryRoutes        bool                                                                    "json:\"advertiseSummaryRoutes\" graphql:\"advertiseSummaryRoutes\""
	BfdEnabled                    bool                                                                    "json:\"bfdEnabled\" graphql:\"bfdEnabled\""
	BfdSettingsBfdSettings        *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings        "json:\"bfdSettingsBfdSettings,omitempty\" graphql:\"bfdSettingsBfdSettings\""
	BgpDefaultActionDefaultAction cato_models.BgpDefaultAction                                            "json:\"bgpDefaultActionDefaultAction\" graphql:\"bgpDefaultActionDefaultAction\""
	BgpSummaryRouteSummaryRoute   []*SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute "json:\"bgpSummaryRouteSummaryRoute\" graphql:\"bgpSummaryRouteSummaryRoute\""
	BgpTrackingTracking           *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpTrackingTracking           "json:\"bgpTrackingTracking,omitempty\" graphql:\"bgpTrackingTracking\""
	CatoAsn                       scalars.Asn16                                                           "json:\"catoAsn\" graphql:\"catoAsn\""
	CatoIP                        string                                                                  "json:\"catoIp\" graphql:\"catoIp\""
	HoldTime                      int64                                                                   "json:\"holdTime\" graphql:\"holdTime\""
	ID                            string                                                                  "json:\"id\" graphql:\"id\""
	KeepaliveInterval             int64                                                                   "json:\"keepaliveInterval\" graphql:\"keepaliveInterval\""
	Md5AuthKey                    *string                                                                 "json:\"md5AuthKey,omitempty\" graphql:\"md5AuthKey\""
	Metric                        int64                                                                   "json:\"metric\" graphql:\"metric\""
	Name                          string                                                                  "json:\"name\" graphql:\"name\""
	PeerAsn                       scalars.Asn32                                                           "json:\"peerAsn\" graphql:\"peerAsn\""
	PeerIP                        string                                                                  "json:\"peerIp\" graphql:\"peerIp\""
	PerformNat                    bool                                                                    "json:\"performNat\" graphql:\"performNat\""
	SiteRefSite                   SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_SiteRefSite                    "json:\"siteRefSite\" graphql:\"siteRefSite\""
}

func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetAdvertiseAllRoutes() bool {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.AdvertiseAllRoutes
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetAdvertiseDefaultRoute() bool {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.AdvertiseDefaultRoute
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetAdvertiseSummaryRoutes() bool {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.AdvertiseSummaryRoutes
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetBfdEnabled() bool {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.BfdEnabled
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetBfdSettingsBfdSettings() *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BfdSettingsBfdSettings {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.BfdSettingsBfdSettings
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetBgpDefaultActionDefaultAction() *cato_models.BgpDefaultAction {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return &t.BgpDefaultActionDefaultAction
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetBgpSummaryRouteSummaryRoute() []*SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.BgpSummaryRouteSummaryRoute
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetBgpTrackingTracking() *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_BgpTrackingTracking {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.BgpTrackingTracking
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetCatoAsn() *scalars.Asn16 {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return &t.CatoAsn
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetCatoIP() string {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.CatoIP
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetHoldTime() int64 {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.HoldTime
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetID() string {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.ID
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetKeepaliveInterval() int64 {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.KeepaliveInterval
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetMd5AuthKey() *string {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.Md5AuthKey
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetMetric() int64 {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.Metric
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetName() string {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.Name
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetPeerAsn() *scalars.Asn32 {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return &t.PeerAsn
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetPeerIP() string {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.PeerIP
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetPerformNat() bool {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return t.PerformNat
}
func (t *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer) GetSiteRefSite() *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer_SiteRefSite {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer{}
	}
	return &t.SiteRefSite
}

type SitesAddBgpPeer_Sites_AddBgpPeer struct {
	BgpPeer SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer "json:\"bgpPeer\" graphql:\"bgpPeer\""
}

func (t *SitesAddBgpPeer_Sites_AddBgpPeer) GetBgpPeer() *SitesAddBgpPeer_Sites_AddBgpPeer_BgpPeer {
	if t == nil {
		t = &SitesAddBgpPeer_Sites_AddBgpPeer{}
	}
	return &t.BgpPeer
}

type SitesAddBgpPeer_Sites struct {
	AddBgpPeer *SitesAddBgpPeer_Sites_AddBgpPeer "json:\"addBgpPeer,omitempty\" graphql:\"addBgpPeer\""
}

func (t *SitesAddBgpPeer_Sites) GetAddBgpPeer() *SitesAddBgpPeer_Sites_AddBgpPeer {
	if t == nil {
		t = &SitesAddBgpPeer_Sites{}
	}
	return t.AddBgpPeer
}

type SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_SiteRefSite struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_SiteRefSite) GetID() string {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.ID
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_SiteRefSite) GetName() string {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.Name
}

type SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity struct {
	From scalars.Asn16 "json:\"from\" graphql:\"from\""
	To   scalars.Asn16 "json:\"to\" graphql:\"to\""
}

func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetFrom() *scalars.Asn16 {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.From
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetTo() *scalars.Asn16 {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.To
}

type SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute struct {
	BgpCommunityCommunity []*SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity "json:\"bgpCommunityCommunity\" graphql:\"bgpCommunityCommunity\""
	ID                    string                                                                                              "json:\"id\" graphql:\"id\""
	Route                 string                                                                                              "json:\"route\" graphql:\"route\""
}

func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetBgpCommunityCommunity() []*SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.BgpCommunityCommunity
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetID() string {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.ID
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetRoute() string {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.Route
}

type SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings struct {
	Multiplier       int64 "json:\"multiplier\" graphql:\"multiplier\""
	ReceiveInterval  int64 "json:\"receiveInterval\" graphql:\"receiveInterval\""
	TransmitInterval int64 "json:\"transmitInterval\" graphql:\"transmitInterval\""
}

func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetMultiplier() int64 {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.Multiplier
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetReceiveInterval() int64 {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.ReceiveInterval
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetTransmitInterval() int64 {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.TransmitInterval
}

type SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpTrackingTracking struct {
	AlertFrequency cato_models.PolicyRuleTrackingFrequencyEnum "json:\"alertFrequency\" graphql:\"alertFrequency\""
	Enabled        bool                                        "json:\"enabled\" graphql:\"enabled\""
	ID             string                                      "json:\"id\" graphql:\"id\""
	SubscriptionID *string                                     "json:\"subscriptionId,omitempty\" graphql:\"subscriptionId\""
}

func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpTrackingTracking) GetAlertFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return &t.AlertFrequency
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpTrackingTracking) GetEnabled() bool {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.Enabled
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpTrackingTracking) GetID() string {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.ID
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpTrackingTracking) GetSubscriptionID() *string {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.SubscriptionID
}

type SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer struct {
	AdvertiseAllRoutes            bool                                                                          "json:\"advertiseAllRoutes\" graphql:\"advertiseAllRoutes\""
	AdvertiseDefaultRoute         bool                                                                          "json:\"advertiseDefaultRoute\" graphql:\"advertiseDefaultRoute\""
	AdvertiseSummaryRoutes        bool                                                                          "json:\"advertiseSummaryRoutes\" graphql:\"advertiseSummaryRoutes\""
	BfdEnabled                    bool                                                                          "json:\"bfdEnabled\" graphql:\"bfdEnabled\""
	BfdSettingsBfdSettings        *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings        "json:\"bfdSettingsBfdSettings,omitempty\" graphql:\"bfdSettingsBfdSettings\""
	BgpDefaultActionDefaultAction cato_models.BgpDefaultAction                                                  "json:\"bgpDefaultActionDefaultAction\" graphql:\"bgpDefaultActionDefaultAction\""
	BgpSummaryRouteSummaryRoute   []*SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute "json:\"bgpSummaryRouteSummaryRoute\" graphql:\"bgpSummaryRouteSummaryRoute\""
	BgpTrackingTracking           *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpTrackingTracking           "json:\"bgpTrackingTracking,omitempty\" graphql:\"bgpTrackingTracking\""
	CatoAsn                       scalars.Asn16                                                                 "json:\"catoAsn\" graphql:\"catoAsn\""
	CatoIP                        string                                                                        "json:\"catoIp\" graphql:\"catoIp\""
	HoldTime                      int64                                                                         "json:\"holdTime\" graphql:\"holdTime\""
	ID                            string                                                                        "json:\"id\" graphql:\"id\""
	KeepaliveInterval             int64                                                                         "json:\"keepaliveInterval\" graphql:\"keepaliveInterval\""
	Md5AuthKey                    *string                                                                       "json:\"md5AuthKey,omitempty\" graphql:\"md5AuthKey\""
	Metric                        int64                                                                         "json:\"metric\" graphql:\"metric\""
	Name                          string                                                                        "json:\"name\" graphql:\"name\""
	PeerAsn                       scalars.Asn32                                                                 "json:\"peerAsn\" graphql:\"peerAsn\""
	PeerIP                        string                                                                        "json:\"peerIp\" graphql:\"peerIp\""
	PerformNat                    bool                                                                          "json:\"performNat\" graphql:\"performNat\""
	SiteRefSite                   SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_SiteRefSite                    "json:\"siteRefSite\" graphql:\"siteRefSite\""
}

func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetAdvertiseAllRoutes() bool {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.AdvertiseAllRoutes
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetAdvertiseDefaultRoute() bool {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.AdvertiseDefaultRoute
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetAdvertiseSummaryRoutes() bool {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.AdvertiseSummaryRoutes
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetBfdEnabled() bool {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.BfdEnabled
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetBfdSettingsBfdSettings() *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BfdSettingsBfdSettings {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.BfdSettingsBfdSettings
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetBgpDefaultActionDefaultAction() *cato_models.BgpDefaultAction {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return &t.BgpDefaultActionDefaultAction
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetBgpSummaryRouteSummaryRoute() []*SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.BgpSummaryRouteSummaryRoute
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetBgpTrackingTracking() *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_BgpTrackingTracking {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.BgpTrackingTracking
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetCatoAsn() *scalars.Asn16 {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return &t.CatoAsn
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetCatoIP() string {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.CatoIP
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetHoldTime() int64 {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.HoldTime
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetID() string {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.ID
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetKeepaliveInterval() int64 {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.KeepaliveInterval
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetMd5AuthKey() *string {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.Md5AuthKey
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetMetric() int64 {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.Metric
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetName() string {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.Name
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetPeerAsn() *scalars.Asn32 {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return &t.PeerAsn
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetPeerIP() string {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.PeerIP
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetPerformNat() bool {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return t.PerformNat
}
func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer) GetSiteRefSite() *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer_SiteRefSite {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer{}
	}
	return &t.SiteRefSite
}

type SitesRemoveBgpPeer_Sites_RemoveBgpPeer struct {
	BgpPeer SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer "json:\"bgpPeer\" graphql:\"bgpPeer\""
}

func (t *SitesRemoveBgpPeer_Sites_RemoveBgpPeer) GetBgpPeer() *SitesRemoveBgpPeer_Sites_RemoveBgpPeer_BgpPeer {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites_RemoveBgpPeer{}
	}
	return &t.BgpPeer
}

type SitesRemoveBgpPeer_Sites struct {
	RemoveBgpPeer *SitesRemoveBgpPeer_Sites_RemoveBgpPeer "json:\"removeBgpPeer,omitempty\" graphql:\"removeBgpPeer\""
}

func (t *SitesRemoveBgpPeer_Sites) GetRemoveBgpPeer() *SitesRemoveBgpPeer_Sites_RemoveBgpPeer {
	if t == nil {
		t = &SitesRemoveBgpPeer_Sites{}
	}
	return t.RemoveBgpPeer
}

type SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_SiteRefSite struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_SiteRefSite) GetID() string {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.ID
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_SiteRefSite) GetName() string {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_SiteRefSite{}
	}
	return t.Name
}

type SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity struct {
	From scalars.Asn16 "json:\"from\" graphql:\"from\""
	To   scalars.Asn16 "json:\"to\" graphql:\"to\""
}

func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetFrom() *scalars.Asn16 {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.From
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity) GetTo() *scalars.Asn16 {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity{}
	}
	return &t.To
}

type SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute struct {
	BgpCommunityCommunity []*SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity "json:\"bgpCommunityCommunity\" graphql:\"bgpCommunityCommunity\""
	ID                    string                                                                                              "json:\"id\" graphql:\"id\""
	Route                 string                                                                                              "json:\"route\" graphql:\"route\""
}

func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetBgpCommunityCommunity() []*SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute_BgpCommunityCommunity {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.BgpCommunityCommunity
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetID() string {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.ID
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute) GetRoute() string {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute{}
	}
	return t.Route
}

type SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings struct {
	Multiplier       int64 "json:\"multiplier\" graphql:\"multiplier\""
	ReceiveInterval  int64 "json:\"receiveInterval\" graphql:\"receiveInterval\""
	TransmitInterval int64 "json:\"transmitInterval\" graphql:\"transmitInterval\""
}

func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetMultiplier() int64 {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.Multiplier
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetReceiveInterval() int64 {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.ReceiveInterval
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings) GetTransmitInterval() int64 {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings{}
	}
	return t.TransmitInterval
}

type SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpTrackingTracking struct {
	AlertFrequency cato_models.PolicyRuleTrackingFrequencyEnum "json:\"alertFrequency\" graphql:\"alertFrequency\""
	Enabled        bool                                        "json:\"enabled\" graphql:\"enabled\""
	ID             string                                      "json:\"id\" graphql:\"id\""
	SubscriptionID *string                                     "json:\"subscriptionId,omitempty\" graphql:\"subscriptionId\""
}

func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpTrackingTracking) GetAlertFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return &t.AlertFrequency
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpTrackingTracking) GetEnabled() bool {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.Enabled
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpTrackingTracking) GetID() string {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.ID
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpTrackingTracking) GetSubscriptionID() *string {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpTrackingTracking{}
	}
	return t.SubscriptionID
}

type SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer struct {
	AdvertiseAllRoutes            bool                                                                          "json:\"advertiseAllRoutes\" graphql:\"advertiseAllRoutes\""
	AdvertiseDefaultRoute         bool                                                                          "json:\"advertiseDefaultRoute\" graphql:\"advertiseDefaultRoute\""
	AdvertiseSummaryRoutes        bool                                                                          "json:\"advertiseSummaryRoutes\" graphql:\"advertiseSummaryRoutes\""
	BfdEnabled                    bool                                                                          "json:\"bfdEnabled\" graphql:\"bfdEnabled\""
	BfdSettingsBfdSettings        *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings        "json:\"bfdSettingsBfdSettings,omitempty\" graphql:\"bfdSettingsBfdSettings\""
	BgpDefaultActionDefaultAction cato_models.BgpDefaultAction                                                  "json:\"bgpDefaultActionDefaultAction\" graphql:\"bgpDefaultActionDefaultAction\""
	BgpSummaryRouteSummaryRoute   []*SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute "json:\"bgpSummaryRouteSummaryRoute\" graphql:\"bgpSummaryRouteSummaryRoute\""
	BgpTrackingTracking           *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpTrackingTracking           "json:\"bgpTrackingTracking,omitempty\" graphql:\"bgpTrackingTracking\""
	CatoAsn                       scalars.Asn16                                                                 "json:\"catoAsn\" graphql:\"catoAsn\""
	CatoIP                        string                                                                        "json:\"catoIp\" graphql:\"catoIp\""
	HoldTime                      int64                                                                         "json:\"holdTime\" graphql:\"holdTime\""
	ID                            string                                                                        "json:\"id\" graphql:\"id\""
	KeepaliveInterval             int64                                                                         "json:\"keepaliveInterval\" graphql:\"keepaliveInterval\""
	Md5AuthKey                    *string                                                                       "json:\"md5AuthKey,omitempty\" graphql:\"md5AuthKey\""
	Metric                        int64                                                                         "json:\"metric\" graphql:\"metric\""
	Name                          string                                                                        "json:\"name\" graphql:\"name\""
	PeerAsn                       scalars.Asn32                                                                 "json:\"peerAsn\" graphql:\"peerAsn\""
	PeerIP                        string                                                                        "json:\"peerIp\" graphql:\"peerIp\""
	PerformNat                    bool                                                                          "json:\"performNat\" graphql:\"performNat\""
	SiteRefSite                   SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_SiteRefSite                    "json:\"siteRefSite\" graphql:\"siteRefSite\""
}

func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetAdvertiseAllRoutes() bool {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.AdvertiseAllRoutes
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetAdvertiseDefaultRoute() bool {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.AdvertiseDefaultRoute
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetAdvertiseSummaryRoutes() bool {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.AdvertiseSummaryRoutes
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetBfdEnabled() bool {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.BfdEnabled
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetBfdSettingsBfdSettings() *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BfdSettingsBfdSettings {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.BfdSettingsBfdSettings
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetBgpDefaultActionDefaultAction() *cato_models.BgpDefaultAction {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return &t.BgpDefaultActionDefaultAction
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetBgpSummaryRouteSummaryRoute() []*SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpSummaryRouteSummaryRoute {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.BgpSummaryRouteSummaryRoute
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetBgpTrackingTracking() *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_BgpTrackingTracking {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.BgpTrackingTracking
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetCatoAsn() *scalars.Asn16 {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return &t.CatoAsn
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetCatoIP() string {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.CatoIP
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetHoldTime() int64 {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.HoldTime
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetID() string {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.ID
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetKeepaliveInterval() int64 {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.KeepaliveInterval
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetMd5AuthKey() *string {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.Md5AuthKey
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetMetric() int64 {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.Metric
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetName() string {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.Name
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetPeerAsn() *scalars.Asn32 {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return &t.PeerAsn
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetPeerIP() string {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.PeerIP
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetPerformNat() bool {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return t.PerformNat
}
func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer) GetSiteRefSite() *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer_SiteRefSite {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer{}
	}
	return &t.SiteRefSite
}

type SitesUpdateBgpPeer_Sites_UpdateBgpPeer struct {
	BgpPeer SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer "json:\"bgpPeer\" graphql:\"bgpPeer\""
}

func (t *SitesUpdateBgpPeer_Sites_UpdateBgpPeer) GetBgpPeer() *SitesUpdateBgpPeer_Sites_UpdateBgpPeer_BgpPeer {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites_UpdateBgpPeer{}
	}
	return &t.BgpPeer
}

type SitesUpdateBgpPeer_Sites struct {
	UpdateBgpPeer *SitesUpdateBgpPeer_Sites_UpdateBgpPeer "json:\"updateBgpPeer,omitempty\" graphql:\"updateBgpPeer\""
}

func (t *SitesUpdateBgpPeer_Sites) GetUpdateBgpPeer() *SitesUpdateBgpPeer_Sites_UpdateBgpPeer {
	if t == nil {
		t = &SitesUpdateBgpPeer_Sites{}
	}
	return t.UpdateBgpPeer
}

type PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section struct {
	Audit      PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                           "json:\"properties\" graphql:\"properties\""
	Section    PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section) GetAudit() *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Audit {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section) GetSection() *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section_Section {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section{}
	}
	return &t.Section
}

type PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection struct {
	Errors  []*PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Errors "json:\"errors\" graphql:\"errors\""
	Section *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section  "json:\"section,omitempty\" graphql:\"section\""
	Status  cato_models.PolicyMutationStatus                                              "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection) GetErrors() []*PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Errors {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection) GetSection() *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection_Section {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection{}
	}
	return t.Section
}
func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection{}
	}
	return &t.Status
}

type PolicyInternetFirewallAddSection_Policy_InternetFirewall struct {
	AddSection PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection "json:\"addSection\" graphql:\"addSection\""
}

func (t *PolicyInternetFirewallAddSection_Policy_InternetFirewall) GetAddSection() *PolicyInternetFirewallAddSection_Policy_InternetFirewall_AddSection {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy_InternetFirewall{}
	}
	return &t.AddSection
}

type PolicyInternetFirewallAddSection_Policy struct {
	InternetFirewall *PolicyInternetFirewallAddSection_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallAddSection_Policy) GetInternetFirewall() *PolicyInternetFirewallAddSection_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallAddSection_Policy{}
	}
	return t.InternetFirewall
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                              "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                              "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetFloatingSubnet() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetGlobalIPRange() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetGroup() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetHost() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetIPRange() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetNetworkInterface() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetSite() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetSystemGroup() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetUser() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetUsersGroup() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination struct {
	AppCategory            []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                        "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                        "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                        "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                                                 "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                        "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetAppCategory() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetApplication() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetCountry() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetCustomApp() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetCustomCategory() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetGlobalIPRange() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetIPRange() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom struct {
	Port                   []scalars.Port                                                                                                                                   "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                                           "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom) GetPortRangeCustomService() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service struct {
	Custom   []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service) GetCustom() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service) GetStandard() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                                                          "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                                                   "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetMailingList() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetWebhook() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking struct {
	Alert PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking) GetAlert() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking) GetEvent() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.From
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.To
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return t.Days
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.To
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule struct {
	ActiveOn        cato_models.PolicyActiveOnEnum                                                                                                      "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurring *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring "json:\"customRecurring,omitempty\" graphql:\"customRecurring\""
	CustomTimeframe *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe "json:\"customTimeframe,omitempty\" graphql:\"customTimeframe\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule) GetCustomRecurring() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomRecurring
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule) GetCustomTimeframe() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomTimeframe
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                                         "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                                         "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGroup() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetHost() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIPRange() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSite() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSystemGroup() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUser() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUsersGroup() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination struct {
	AppCategory            []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                                   "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                                   "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                                   "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                                                            "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                                   "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetAppCategory() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetApplication() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetCountry() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetCustomApp() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetCustomCategory() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIPRange() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom struct {
	Port      []scalars.Port                                                                                                                                 "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                                                                         "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPortRange() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service struct {
	Custom   []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetCustom() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetStandard() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions struct {
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                                 "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                                    "json:\"deviceOS\" graphql:\"deviceOS\""
	Name             string                                                                                                                           "json:\"name\" graphql:\"name\""
	Service          PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetCountry() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetDestination() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetDevice() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetService() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetSource() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule struct {
	Action           cato_models.InternetFirewallActionEnum                                                                                  "json:\"action\" graphql:\"action\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                        "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                                                  "json:\"description\" graphql:\"description\""
	Destination      PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                           "json:\"deviceOS\" graphql:\"deviceOS\""
	Enabled          bool                                                                                                                    "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                                                  "json:\"id\" graphql:\"id\""
	Index            int64                                                                                                                   "json:\"index\" graphql:\"index\""
	Name             string                                                                                                                  "json:\"name\" graphql:\"name\""
	Schedule         PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetAction() *cato_models.InternetFirewallActionEnum {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Action
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetCountry() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetDestination() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetDevice() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetExceptions() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Index
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetSchedule() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetSection() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Section
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetService() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetSource() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Source
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetTracking() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Tracking
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules struct {
	Audit      PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                                  "json:\"properties\" graphql:\"properties\""
	Rule       PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules) GetAudit() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Audit {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules) GetRule() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules_Rule {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules{}
	}
	return &t.Rule
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections struct {
	Audit      PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                                       "json:\"properties\" graphql:\"properties\""
	Section    PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections) GetAudit() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Audit {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections) GetSection() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections_Section {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections{}
	}
	return &t.Section
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_AuditInternetFirewallPolicy struct {
	PublishedBy   string "json:\"publishedBy\" graphql:\"publishedBy\""
	PublishedTime string "json:\"publishedTime\" graphql:\"publishedTime\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_AuditInternetFirewallPolicy) GetPublishedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_AuditInternetFirewallPolicy{}
	}
	return t.PublishedBy
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_AuditInternetFirewallPolicy) GetPublishedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_AuditInternetFirewallPolicy{}
	}
	return t.PublishedTime
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy) GetChanges() int64 {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Changes
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy) GetCreatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.CreatedTime
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy struct {
	AuditInternetFirewallPolicy    *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_AuditInternetFirewallPolicy    "json:\"auditInternetFirewallPolicy,omitempty\" graphql:\"auditInternetFirewallPolicy\""
	Enabled                        bool                                                                                                                           "json:\"enabled\" graphql:\"enabled\""
	RevisionInternetFirewallPolicy *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy "json:\"revisionInternetFirewallPolicy,omitempty\" graphql:\"revisionInternetFirewallPolicy\""
	Rules                          []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules                        "json:\"rules\" graphql:\"rules\""
	Sections                       []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections                     "json:\"sections\" graphql:\"sections\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy) GetAuditInternetFirewallPolicy() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_AuditInternetFirewallPolicy {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy{}
	}
	return t.AuditInternetFirewallPolicy
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy) GetRevisionInternetFirewallPolicy() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_RevisionInternetFirewallPolicy {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy{}
	}
	return t.RevisionInternetFirewallPolicy
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy) GetRules() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Rules {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy{}
	}
	return t.Rules
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy) GetSections() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy_Sections {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy{}
	}
	return t.Sections
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision struct {
	Errors []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Errors "json:\"errors\" graphql:\"errors\""
	Policy *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy   "json:\"policy,omitempty\" graphql:\"policy\""
	Status cato_models.PolicyMutationStatus                                                                  "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision) GetErrors() []*PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Errors {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision) GetPolicy() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision_Policy {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision{}
	}
	return t.Policy
}
func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision{}
	}
	return &t.Status
}

type PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall struct {
	CreatePolicyRevision PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision "json:\"createPolicyRevision\" graphql:\"createPolicyRevision\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall) GetCreatePolicyRevision() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall_CreatePolicyRevision {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall{}
	}
	return &t.CreatePolicyRevision
}

type PolicyInternetFirewallCreatePolicyRevision_Policy struct {
	InternetFirewall *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision_Policy) GetInternetFirewall() *PolicyInternetFirewallCreatePolicyRevision_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision_Policy{}
	}
	return t.InternetFirewall
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                                "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                                "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetFloatingSubnet() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetGlobalIPRange() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetGroup() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetHost() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetIPRange() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetNetworkInterface() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetSite() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetSystemGroup() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetUser() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetUsersGroup() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination struct {
	AppCategory            []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                          "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                          "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                          "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                                                   "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                          "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetAppCategory() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetApplication() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetCountry() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetCustomApp() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetCustomCategory() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetGlobalIPRange() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetIPRange() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom struct {
	Port                   []scalars.Port                                                                                                                                     "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                                             "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom) GetPortRangeCustomService() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service struct {
	Custom   []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service) GetCustom() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service) GetStandard() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                                                            "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                                                     "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetMailingList() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetWebhook() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking struct {
	Alert PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking) GetAlert() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking) GetEvent() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.From
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.To
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return t.Days
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.To
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule struct {
	ActiveOn        cato_models.PolicyActiveOnEnum                                                                                                        "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurring *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring "json:\"customRecurring,omitempty\" graphql:\"customRecurring\""
	CustomTimeframe *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe "json:\"customTimeframe,omitempty\" graphql:\"customTimeframe\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule) GetCustomRecurring() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomRecurring
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule) GetCustomTimeframe() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomTimeframe
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                                           "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                                           "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGroup() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetHost() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIPRange() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSite() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSystemGroup() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUser() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUsersGroup() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination struct {
	AppCategory            []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                                     "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                                     "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                                     "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                                                              "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                                     "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetAppCategory() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetApplication() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetCountry() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetCustomApp() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetCustomCategory() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIPRange() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom struct {
	Port      []scalars.Port                                                                                                                                   "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                                                                           "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPortRange() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service struct {
	Custom   []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetCustom() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetStandard() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions struct {
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                                   "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                                      "json:\"deviceOS\" graphql:\"deviceOS\""
	Name             string                                                                                                                             "json:\"name\" graphql:\"name\""
	Service          PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetCountry() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetDestination() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetDevice() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetService() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetSource() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule struct {
	Action           cato_models.InternetFirewallActionEnum                                                                                    "json:\"action\" graphql:\"action\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                          "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                                                    "json:\"description\" graphql:\"description\""
	Destination      PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                             "json:\"deviceOS\" graphql:\"deviceOS\""
	Enabled          bool                                                                                                                      "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                                                    "json:\"id\" graphql:\"id\""
	Index            int64                                                                                                                     "json:\"index\" graphql:\"index\""
	Name             string                                                                                                                    "json:\"name\" graphql:\"name\""
	Schedule         PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetAction() *cato_models.InternetFirewallActionEnum {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Action
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetCountry() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetDestination() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetDevice() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetExceptions() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Index
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetSchedule() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetSection() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Section
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetService() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetSource() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Source
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetTracking() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Tracking
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules struct {
	Audit      PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                                    "json:\"properties\" graphql:\"properties\""
	Rule       PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules) GetAudit() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Audit {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules) GetRule() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules_Rule {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules{}
	}
	return &t.Rule
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections struct {
	Audit      PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                                         "json:\"properties\" graphql:\"properties\""
	Section    PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections) GetAudit() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Audit {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections) GetSection() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections_Section {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections{}
	}
	return &t.Section
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_AuditInternetFirewallPolicy struct {
	PublishedBy   string "json:\"publishedBy\" graphql:\"publishedBy\""
	PublishedTime string "json:\"publishedTime\" graphql:\"publishedTime\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_AuditInternetFirewallPolicy) GetPublishedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_AuditInternetFirewallPolicy{}
	}
	return t.PublishedBy
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_AuditInternetFirewallPolicy) GetPublishedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_AuditInternetFirewallPolicy{}
	}
	return t.PublishedTime
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetChanges() int64 {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Changes
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetCreatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.CreatedTime
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy struct {
	AuditInternetFirewallPolicy    *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_AuditInternetFirewallPolicy    "json:\"auditInternetFirewallPolicy,omitempty\" graphql:\"auditInternetFirewallPolicy\""
	Enabled                        bool                                                                                                                             "json:\"enabled\" graphql:\"enabled\""
	RevisionInternetFirewallPolicy *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy "json:\"revisionInternetFirewallPolicy,omitempty\" graphql:\"revisionInternetFirewallPolicy\""
	Rules                          []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules                        "json:\"rules\" graphql:\"rules\""
	Sections                       []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections                     "json:\"sections\" graphql:\"sections\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy) GetAuditInternetFirewallPolicy() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_AuditInternetFirewallPolicy {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy{}
	}
	return t.AuditInternetFirewallPolicy
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy) GetRevisionInternetFirewallPolicy() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_RevisionInternetFirewallPolicy {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy{}
	}
	return t.RevisionInternetFirewallPolicy
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy) GetRules() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Rules {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy{}
	}
	return t.Rules
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy) GetSections() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy_Sections {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy{}
	}
	return t.Sections
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision struct {
	Errors []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Errors "json:\"errors\" graphql:\"errors\""
	Policy *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy   "json:\"policy,omitempty\" graphql:\"policy\""
	Status cato_models.PolicyMutationStatus                                                                    "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision) GetErrors() []*PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Errors {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision) GetPolicy() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision_Policy {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision{}
	}
	return t.Policy
}
func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision{}
	}
	return &t.Status
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall struct {
	DiscardPolicyRevision PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision "json:\"discardPolicyRevision\" graphql:\"discardPolicyRevision\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall) GetDiscardPolicyRevision() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall_DiscardPolicyRevision {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall{}
	}
	return &t.DiscardPolicyRevision
}

type PolicyInternetFirewallDiscardPolicyRevision_Policy struct {
	InternetFirewall *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision_Policy) GetInternetFirewall() *PolicyInternetFirewallDiscardPolicyRevision_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision_Policy{}
	}
	return t.InternetFirewall
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                              "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                              "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetFloatingSubnet() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetGlobalIPRange() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetGroup() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetHost() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetIPRange() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetNetworkInterface() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetSite() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetSystemGroup() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetUser() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source) GetUsersGroup() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination struct {
	AppCategory            []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                        "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                        "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                        "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                 "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                        "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetAppCategory() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetApplication() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetCountry() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetCustomApp() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetCustomCategory() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetGlobalIPRange() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetIPRange() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom struct {
	Port      []scalars.Port                                                                                      "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                              "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom) GetPortRange() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service struct {
	Custom   []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service) GetCustom() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service) GetStandard() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                          "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                   "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert) GetMailingList() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert) GetWebhook() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking struct {
	Alert PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking) GetAlert() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking) GetEvent() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.From
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.To
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return t.Days
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.To
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule struct {
	ActiveOn                      cato_models.PolicyActiveOnEnum                                                                                    "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurringPolicySchedule *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule "json:\"customRecurringPolicySchedule,omitempty\" graphql:\"customRecurringPolicySchedule\""
	CustomTimeframePolicySchedule *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule "json:\"customTimeframePolicySchedule,omitempty\" graphql:\"customTimeframePolicySchedule\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule) GetCustomRecurringPolicySchedule() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule{}
	}
	return t.CustomRecurringPolicySchedule
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule) GetCustomTimeframePolicySchedule() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule{}
	}
	return t.CustomTimeframePolicySchedule
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                         "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                         "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetGroup() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetHost() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetIPRange() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetSite() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetSystemGroup() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetUser() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetUsersGroup() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination struct {
	AppCategory            []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                   "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                   "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                   "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                            "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                   "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetAppCategory() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetApplication() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetCountry() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetCustomApp() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetCustomCategory() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetIPRange() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom struct {
	Port                   []scalars.Port                                                                                                              "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                      "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom) GetPortRangeCustomService() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service struct {
	Custom   []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service) GetCustom() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service) GetStandard() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions struct {
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                 "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                    "json:\"deviceOS\" graphql:\"deviceOS\""
	Name             string                                                                                           "json:\"name\" graphql:\"name\""
	Service          PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions) GetCountry() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions) GetDestination() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions) GetDevice() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions) GetService() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions) GetSource() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule struct {
	Action           cato_models.InternetFirewallActionEnum                                                  "json:\"action\" graphql:\"action\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                        "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                  "json:\"description\" graphql:\"description\""
	Destination      PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                           "json:\"deviceOS\" graphql:\"deviceOS\""
	Enabled          bool                                                                                    "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                  "json:\"id\" graphql:\"id\""
	Index            int64                                                                                   "json:\"index\" graphql:\"index\""
	Name             string                                                                                  "json:\"name\" graphql:\"name\""
	Schedule         PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetAction() *cato_models.InternetFirewallActionEnum {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Action
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetCountry() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Country {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetDestination() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Destination {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetDevice() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Device {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetExceptions() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Exceptions {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return t.Index
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetSchedule() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Schedule {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetSection() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Section {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Section
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetService() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Service {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetSource() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Source {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Source
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule) GetTracking() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule_Tracking {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Tracking
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule struct {
	Audit      PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                  "json:\"properties\" graphql:\"properties\""
	Rule       PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule) GetAudit() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Audit {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule) GetRule() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule_Rule {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule{}
	}
	return &t.Rule
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule struct {
	Errors []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Errors "json:\"errors\" graphql:\"errors\""
	Rule   *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule     "json:\"rule,omitempty\" graphql:\"rule\""
	Status cato_models.PolicyMutationStatus                                          "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule) GetErrors() []*PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Errors {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule) GetRule() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule_Rule {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule{}
	}
	return t.Rule
}
func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule{}
	}
	return &t.Status
}

type PolicyInternetFirewallMoveRule_Policy_InternetFirewall struct {
	MoveRule PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule "json:\"moveRule\" graphql:\"moveRule\""
}

func (t *PolicyInternetFirewallMoveRule_Policy_InternetFirewall) GetMoveRule() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall_MoveRule {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy_InternetFirewall{}
	}
	return &t.MoveRule
}

type PolicyInternetFirewallMoveRule_Policy struct {
	InternetFirewall *PolicyInternetFirewallMoveRule_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallMoveRule_Policy) GetInternetFirewall() *PolicyInternetFirewallMoveRule_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule_Policy{}
	}
	return t.InternetFirewall
}

type PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section struct {
	Audit      PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                             "json:\"properties\" graphql:\"properties\""
	Section    PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section) GetAudit() *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Audit {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section) GetSection() *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section_Section {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section{}
	}
	return &t.Section
}

type PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection struct {
	Errors  []*PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Errors "json:\"errors\" graphql:\"errors\""
	Section *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section  "json:\"section,omitempty\" graphql:\"section\""
	Status  cato_models.PolicyMutationStatus                                                "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection) GetErrors() []*PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Errors {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection) GetSection() *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection_Section {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection{}
	}
	return t.Section
}
func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection{}
	}
	return &t.Status
}

type PolicyInternetFirewallMoveSection_Policy_InternetFirewall struct {
	MoveSection PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection "json:\"moveSection\" graphql:\"moveSection\""
}

func (t *PolicyInternetFirewallMoveSection_Policy_InternetFirewall) GetMoveSection() *PolicyInternetFirewallMoveSection_Policy_InternetFirewall_MoveSection {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy_InternetFirewall{}
	}
	return &t.MoveSection
}

type PolicyInternetFirewallMoveSection_Policy struct {
	InternetFirewall *PolicyInternetFirewallMoveSection_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallMoveSection_Policy) GetInternetFirewall() *PolicyInternetFirewallMoveSection_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection_Policy{}
	}
	return t.InternetFirewall
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                  "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                  "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetFloatingSubnet() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetGlobalIPRange() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetGroup() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetHost() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetIPRange() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetNetworkInterface() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetSite() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetSystemGroup() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetUser() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source) GetUsersGroup() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination struct {
	AppCategory            []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                            "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                            "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                            "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                     "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                            "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetAppCategory() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetApplication() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetCountry() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetCustomApp() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetCustomCategory() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetGlobalIPRange() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetIPRange() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom struct {
	Port      []scalars.Port                                                                                          "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                                  "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom) GetPortRange() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service struct {
	Custom   []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service) GetCustom() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service) GetStandard() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                              "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                       "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert) GetMailingList() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert) GetWebhook() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking struct {
	Alert PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking) GetAlert() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking) GetEvent() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.From
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.To
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return t.Days
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.To
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule struct {
	ActiveOn                      cato_models.PolicyActiveOnEnum                                                                                        "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurringPolicySchedule *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule "json:\"customRecurringPolicySchedule,omitempty\" graphql:\"customRecurringPolicySchedule\""
	CustomTimeframePolicySchedule *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule "json:\"customTimeframePolicySchedule,omitempty\" graphql:\"customTimeframePolicySchedule\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule) GetCustomRecurringPolicySchedule() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule{}
	}
	return t.CustomRecurringPolicySchedule
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule) GetCustomTimeframePolicySchedule() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule{}
	}
	return t.CustomTimeframePolicySchedule
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                             "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                             "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetGroup() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetHost() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetIPRange() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetSite() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetSystemGroup() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetUser() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetUsersGroup() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination struct {
	AppCategory            []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                       "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                       "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                       "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                                "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                       "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetAppCategory() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetApplication() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetCountry() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetCustomApp() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetCustomCategory() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetIPRange() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom struct {
	Port                   []scalars.Port                                                                                                                  "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                          "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom) GetPortRangeCustomService() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service struct {
	Custom   []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service) GetCustom() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service) GetStandard() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions struct {
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                     "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                        "json:\"deviceOS\" graphql:\"deviceOS\""
	Name             string                                                                                               "json:\"name\" graphql:\"name\""
	Service          PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions) GetCountry() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions) GetDestination() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions) GetDevice() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions) GetService() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions) GetSource() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule struct {
	Action           cato_models.InternetFirewallActionEnum                                                      "json:\"action\" graphql:\"action\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                            "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                      "json:\"description\" graphql:\"description\""
	Destination      PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                               "json:\"deviceOS\" graphql:\"deviceOS\""
	Enabled          bool                                                                                        "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                      "json:\"id\" graphql:\"id\""
	Index            int64                                                                                       "json:\"index\" graphql:\"index\""
	Name             string                                                                                      "json:\"name\" graphql:\"name\""
	Schedule         PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetAction() *cato_models.InternetFirewallActionEnum {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Action
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetCountry() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Country {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetDestination() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Destination {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetDevice() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Device {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetExceptions() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Exceptions {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Index
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetSchedule() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Schedule {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetSection() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Section {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Section
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetService() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Service {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetSource() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Source {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Source
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule) GetTracking() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule_Tracking {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Tracking
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule struct {
	Audit      PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                      "json:\"properties\" graphql:\"properties\""
	Rule       PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule) GetAudit() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Audit {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule) GetRule() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule_Rule {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule{}
	}
	return &t.Rule
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule struct {
	Errors []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Errors "json:\"errors\" graphql:\"errors\""
	Rule   *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule     "json:\"rule,omitempty\" graphql:\"rule\""
	Status cato_models.PolicyMutationStatus                                              "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule) GetErrors() []*PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Errors {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule) GetRule() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule_Rule {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule{}
	}
	return t.Rule
}
func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule{}
	}
	return &t.Status
}

type PolicyInternetFirewallRemoveRule_Policy_InternetFirewall struct {
	RemoveRule PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule "json:\"removeRule\" graphql:\"removeRule\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall) GetRemoveRule() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall_RemoveRule {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy_InternetFirewall{}
	}
	return &t.RemoveRule
}

type PolicyInternetFirewallRemoveRule_Policy struct {
	InternetFirewall *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallRemoveRule_Policy) GetInternetFirewall() *PolicyInternetFirewallRemoveRule_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule_Policy{}
	}
	return t.InternetFirewall
}

type PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section struct {
	Audit      PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                 "json:\"properties\" graphql:\"properties\""
	Section    PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section) GetAudit() *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Audit {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section) GetSection() *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section_Section {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section{}
	}
	return &t.Section
}

type PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection struct {
	Errors  []*PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Errors "json:\"errors\" graphql:\"errors\""
	Section *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section  "json:\"section,omitempty\" graphql:\"section\""
	Status  cato_models.PolicyMutationStatus                                                    "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection) GetErrors() []*PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Errors {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection) GetSection() *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection_Section {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection{}
	}
	return t.Section
}
func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection{}
	}
	return &t.Status
}

type PolicyInternetFirewallRemoveSection_Policy_InternetFirewall struct {
	RemoveSection PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection "json:\"removeSection\" graphql:\"removeSection\""
}

func (t *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall) GetRemoveSection() *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall_RemoveSection {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy_InternetFirewall{}
	}
	return &t.RemoveSection
}

type PolicyInternetFirewallRemoveSection_Policy struct {
	InternetFirewall *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallRemoveSection_Policy) GetInternetFirewall() *PolicyInternetFirewallRemoveSection_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection_Policy{}
	}
	return t.InternetFirewall
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                                "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                                "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetFloatingSubnet() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetGlobalIPRange() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetGroup() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetHost() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetIPRange() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetNetworkInterface() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetSite() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetSystemGroup() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetUser() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetUsersGroup() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination struct {
	AppCategory            []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                          "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                          "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                          "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                                                   "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                          "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetAppCategory() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetApplication() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetCountry() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetCustomApp() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetCustomCategory() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetGlobalIPRange() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetIPRange() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom struct {
	Port                   []scalars.Port                                                                                                                                     "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                                             "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom) GetPortRangeCustomService() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service struct {
	Custom   []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service) GetCustom() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service) GetStandard() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                                                            "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                                                     "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetMailingList() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetWebhook() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking struct {
	Alert PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking) GetAlert() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking) GetEvent() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.From
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.To
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return t.Days
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.To
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule struct {
	ActiveOn        cato_models.PolicyActiveOnEnum                                                                                                        "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurring *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring "json:\"customRecurring,omitempty\" graphql:\"customRecurring\""
	CustomTimeframe *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe "json:\"customTimeframe,omitempty\" graphql:\"customTimeframe\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule) GetCustomRecurring() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomRecurring
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule) GetCustomTimeframe() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomTimeframe
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                                           "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                                           "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGroup() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetHost() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIPRange() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSite() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSystemGroup() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUser() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUsersGroup() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination struct {
	AppCategory            []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                                     "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                                     "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                                     "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                                                              "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                                     "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetAppCategory() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetApplication() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetCountry() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetCustomApp() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetCustomCategory() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIPRange() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom struct {
	Port      []scalars.Port                                                                                                                                   "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                                                                           "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPortRange() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service struct {
	Custom   []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetCustom() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetStandard() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions struct {
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                                   "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                                      "json:\"deviceOS\" graphql:\"deviceOS\""
	Name             string                                                                                                                             "json:\"name\" graphql:\"name\""
	Service          PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetCountry() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetDestination() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetDevice() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetService() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetSource() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule struct {
	Action           cato_models.InternetFirewallActionEnum                                                                                    "json:\"action\" graphql:\"action\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                          "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                                                    "json:\"description\" graphql:\"description\""
	Destination      PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                             "json:\"deviceOS\" graphql:\"deviceOS\""
	Enabled          bool                                                                                                                      "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                                                    "json:\"id\" graphql:\"id\""
	Index            int64                                                                                                                     "json:\"index\" graphql:\"index\""
	Name             string                                                                                                                    "json:\"name\" graphql:\"name\""
	Schedule         PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetAction() *cato_models.InternetFirewallActionEnum {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Action
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetCountry() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetDestination() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetDevice() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetExceptions() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Index
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetSchedule() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetSection() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Section
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetService() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetSource() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Source
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetTracking() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Tracking
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules struct {
	Audit      PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                                    "json:\"properties\" graphql:\"properties\""
	Rule       PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules) GetAudit() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Audit {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules) GetRule() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules_Rule {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules{}
	}
	return &t.Rule
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections struct {
	Audit      PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                                         "json:\"properties\" graphql:\"properties\""
	Section    PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections) GetAudit() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Audit {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections) GetSection() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections_Section {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections{}
	}
	return &t.Section
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_AuditInternetFirewallPolicy struct {
	PublishedBy   string "json:\"publishedBy\" graphql:\"publishedBy\""
	PublishedTime string "json:\"publishedTime\" graphql:\"publishedTime\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_AuditInternetFirewallPolicy) GetPublishedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_AuditInternetFirewallPolicy{}
	}
	return t.PublishedBy
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_AuditInternetFirewallPolicy) GetPublishedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_AuditInternetFirewallPolicy{}
	}
	return t.PublishedTime
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetChanges() int64 {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Changes
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetCreatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.CreatedTime
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy struct {
	AuditInternetFirewallPolicy    *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_AuditInternetFirewallPolicy    "json:\"auditInternetFirewallPolicy,omitempty\" graphql:\"auditInternetFirewallPolicy\""
	Enabled                        bool                                                                                                                             "json:\"enabled\" graphql:\"enabled\""
	RevisionInternetFirewallPolicy *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy "json:\"revisionInternetFirewallPolicy,omitempty\" graphql:\"revisionInternetFirewallPolicy\""
	Rules                          []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules                        "json:\"rules\" graphql:\"rules\""
	Sections                       []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections                     "json:\"sections\" graphql:\"sections\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy) GetAuditInternetFirewallPolicy() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_AuditInternetFirewallPolicy {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy{}
	}
	return t.AuditInternetFirewallPolicy
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy) GetRevisionInternetFirewallPolicy() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_RevisionInternetFirewallPolicy {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy{}
	}
	return t.RevisionInternetFirewallPolicy
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy) GetRules() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Rules {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy{}
	}
	return t.Rules
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy) GetSections() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy_Sections {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy{}
	}
	return t.Sections
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision struct {
	Errors []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Errors "json:\"errors\" graphql:\"errors\""
	Policy *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy   "json:\"policy,omitempty\" graphql:\"policy\""
	Status cato_models.PolicyMutationStatus                                                                    "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision) GetErrors() []*PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Errors {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision) GetPolicy() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision_Policy {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision{}
	}
	return t.Policy
}
func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision{}
	}
	return &t.Status
}

type PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall struct {
	PublishPolicyRevision PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision "json:\"publishPolicyRevision\" graphql:\"publishPolicyRevision\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall) GetPublishPolicyRevision() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall_PublishPolicyRevision {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall{}
	}
	return &t.PublishPolicyRevision
}

type PolicyInternetFirewallPublishPolicyRevision_Policy struct {
	InternetFirewall *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision_Policy) GetInternetFirewall() *PolicyInternetFirewallPublishPolicyRevision_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision_Policy{}
	}
	return t.InternetFirewall
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                  "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                  "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetFloatingSubnet() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetGlobalIPRange() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetGroup() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetHost() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetIPRange() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetNetworkInterface() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetSite() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetSystemGroup() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetUser() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source) GetUsersGroup() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination struct {
	AppCategory            []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                            "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                            "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                            "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                     "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                            "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetAppCategory() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetApplication() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetCountry() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetCustomApp() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetCustomCategory() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetGlobalIPRange() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetIPRange() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom struct {
	Port      []scalars.Port                                                                                          "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                                  "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom) GetPortRange() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service struct {
	Custom   []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service) GetCustom() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service) GetStandard() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                              "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                       "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert) GetMailingList() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert) GetWebhook() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking struct {
	Alert PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking) GetAlert() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking) GetEvent() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.From
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.To
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return t.Days
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.To
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule struct {
	ActiveOnPolicySchedule        cato_models.PolicyActiveOnEnum                                                                                        "json:\"activeOnPolicySchedule\" graphql:\"activeOnPolicySchedule\""
	CustomRecurringPolicySchedule *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule "json:\"customRecurringPolicySchedule,omitempty\" graphql:\"customRecurringPolicySchedule\""
	CustomTimeframePolicySchedule *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule "json:\"customTimeframePolicySchedule,omitempty\" graphql:\"customTimeframePolicySchedule\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule) GetActiveOnPolicySchedule() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule{}
	}
	return &t.ActiveOnPolicySchedule
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule) GetCustomRecurringPolicySchedule() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule{}
	}
	return t.CustomRecurringPolicySchedule
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule) GetCustomTimeframePolicySchedule() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule{}
	}
	return t.CustomTimeframePolicySchedule
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                             "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                             "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetGroup() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetHost() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetIPRange() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetSite() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetSystemGroup() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetUser() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetUsersGroup() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination struct {
	AppCategory            []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                       "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                       "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                       "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                                "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                       "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetAppCategory() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetApplication() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetCountry() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetCustomApp() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetCustomCategory() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetIPRange() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom struct {
	Port                   []scalars.Port                                                                                                                  "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                          "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom) GetPortRangeCustomService() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service struct {
	Custom   []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service) GetCustom() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service) GetStandard() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions struct {
	ConnectionOriginInternetFirewallRuleException cato_models.ConnectionOriginEnum                                                                     "json:\"connectionOriginInternetFirewallRuleException\" graphql:\"connectionOriginInternetFirewallRuleException\""
	Country                                       []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination                                   PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device                                        []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs                                      []cato_models.OperatingSystem                                                                        "json:\"deviceOS\" graphql:\"deviceOS\""
	Name                                          string                                                                                               "json:\"name\" graphql:\"name\""
	Service                                       PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source                                        PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions) GetConnectionOriginInternetFirewallRuleException() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return &t.ConnectionOriginInternetFirewallRuleException
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions) GetCountry() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions) GetDestination() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions) GetDevice() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions) GetService() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions) GetSource() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule struct {
	Action           cato_models.InternetFirewallActionEnum                                                      "json:\"action\" graphql:\"action\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                            "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                      "json:\"description\" graphql:\"description\""
	Destination      PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                               "json:\"deviceOS\" graphql:\"deviceOS\""
	Enabled          bool                                                                                        "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                      "json:\"id\" graphql:\"id\""
	Index            int64                                                                                       "json:\"index\" graphql:\"index\""
	Name             string                                                                                      "json:\"name\" graphql:\"name\""
	Schedule         PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetAction() *cato_models.InternetFirewallActionEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Action
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetCountry() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Country {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetDestination() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Destination {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetDevice() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Device {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetExceptions() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Exceptions {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Index
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetSchedule() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Schedule {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetSection() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Section {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Section
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetService() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Service {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetSource() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Source {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Source
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule) GetTracking() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule_Tracking {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Tracking
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule struct {
	Audit      PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                      "json:\"properties\" graphql:\"properties\""
	Rule       PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule) GetAudit() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Audit {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule) GetRule() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule_Rule {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule{}
	}
	return &t.Rule
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule struct {
	Errors []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Errors "json:\"errors\" graphql:\"errors\""
	Rule   *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule     "json:\"rule,omitempty\" graphql:\"rule\""
	Status cato_models.PolicyMutationStatus                                              "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule) GetErrors() []*PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Errors {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule) GetRule() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule_Rule {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule{}
	}
	return t.Rule
}
func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule{}
	}
	return &t.Status
}

type PolicyInternetFirewallUpdateRule_Policy_InternetFirewall struct {
	UpdateRule PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule "json:\"updateRule\" graphql:\"updateRule\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall) GetUpdateRule() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall_UpdateRule {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy_InternetFirewall{}
	}
	return &t.UpdateRule
}

type PolicyInternetFirewallUpdateRule_Policy struct {
	InternetFirewall *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallUpdateRule_Policy) GetInternetFirewall() *PolicyInternetFirewallUpdateRule_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule_Policy{}
	}
	return t.InternetFirewall
}

type PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section struct {
	Audit      PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                 "json:\"properties\" graphql:\"properties\""
	Section    PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section) GetAudit() *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Audit {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section) GetSection() *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section_Section {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section{}
	}
	return &t.Section
}

type PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection struct {
	Errors  []*PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Errors "json:\"errors\" graphql:\"errors\""
	Section *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section  "json:\"section,omitempty\" graphql:\"section\""
	Status  cato_models.PolicyMutationStatus                                                    "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection) GetErrors() []*PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Errors {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection) GetSection() *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection_Section {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection{}
	}
	return t.Section
}
func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection{}
	}
	return &t.Status
}

type PolicyInternetFirewallUpdateSection_Policy_InternetFirewall struct {
	UpdateSection PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection "json:\"updateSection\" graphql:\"updateSection\""
}

func (t *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall) GetUpdateSection() *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall_UpdateSection {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy_InternetFirewall{}
	}
	return &t.UpdateSection
}

type PolicyInternetFirewallUpdateSection_Policy struct {
	InternetFirewall *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallUpdateSection_Policy) GetInternetFirewall() *PolicyInternetFirewallUpdateSection_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection_Policy{}
	}
	return t.InternetFirewall
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                              "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                              "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetFloatingSubnet() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetGlobalIPRange() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetGroup() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetHost() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetIPRange() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetNetworkInterface() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetSite() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetSystemGroup() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetUser() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetUsersGroup() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination struct {
	AppCategory            []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                        "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                        "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                        "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                                 "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                        "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetAppCategory() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetApplication() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetCountry() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetCustomApp() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetCustomCategory() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetGlobalIPRange() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetIPRange() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom struct {
	Port                   []scalars.Port                                                                                                                   "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                           "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom) GetPortRangeCustomService() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service struct {
	Custom   []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service) GetCustom() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service) GetStandard() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                                          "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                                   "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert) GetMailingList() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert) GetWebhook() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking struct {
	Alert PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking) GetAlert() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking) GetEvent() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.From
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.To
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return t.Days
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.To
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule struct {
	ActiveOn        cato_models.PolicyActiveOnEnum                                                                                      "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurring *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring "json:\"customRecurring,omitempty\" graphql:\"customRecurring\""
	CustomTimeframe *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe "json:\"customTimeframe,omitempty\" graphql:\"customTimeframe\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule) GetCustomRecurring() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomRecurring
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule) GetCustomTimeframe() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomTimeframe
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                         "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                         "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetGroup() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetHost() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetIPRange() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetSite() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetSystemGroup() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetUser() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetUsersGroup() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination struct {
	AppCategory            []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                   "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                   "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                   "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                                            "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                   "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetAppCategory() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetApplication() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetCountry() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetCustomApp() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetCustomCategory() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetIPRange() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom struct {
	Port      []scalars.Port                                                                                                                 "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                                                         "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom) GetPortRange() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service struct {
	Custom   []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service) GetCustom() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service) GetStandard() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions struct {
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                 "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                    "json:\"deviceOS\" graphql:\"deviceOS\""
	Name             string                                                                                                           "json:\"name\" graphql:\"name\""
	Service          PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetCountry() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetDestination() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetDevice() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetService() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetSource() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule struct {
	Action           cato_models.InternetFirewallActionEnum                                                                  "json:\"action\" graphql:\"action\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                        "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                                  "json:\"description\" graphql:\"description\""
	Destination      PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                           "json:\"deviceOS\" graphql:\"deviceOS\""
	Enabled          bool                                                                                                    "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                                  "json:\"id\" graphql:\"id\""
	Index            int64                                                                                                   "json:\"index\" graphql:\"index\""
	Name             string                                                                                                  "json:\"name\" graphql:\"name\""
	Schedule         PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetAction() *cato_models.InternetFirewallActionEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Action
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetCountry() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Country {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetDestination() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Destination {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetDevice() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Device {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetExceptions() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Index
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetSchedule() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetSection() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Section {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Section
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetService() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Service {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetSource() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Source {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Source
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule) GetTracking() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Tracking
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules struct {
	Audit      PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                  "json:\"properties\" graphql:\"properties\""
	Rule       PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules) GetAudit() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Audit {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules) GetRule() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules_Rule {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules{}
	}
	return &t.Rule
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections struct {
	Audit      PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                       "json:\"properties\" graphql:\"properties\""
	Section    PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections) GetAudit() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Audit {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections) GetSection() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections_Section {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections{}
	}
	return &t.Section
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_AuditInternetFirewallPolicy struct {
	PublishedBy   string "json:\"publishedBy\" graphql:\"publishedBy\""
	PublishedTime string "json:\"publishedTime\" graphql:\"publishedTime\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_AuditInternetFirewallPolicy) GetPublishedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_AuditInternetFirewallPolicy{}
	}
	return t.PublishedBy
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_AuditInternetFirewallPolicy) GetPublishedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_AuditInternetFirewallPolicy{}
	}
	return t.PublishedTime
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy) GetChanges() int64 {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Changes
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy) GetCreatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.CreatedTime
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy struct {
	AuditInternetFirewallPolicy    *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_AuditInternetFirewallPolicy    "json:\"auditInternetFirewallPolicy,omitempty\" graphql:\"auditInternetFirewallPolicy\""
	Enabled                        bool                                                                                                           "json:\"enabled\" graphql:\"enabled\""
	RevisionInternetFirewallPolicy *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy "json:\"revisionInternetFirewallPolicy,omitempty\" graphql:\"revisionInternetFirewallPolicy\""
	Rules                          []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules                        "json:\"rules\" graphql:\"rules\""
	Sections                       []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections                     "json:\"sections\" graphql:\"sections\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy) GetAuditInternetFirewallPolicy() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_AuditInternetFirewallPolicy {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy{}
	}
	return t.AuditInternetFirewallPolicy
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy) GetRevisionInternetFirewallPolicy() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_RevisionInternetFirewallPolicy {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy{}
	}
	return t.RevisionInternetFirewallPolicy
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy) GetRules() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Rules {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy{}
	}
	return t.Rules
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy) GetSections() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy_Sections {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy{}
	}
	return t.Sections
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy struct {
	Errors []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Errors "json:\"errors\" graphql:\"errors\""
	Policy *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy   "json:\"policy,omitempty\" graphql:\"policy\""
	Status cato_models.PolicyMutationStatus                                                  "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy) GetErrors() []*PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Errors {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy) GetPolicy() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy_Policy {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy{}
	}
	return t.Policy
}
func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy{}
	}
	return &t.Status
}

type PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall struct {
	UpdatePolicy PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy "json:\"updatePolicy\" graphql:\"updatePolicy\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall) GetUpdatePolicy() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall_UpdatePolicy {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall{}
	}
	return &t.UpdatePolicy
}

type PolicyInternetFirewallUpdatePolicy_Policy struct {
	InternetFirewall *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallUpdatePolicy_Policy) GetInternetFirewall() *PolicyInternetFirewallUpdatePolicy_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy_Policy{}
	}
	return t.InternetFirewall
}

type Policy_Policy_InternetFirewall_Policy_Rules_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Audit{}
	}
	return t.UpdatedBy
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Audit{}
	}
	return t.UpdatedTime
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Section) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Section{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Section) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Section{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Host{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Host{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Site{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Site{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.To
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_User) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_User{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_User) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_User{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Group{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Group{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source struct {
	FloatingSubnet    []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                     "json:\"ip\" graphql:\"ip\""
	IPRange           []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                     "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetFloatingSubnet() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetGlobalIPRange() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetGroup() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Group {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.Group
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetHost() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Host {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.Host
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetIP() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.IP
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetIPRange() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_IPRange {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.IPRange
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetNetworkInterface() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_NetworkInterface {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetSite() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_Site {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.Site
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetSiteNetworkSubnet() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.Subnet
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetSystemGroup() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_SystemGroup {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetUser() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_User {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.User
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source) GetUsersGroup() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source_UsersGroup {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source{}
	}
	return t.UsersGroup
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Country) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Country{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Country) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Country{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Device) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Device{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Device) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Device{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Application) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Application{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Application) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Application{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomApp{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomApp{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_AppCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_AppCategory{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomCategory{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Country) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Country{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Country) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Country{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.To
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination struct {
	AppCategory            []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                               "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                               "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                               "json:\"ip\" graphql:\"ip\""
	IPRange                []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                        "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                               "json:\"subnet\" graphql:\"subnet\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetAppCategory() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_AppCategory {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.AppCategory
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetApplication() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Application {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.Application
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetCountry() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_Country {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.Country
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetCustomApp() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomApp {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.CustomApp
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetCustomCategory() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_CustomCategory {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.CustomCategory
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetDomain() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.Domain
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetFqdn() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.Fqdn
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetGlobalIPRange() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.IP
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetIPRange() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_IPRange {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.IPRange
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.RemoteAsn
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetSanctionedAppsCategory() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.Subnet
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Standard{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom_PortRange{}
	}
	return &t.To
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom struct {
	Port      []scalars.Port                                                             "json:\"port,omitempty\" graphql:\"port\""
	PortRange *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                     "json:\"protocol\" graphql:\"protocol\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom) GetPortRange() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom_PortRange {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom{}
	}
	return t.PortRange
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service struct {
	Custom   []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service) GetCustom() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Custom {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service{}
	}
	return t.Custom
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service) GetStandard() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service_Standard {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service{}
	}
	return t.Standard
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                 "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                          "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert) GetMailingList() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert) GetSubscriptionGroup() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert) GetWebhook() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking struct {
	Alert Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking) GetAlert() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Alert {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking) GetEvent() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking_Event {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking{}
	}
	return &t.Event
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.From
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule) GetTo() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.To
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return t.Days
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule) GetFrom() *scalars.Time {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.From
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule) GetTo() *scalars.Time {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.To
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule struct {
	ActiveOn                      cato_models.PolicyActiveOnEnum                                                           "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurringPolicySchedule *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule "json:\"customRecurringPolicySchedule,omitempty\" graphql:\"customRecurringPolicySchedule\""
	CustomTimeframePolicySchedule *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule "json:\"customTimeframePolicySchedule,omitempty\" graphql:\"customTimeframePolicySchedule\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule) GetCustomRecurringPolicySchedule() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomRecurringPolicySchedule
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule) GetCustomTimeframePolicySchedule() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomTimeframePolicySchedule
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source struct {
	FloatingSubnet    []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                "json:\"ip\" graphql:\"ip\""
	IPRange           []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetFloatingSubnet() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetGlobalIPRange() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetGroup() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetHost() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetIPRange() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetNetworkInterface() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetSite() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetSystemGroup() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetUser() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_User {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source) GetUsersGroup() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Application) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Application{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Application) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Application{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Country) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Country{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Country) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Country{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination struct {
	AppCategory            []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                          "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                          "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                          "json:\"ip\" graphql:\"ip\""
	IPRange                []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                   "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                          "json:\"subnet\" graphql:\"subnet\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetAppCategory() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_AppCategory {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.AppCategory
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetApplication() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Application {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Application
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetCountry() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_Country {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Country
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetCustomApp() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomApp {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.CustomApp
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetCustomCategory() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_CustomCategory {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.CustomCategory
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetDomain() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Domain
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetFqdn() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Fqdn
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetGlobalIPRange() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetIPRange() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.RemoteAsn
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetSanctionedAppsCategory() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom struct {
	Port                   []scalars.Port                                                                                     "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                             "json:\"protocol\" graphql:\"protocol\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom) GetPortRangeCustomService() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service struct {
	Custom   []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service) GetCustom() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service) GetStandard() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions struct {
	ConnectionOrigin cato_models.ConnectionOriginEnum                                        "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                           "json:\"deviceOS\" graphql:\"deviceOS\""
	Name             string                                                                  "json:\"name\" graphql:\"name\""
	Service          Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions) GetCountry() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Country {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return t.Country
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions) GetDestination() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Destination {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions) GetDevice() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Device {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return t.Device
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return t.Name
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions) GetService() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Service {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions) GetSource() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions_Source {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Source
}

type Policy_Policy_InternetFirewall_Policy_Rules_Rule struct {
	Action           cato_models.InternetFirewallActionEnum                         "json:\"action\" graphql:\"action\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                               "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                         "json:\"description\" graphql:\"description\""
	Destination      Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                  "json:\"deviceOS\" graphql:\"deviceOS\""
	Enabled          bool                                                           "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                         "json:\"id\" graphql:\"id\""
	Index            int64                                                          "json:\"index\" graphql:\"index\""
	Name             string                                                         "json:\"name\" graphql:\"name\""
	Schedule         Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          Policy_Policy_InternetFirewall_Policy_Rules_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetAction() *cato_models.InternetFirewallActionEnum {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return &t.Action
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetCountry() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Country {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return t.Country
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetDescription() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return t.Description
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetDestination() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Destination {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return &t.Destination
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetDevice() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Device {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return t.Device
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return t.DeviceOs
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetEnabled() bool {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return t.Enabled
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetExceptions() []*Policy_Policy_InternetFirewall_Policy_Rules_Rule_Exceptions {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return t.Exceptions
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetIndex() int64 {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return t.Index
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return t.Name
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetSchedule() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Schedule {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return &t.Schedule
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetSection() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Section {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return &t.Section
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetService() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Service {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return &t.Service
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetSource() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Source {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return &t.Source
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules_Rule) GetTracking() *Policy_Policy_InternetFirewall_Policy_Rules_Rule_Tracking {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules_Rule{}
	}
	return &t.Tracking
}

type Policy_Policy_InternetFirewall_Policy_Rules struct {
	Audit      Policy_Policy_InternetFirewall_Policy_Rules_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum         "json:\"properties\" graphql:\"properties\""
	Rule       Policy_Policy_InternetFirewall_Policy_Rules_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Rules) GetAudit() *Policy_Policy_InternetFirewall_Policy_Rules_Audit {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules{}
	}
	return &t.Audit
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules{}
	}
	return t.Properties
}
func (t *Policy_Policy_InternetFirewall_Policy_Rules) GetRule() *Policy_Policy_InternetFirewall_Policy_Rules_Rule {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Rules{}
	}
	return &t.Rule
}

type Policy_Policy_InternetFirewall_Policy_Sections_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Sections_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Sections_Audit{}
	}
	return t.UpdatedBy
}
func (t *Policy_Policy_InternetFirewall_Policy_Sections_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Sections_Audit{}
	}
	return t.UpdatedTime
}

type Policy_Policy_InternetFirewall_Policy_Sections_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Sections_Section) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Sections_Section{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Sections_Section) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Sections_Section{}
	}
	return t.Name
}

type Policy_Policy_InternetFirewall_Policy_Sections struct {
	Audit      Policy_Policy_InternetFirewall_Policy_Sections_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum              "json:\"properties\" graphql:\"properties\""
	Section    Policy_Policy_InternetFirewall_Policy_Sections_Section "json:\"section\" graphql:\"section\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Sections) GetAudit() *Policy_Policy_InternetFirewall_Policy_Sections_Audit {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Sections{}
	}
	return &t.Audit
}
func (t *Policy_Policy_InternetFirewall_Policy_Sections) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Sections{}
	}
	return t.Properties
}
func (t *Policy_Policy_InternetFirewall_Policy_Sections) GetSection() *Policy_Policy_InternetFirewall_Policy_Sections_Section {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Sections{}
	}
	return &t.Section
}

type Policy_Policy_InternetFirewall_Policy_Audit struct {
	PublishedBy   string "json:\"publishedBy\" graphql:\"publishedBy\""
	PublishedTime string "json:\"publishedTime\" graphql:\"publishedTime\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Audit) GetPublishedBy() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Audit{}
	}
	return t.PublishedBy
}
func (t *Policy_Policy_InternetFirewall_Policy_Audit) GetPublishedTime() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Audit{}
	}
	return t.PublishedTime
}

type Policy_Policy_InternetFirewall_Policy_Revision struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *Policy_Policy_InternetFirewall_Policy_Revision) GetChanges() int64 {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Revision{}
	}
	return t.Changes
}
func (t *Policy_Policy_InternetFirewall_Policy_Revision) GetCreatedTime() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Revision{}
	}
	return t.CreatedTime
}
func (t *Policy_Policy_InternetFirewall_Policy_Revision) GetDescription() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Revision{}
	}
	return t.Description
}
func (t *Policy_Policy_InternetFirewall_Policy_Revision) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Revision{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_Policy_Revision) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Revision{}
	}
	return t.Name
}
func (t *Policy_Policy_InternetFirewall_Policy_Revision) GetUpdatedTime() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy_Revision{}
	}
	return t.UpdatedTime
}

type Policy_Policy_InternetFirewall_Policy struct {
	Audit    *Policy_Policy_InternetFirewall_Policy_Audit      "json:\"audit,omitempty\" graphql:\"audit\""
	Enabled  bool                                              "json:\"enabled\" graphql:\"enabled\""
	Revision *Policy_Policy_InternetFirewall_Policy_Revision   "json:\"revision,omitempty\" graphql:\"revision\""
	Rules    []*Policy_Policy_InternetFirewall_Policy_Rules    "json:\"rules\" graphql:\"rules\""
	Sections []*Policy_Policy_InternetFirewall_Policy_Sections "json:\"sections\" graphql:\"sections\""
}

func (t *Policy_Policy_InternetFirewall_Policy) GetAudit() *Policy_Policy_InternetFirewall_Policy_Audit {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy{}
	}
	return t.Audit
}
func (t *Policy_Policy_InternetFirewall_Policy) GetEnabled() bool {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy{}
	}
	return t.Enabled
}
func (t *Policy_Policy_InternetFirewall_Policy) GetRevision() *Policy_Policy_InternetFirewall_Policy_Revision {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy{}
	}
	return t.Revision
}
func (t *Policy_Policy_InternetFirewall_Policy) GetRules() []*Policy_Policy_InternetFirewall_Policy_Rules {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy{}
	}
	return t.Rules
}
func (t *Policy_Policy_InternetFirewall_Policy) GetSections() []*Policy_Policy_InternetFirewall_Policy_Sections {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_Policy{}
	}
	return t.Sections
}

type Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision) GetChanges() int64 {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision{}
	}
	return t.Changes
}
func (t *Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision) GetCreatedTime() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision{}
	}
	return t.CreatedTime
}
func (t *Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision) GetDescription() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision{}
	}
	return t.Description
}
func (t *Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision) GetID() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision{}
	}
	return t.ID
}
func (t *Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision) GetName() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision{}
	}
	return t.Name
}
func (t *Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision) GetUpdatedTime() string {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision{}
	}
	return t.UpdatedTime
}

type Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries struct {
	Revision []*Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision "json:\"revision\" graphql:\"revision\""
}

func (t *Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries) GetRevision() []*Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries_Revision {
	if t == nil {
		t = &Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries{}
	}
	return t.Revision
}

type Policy_Policy_InternetFirewall struct {
	Policy                                 Policy_Policy_InternetFirewall_Policy                                  "json:\"policy\" graphql:\"policy\""
	RevisionsInternetFirewallPolicyQueries *Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries "json:\"revisionsInternetFirewallPolicyQueries,omitempty\" graphql:\"revisionsInternetFirewallPolicyQueries\""
}

func (t *Policy_Policy_InternetFirewall) GetPolicy() *Policy_Policy_InternetFirewall_Policy {
	if t == nil {
		t = &Policy_Policy_InternetFirewall{}
	}
	return &t.Policy
}
func (t *Policy_Policy_InternetFirewall) GetRevisionsInternetFirewallPolicyQueries() *Policy_Policy_InternetFirewall_RevisionsInternetFirewallPolicyQueries {
	if t == nil {
		t = &Policy_Policy_InternetFirewall{}
	}
	return t.RevisionsInternetFirewallPolicyQueries
}

type Policy_Policy_WanFirewall_Policy_Rules_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Audit{}
	}
	return t.UpdatedBy
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Audit{}
	}
	return t.UpdatedTime
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Section) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Section{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Section) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Section{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Host{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Host{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Site{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Site{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.To
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_User) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_User{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_User) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_User{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Group{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Group{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Source struct {
	FloatingSubnet    []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                "json:\"ip\" graphql:\"ip\""
	IPRange           []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetFloatingSubnet() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetGlobalIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Group {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.Group
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetHost() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Host {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.Host
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetIP() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.IP
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_IPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.IPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetNetworkInterface() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_NetworkInterface {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetSite() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_Site {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.Site
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetSiteNetworkSubnet() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.Subnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetSystemGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_SystemGroup {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetUser() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_User {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.User
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source) GetUsersGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Source_UsersGroup {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Source{}
	}
	return t.UsersGroup
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Country) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Country{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Country) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Country{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Device) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Device{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Device) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Device{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Host) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Host{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Host) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Host{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Site) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Site{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Site) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Site{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.To
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_NetworkInterface{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_FloatingSubnet{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_User) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_User{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_User) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_User{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_UsersGroup{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Group) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Group{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Group) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Group{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SystemGroup{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination struct {
	FloatingSubnet    []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                     "json:\"ip\" graphql:\"ip\""
	IPRange           []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                     "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetFloatingSubnet() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_FloatingSubnet {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.FloatingSubnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetGlobalIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Group {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.Group
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetHost() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Host {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.Host
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.IP
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_IPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.IPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetNetworkInterface() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_NetworkInterface {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.NetworkInterface
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetSite() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_Site {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.Site
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetSiteNetworkSubnet() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.Subnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetSystemGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_SystemGroup {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.SystemGroup
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetUser() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_User {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.User
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination) GetUsersGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination_UsersGroup {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination{}
	}
	return t.UsersGroup
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_Application) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_Application{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_Application) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_Application{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_AppCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_AppCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_AppCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_AppCategory{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomApp) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomApp{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomApp) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomApp{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomCategory{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_IPRange{}
	}
	return t.From
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_IPRange) GetTo() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_IPRange{}
	}
	return t.To
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_GlobalIPRange{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Application struct {
	AppCategory            []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                          "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                          "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                          "json:\"ip\" graphql:\"ip\""
	IPRange                []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                          "json:\"subnet\" graphql:\"subnet\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application) GetAppCategory() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_AppCategory {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application{}
	}
	return t.AppCategory
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application) GetApplication() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_Application {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application{}
	}
	return t.Application
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application) GetCustomApp() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomApp {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application{}
	}
	return t.CustomApp
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application) GetCustomCategory() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_CustomCategory {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application{}
	}
	return t.CustomCategory
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application) GetDomain() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application{}
	}
	return t.Domain
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application) GetFqdn() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application{}
	}
	return t.Fqdn
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application) GetGlobalIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_GlobalIPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application{}
	}
	return t.GlobalIPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application) GetIP() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application{}
	}
	return t.IP
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application) GetIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_IPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application{}
	}
	return t.IPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application) GetSanctionedAppsCategory() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Application_SanctionedAppsCategory {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application) GetSubnet() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Application{}
	}
	return t.Subnet
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Standard{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom_PortRange{}
	}
	return &t.To
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom struct {
	Port      []scalars.Port                                                        "json:\"port,omitempty\" graphql:\"port\""
	PortRange *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                "json:\"protocol\" graphql:\"protocol\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom) GetPortRange() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom_PortRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom{}
	}
	return t.PortRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Service struct {
	Custom   []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service) GetCustom() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Custom {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Service{}
	}
	return t.Custom
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service) GetStandard() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Service_Standard {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Service{}
	}
	return t.Standard
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert struct {
	Enabled           bool                                                                            "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                     "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert) GetMailingList() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert) GetSubscriptionGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert) GetWebhook() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking struct {
	Alert Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking) GetAlert() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Alert {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking) GetEvent() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking_Event {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking{}
	}
	return &t.Event
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.From
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule) GetTo() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.To
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return t.Days
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule) GetFrom() *scalars.Time {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.From
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule) GetTo() *scalars.Time {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.To
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule struct {
	ActiveOn                      cato_models.PolicyActiveOnEnum                                                      "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurringPolicySchedule *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule "json:\"customRecurringPolicySchedule,omitempty\" graphql:\"customRecurringPolicySchedule\""
	CustomTimeframePolicySchedule *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule "json:\"customTimeframePolicySchedule,omitempty\" graphql:\"customTimeframePolicySchedule\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule) GetCustomRecurringPolicySchedule() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomRecurringPolicySchedule {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomRecurringPolicySchedule
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule) GetCustomTimeframePolicySchedule() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule_CustomTimeframePolicySchedule {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomTimeframePolicySchedule
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source struct {
	FloatingSubnet    []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                           "json:\"ip\" graphql:\"ip\""
	IPRange           []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                           "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetFloatingSubnet() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetGlobalIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetHost() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetNetworkInterface() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetSite() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetSystemGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetUser() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_User {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source) GetUsersGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Host) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Host{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Host) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Host{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Site) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Site{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Site) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Site{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_User) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_User{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_User) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_User{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Group) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Group{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Group) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Group{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination struct {
	FloatingSubnet    []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                "json:\"ip\" graphql:\"ip\""
	IPRange           []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetFloatingSubnet() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.FloatingSubnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetGlobalIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Group {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Group
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetHost() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Host {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Host
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetNetworkInterface() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.NetworkInterface
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetSite() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_Site {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Site
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetSiteNetworkSubnet() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetSystemGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_SystemGroup {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SystemGroup
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetUser() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_User {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.User
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination) GetUsersGroup() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination_UsersGroup {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.UsersGroup
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_Application) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_Application{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_Application) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_Application{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_AppCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_AppCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_AppCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_AppCategory{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomApp) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomApp{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomApp) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomApp{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_IPRange{}
	}
	return t.From
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_IPRange) GetTo() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_IPRange{}
	}
	return t.To
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application struct {
	AppCategory            []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                     "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                     "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                     "json:\"ip\" graphql:\"ip\""
	IPRange                []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                     "json:\"subnet\" graphql:\"subnet\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application) GetAppCategory() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_AppCategory {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.AppCategory
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application) GetApplication() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_Application {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Application
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application) GetCustomApp() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomApp {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.CustomApp
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application) GetCustomCategory() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_CustomCategory {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.CustomCategory
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application) GetDomain() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Domain
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application) GetFqdn() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Fqdn
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application) GetGlobalIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.GlobalIPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application) GetIP() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.IP
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application) GetIPRange() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_IPRange {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.IPRange
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application) GetSanctionedAppsCategory() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application) GetSubnet() []string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Subnet
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom struct {
	Port                   []scalars.Port                                                                                "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                        "json:\"protocol\" graphql:\"protocol\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom) GetPortRangeCustomService() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service struct {
	Custom   []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service) GetCustom() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service) GetStandard() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions struct {
	Application      Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                   "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                      "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                               "json:\"direction\" graphql:\"direction\""
	Name             string                                                             "json:\"name\" graphql:\"name\""
	Service          Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions) GetApplication() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Application {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Application
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions) GetCountry() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Country {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return t.Country
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions) GetDestination() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Destination {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions) GetDevice() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Device {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return t.Device
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Direction
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return t.Name
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions) GetService() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Service {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions) GetSource() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions_Source {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Source
}

type Policy_Policy_WanFirewall_Policy_Rules_Rule struct {
	Action           cato_models.WanFirewallActionEnum                         "json:\"action\" graphql:\"action\""
	Application      Policy_Policy_WanFirewall_Policy_Rules_Rule_Application   "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                          "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                    "json:\"description\" graphql:\"description\""
	Destination      Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                             "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                      "json:\"direction\" graphql:\"direction\""
	Enabled          bool                                                      "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                    "json:\"id\" graphql:\"id\""
	Index            int64                                                     "json:\"index\" graphql:\"index\""
	Name             string                                                    "json:\"name\" graphql:\"name\""
	Schedule         Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          Policy_Policy_WanFirewall_Policy_Rules_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          Policy_Policy_WanFirewall_Policy_Rules_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           Policy_Policy_WanFirewall_Policy_Rules_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetAction() *cato_models.WanFirewallActionEnum {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return &t.Action
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetApplication() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Application {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return &t.Application
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetCountry() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Country {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return t.Country
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetDescription() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return t.Description
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetDestination() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Destination {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return &t.Destination
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetDevice() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Device {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return t.Device
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return t.DeviceOs
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return &t.Direction
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetEnabled() bool {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return t.Enabled
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetExceptions() []*Policy_Policy_WanFirewall_Policy_Rules_Rule_Exceptions {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return t.Exceptions
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetIndex() int64 {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return t.Index
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return t.Name
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetSchedule() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Schedule {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return &t.Schedule
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetSection() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Section {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return &t.Section
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetService() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Service {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return &t.Service
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetSource() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Source {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return &t.Source
}
func (t *Policy_Policy_WanFirewall_Policy_Rules_Rule) GetTracking() *Policy_Policy_WanFirewall_Policy_Rules_Rule_Tracking {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules_Rule{}
	}
	return &t.Tracking
}

type Policy_Policy_WanFirewall_Policy_Rules struct {
	Audit      Policy_Policy_WanFirewall_Policy_Rules_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum    "json:\"properties\" graphql:\"properties\""
	Rule       Policy_Policy_WanFirewall_Policy_Rules_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *Policy_Policy_WanFirewall_Policy_Rules) GetAudit() *Policy_Policy_WanFirewall_Policy_Rules_Audit {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules{}
	}
	return &t.Audit
}
func (t *Policy_Policy_WanFirewall_Policy_Rules) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules{}
	}
	return t.Properties
}
func (t *Policy_Policy_WanFirewall_Policy_Rules) GetRule() *Policy_Policy_WanFirewall_Policy_Rules_Rule {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Rules{}
	}
	return &t.Rule
}

type Policy_Policy_WanFirewall_Policy_Sections_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *Policy_Policy_WanFirewall_Policy_Sections_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Sections_Audit{}
	}
	return t.UpdatedBy
}
func (t *Policy_Policy_WanFirewall_Policy_Sections_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Sections_Audit{}
	}
	return t.UpdatedTime
}

type Policy_Policy_WanFirewall_Policy_Sections_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Policy_Policy_WanFirewall_Policy_Sections_Section) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Sections_Section{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Sections_Section) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Sections_Section{}
	}
	return t.Name
}

type Policy_Policy_WanFirewall_Policy_Sections struct {
	Audit      Policy_Policy_WanFirewall_Policy_Sections_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum         "json:\"properties\" graphql:\"properties\""
	Section    Policy_Policy_WanFirewall_Policy_Sections_Section "json:\"section\" graphql:\"section\""
}

func (t *Policy_Policy_WanFirewall_Policy_Sections) GetAudit() *Policy_Policy_WanFirewall_Policy_Sections_Audit {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Sections{}
	}
	return &t.Audit
}
func (t *Policy_Policy_WanFirewall_Policy_Sections) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Sections{}
	}
	return t.Properties
}
func (t *Policy_Policy_WanFirewall_Policy_Sections) GetSection() *Policy_Policy_WanFirewall_Policy_Sections_Section {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Sections{}
	}
	return &t.Section
}

type Policy_Policy_WanFirewall_Policy_Audit struct {
	PublishedBy   string "json:\"publishedBy\" graphql:\"publishedBy\""
	PublishedTime string "json:\"publishedTime\" graphql:\"publishedTime\""
}

func (t *Policy_Policy_WanFirewall_Policy_Audit) GetPublishedBy() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Audit{}
	}
	return t.PublishedBy
}
func (t *Policy_Policy_WanFirewall_Policy_Audit) GetPublishedTime() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Audit{}
	}
	return t.PublishedTime
}

type Policy_Policy_WanFirewall_Policy_Revision struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *Policy_Policy_WanFirewall_Policy_Revision) GetChanges() int64 {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Revision{}
	}
	return t.Changes
}
func (t *Policy_Policy_WanFirewall_Policy_Revision) GetCreatedTime() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Revision{}
	}
	return t.CreatedTime
}
func (t *Policy_Policy_WanFirewall_Policy_Revision) GetDescription() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Revision{}
	}
	return t.Description
}
func (t *Policy_Policy_WanFirewall_Policy_Revision) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Revision{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_Policy_Revision) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Revision{}
	}
	return t.Name
}
func (t *Policy_Policy_WanFirewall_Policy_Revision) GetUpdatedTime() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy_Revision{}
	}
	return t.UpdatedTime
}

type Policy_Policy_WanFirewall_Policy struct {
	Audit    *Policy_Policy_WanFirewall_Policy_Audit      "json:\"audit,omitempty\" graphql:\"audit\""
	Enabled  bool                                         "json:\"enabled\" graphql:\"enabled\""
	Revision *Policy_Policy_WanFirewall_Policy_Revision   "json:\"revision,omitempty\" graphql:\"revision\""
	Rules    []*Policy_Policy_WanFirewall_Policy_Rules    "json:\"rules\" graphql:\"rules\""
	Sections []*Policy_Policy_WanFirewall_Policy_Sections "json:\"sections\" graphql:\"sections\""
}

func (t *Policy_Policy_WanFirewall_Policy) GetAudit() *Policy_Policy_WanFirewall_Policy_Audit {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy{}
	}
	return t.Audit
}
func (t *Policy_Policy_WanFirewall_Policy) GetEnabled() bool {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy{}
	}
	return t.Enabled
}
func (t *Policy_Policy_WanFirewall_Policy) GetRevision() *Policy_Policy_WanFirewall_Policy_Revision {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy{}
	}
	return t.Revision
}
func (t *Policy_Policy_WanFirewall_Policy) GetRules() []*Policy_Policy_WanFirewall_Policy_Rules {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy{}
	}
	return t.Rules
}
func (t *Policy_Policy_WanFirewall_Policy) GetSections() []*Policy_Policy_WanFirewall_Policy_Sections {
	if t == nil {
		t = &Policy_Policy_WanFirewall_Policy{}
	}
	return t.Sections
}

type Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision) GetChanges() int64 {
	if t == nil {
		t = &Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision{}
	}
	return t.Changes
}
func (t *Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision) GetCreatedTime() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision{}
	}
	return t.CreatedTime
}
func (t *Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision) GetDescription() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision{}
	}
	return t.Description
}
func (t *Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision) GetID() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision{}
	}
	return t.ID
}
func (t *Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision) GetName() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision{}
	}
	return t.Name
}
func (t *Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision) GetUpdatedTime() string {
	if t == nil {
		t = &Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision{}
	}
	return t.UpdatedTime
}

type Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries struct {
	Revision []*Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision "json:\"revision\" graphql:\"revision\""
}

func (t *Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries) GetRevision() []*Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries_Revision {
	if t == nil {
		t = &Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries{}
	}
	return t.Revision
}

type Policy_Policy_WanFirewall struct {
	Policy                            Policy_Policy_WanFirewall_Policy                             "json:\"policy\" graphql:\"policy\""
	RevisionsWanFirewallPolicyQueries *Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries "json:\"revisionsWanFirewallPolicyQueries,omitempty\" graphql:\"revisionsWanFirewallPolicyQueries\""
}

func (t *Policy_Policy_WanFirewall) GetPolicy() *Policy_Policy_WanFirewall_Policy {
	if t == nil {
		t = &Policy_Policy_WanFirewall{}
	}
	return &t.Policy
}
func (t *Policy_Policy_WanFirewall) GetRevisionsWanFirewallPolicyQueries() *Policy_Policy_WanFirewall_RevisionsWanFirewallPolicyQueries {
	if t == nil {
		t = &Policy_Policy_WanFirewall{}
	}
	return t.RevisionsWanFirewallPolicyQueries
}

type Policy_Policy struct {
	InternetFirewall *Policy_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
	WanFirewall      *Policy_Policy_WanFirewall      "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *Policy_Policy) GetInternetFirewall() *Policy_Policy_InternetFirewall {
	if t == nil {
		t = &Policy_Policy{}
	}
	return t.InternetFirewall
}
func (t *Policy_Policy) GetWanFirewall() *Policy_Policy_WanFirewall {
	if t == nil {
		t = &Policy_Policy{}
	}
	return t.WanFirewall
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Audit{}
	}
	return t.UpdatedTime
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Section{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                            "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                            "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetFloatingSubnet() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetGlobalIPRange() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetGroup() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetHost() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetIPRange() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetNetworkInterface() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetSite() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetSystemGroup() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetUser() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source) GetUsersGroup() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination struct {
	AppCategory            []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                      "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                      "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                      "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                               "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                      "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetAppCategory() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetApplication() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetCountry() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetCustomApp() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetCustomCategory() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetGlobalIPRange() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetIPRange() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom struct {
	Port      []scalars.Port                                                                                    "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                            "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom) GetPortRange() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service struct {
	Custom   []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service) GetCustom() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service) GetStandard() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                        "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                 "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert) GetMailingList() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert) GetWebhook() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking struct {
	Alert PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking) GetAlert() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking) GetEvent() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.From
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.To
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return t.Days
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.To
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule struct {
	ActiveOn                      cato_models.PolicyActiveOnEnum                                                                                  "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurringPolicySchedule *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule "json:\"customRecurringPolicySchedule,omitempty\" graphql:\"customRecurringPolicySchedule\""
	CustomTimeframePolicySchedule *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule "json:\"customTimeframePolicySchedule,omitempty\" graphql:\"customTimeframePolicySchedule\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule) GetCustomRecurringPolicySchedule() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule{}
	}
	return t.CustomRecurringPolicySchedule
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule) GetCustomTimeframePolicySchedule() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule{}
	}
	return t.CustomTimeframePolicySchedule
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                       "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                       "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetGroup() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetHost() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetIPRange() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetSite() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetSystemGroup() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetUser() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source) GetUsersGroup() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Application) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Application{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Application) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Application{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomApp{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_AppCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Country) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Country{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Country) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Country{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination struct {
	AppCategory            []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Application            "json:\"application\" graphql:\"application\""
	Country                []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Country                "json:\"country\" graphql:\"country\""
	CustomApp              []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                 "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                 "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                 "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	RemoteAsn              []scalars.Asn16                                                                                                          "json:\"remoteAsn\" graphql:\"remoteAsn\""
	SanctionedAppsCategory []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                 "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetAppCategory() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_AppCategory {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.AppCategory
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetApplication() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Application {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Application
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetCountry() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_Country {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetCustomApp() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomApp {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.CustomApp
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetCustomCategory() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_CustomCategory {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.CustomCategory
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetDomain() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Domain
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetFqdn() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Fqdn
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetIPRange() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetRemoteAsn() []scalars.Asn16 {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.RemoteAsn
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetSanctionedAppsCategory() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom struct {
	Port                   []scalars.Port                                                                                                            "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                    "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom) GetPortRangeCustomService() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service struct {
	Custom   []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service) GetCustom() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service) GetStandard() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions struct {
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                               "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                  "json:\"deviceOS\" graphql:\"deviceOS\""
	Name             string                                                                                         "json:\"name\" graphql:\"name\""
	Service          PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions) GetCountry() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions) GetDestination() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions) GetDevice() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions) GetService() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions) GetSource() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule struct {
	Action           cato_models.InternetFirewallActionEnum                                                "json:\"action\" graphql:\"action\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                      "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                "json:\"description\" graphql:\"description\""
	Destination      PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                         "json:\"deviceOS\" graphql:\"deviceOS\""
	Enabled          bool                                                                                  "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                "json:\"id\" graphql:\"id\""
	Index            int64                                                                                 "json:\"index\" graphql:\"index\""
	Name             string                                                                                "json:\"name\" graphql:\"name\""
	Schedule         PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetAction() *cato_models.InternetFirewallActionEnum {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return &t.Action
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetCountry() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Country {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return t.Country
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return t.Description
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetDestination() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Destination {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return &t.Destination
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetDevice() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Device {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return t.Device
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return t.Enabled
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetExceptions() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Exceptions {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetID() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return t.ID
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return t.Index
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetName() string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return t.Name
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetSchedule() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Schedule {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetSection() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Section {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return &t.Section
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetService() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Service {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return &t.Service
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetSource() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Source {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return &t.Source
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule) GetTracking() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule_Tracking {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule{}
	}
	return &t.Tracking
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule struct {
	Audit      PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                "json:\"properties\" graphql:\"properties\""
	Rule       PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule) GetAudit() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Audit {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule{}
	}
	return &t.Audit
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule{}
	}
	return t.Properties
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule) GetRule() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule_Rule {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule{}
	}
	return &t.Rule
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Errors{}
	}
	return t.ErrorMessage
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule struct {
	Errors []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Errors "json:\"errors\" graphql:\"errors\""
	Rule   *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule     "json:\"rule,omitempty\" graphql:\"rule\""
	Status cato_models.PolicyMutationStatus                                        "json:\"status\" graphql:\"status\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule) GetErrors() []*PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Errors {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule{}
	}
	return t.Errors
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule) GetRule() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule_Rule {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule{}
	}
	return t.Rule
}
func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule{}
	}
	return &t.Status
}

type PolicyInternetFirewallAddRule_Policy_InternetFirewall struct {
	AddRule PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule "json:\"addRule\" graphql:\"addRule\""
}

func (t *PolicyInternetFirewallAddRule_Policy_InternetFirewall) GetAddRule() *PolicyInternetFirewallAddRule_Policy_InternetFirewall_AddRule {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy_InternetFirewall{}
	}
	return &t.AddRule
}

type PolicyInternetFirewallAddRule_Policy struct {
	InternetFirewall *PolicyInternetFirewallAddRule_Policy_InternetFirewall "json:\"internetFirewall,omitempty\" graphql:\"internetFirewall\""
}

func (t *PolicyInternetFirewallAddRule_Policy) GetInternetFirewall() *PolicyInternetFirewallAddRule_Policy_InternetFirewall {
	if t == nil {
		t = &PolicyInternetFirewallAddRule_Policy{}
	}
	return t.InternetFirewall
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Section{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source struct {
	FloatingSubnet    []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                  "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                  "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetFloatingSubnet() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetGlobalIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetHost() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetNetworkInterface() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetSite() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetSystemGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetUser() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_User {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source) GetUsersGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Country{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Device{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                       "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                       "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetFloatingSubnet() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetGlobalIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetHost() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetNetworkInterface() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetSite() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetSystemGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetUser() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination) GetUsersGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application struct {
	AppCategory            []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                            "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                            "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                            "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                            "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application) GetAppCategory() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application) GetApplication() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application) GetCustomApp() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application) GetCustomCategory() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application) GetGlobalIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application) GetIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom struct {
	Port      []scalars.Port                                                                          "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                  "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom) GetPortRange() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service struct {
	Custom   []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service) GetCustom() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service) GetStandard() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                              "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                       "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert) GetMailingList() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert) GetWebhook() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking struct {
	Alert PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking) GetAlert() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking) GetEvent() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.From
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.To
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return t.Days
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.From
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.To
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule struct {
	ActiveOn                      cato_models.PolicyActiveOnEnum                                                                        "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurringPolicySchedule *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule "json:\"customRecurringPolicySchedule,omitempty\" graphql:\"customRecurringPolicySchedule\""
	CustomTimeframePolicySchedule *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule "json:\"customTimeframePolicySchedule,omitempty\" graphql:\"customTimeframePolicySchedule\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule) GetCustomRecurringPolicySchedule() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule{}
	}
	return t.CustomRecurringPolicySchedule
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule) GetCustomTimeframePolicySchedule() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule{}
	}
	return t.CustomTimeframePolicySchedule
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                             "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                             "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetHost() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetSite() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetSystemGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetUser() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source) GetUsersGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                  "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                  "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetFloatingSubnet() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetHost() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetNetworkInterface() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetSite() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetSystemGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetUser() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination) GetUsersGroup() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application struct {
	AppCategory            []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                       "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                       "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                       "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                       "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application) GetAppCategory() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application) GetApplication() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application) GetCustomApp() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application) GetCustomCategory() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application) GetGlobalIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application) GetIPRange() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom struct {
	Port                   []scalars.Port                                                                                                  "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                          "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom) GetPortRangeCustomService() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service struct {
	Custom   []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service) GetCustom() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service) GetStandard() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions struct {
	Application      PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                     "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                        "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                                 "json:\"direction\" graphql:\"direction\""
	Name             string                                                                               "json:\"name\" graphql:\"name\""
	Service          PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions) GetApplication() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Application {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions) GetCountry() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions) GetDestination() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions) GetDevice() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions) GetService() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions) GetSource() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule struct {
	Action           cato_models.WanFirewallActionEnum                                           "json:\"action\" graphql:\"action\""
	Application      PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application   "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                            "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                      "json:\"description\" graphql:\"description\""
	Destination      PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                               "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                        "json:\"direction\" graphql:\"direction\""
	Enabled          bool                                                                        "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                      "json:\"id\" graphql:\"id\""
	Index            int64                                                                       "json:\"index\" graphql:\"index\""
	Name             string                                                                      "json:\"name\" graphql:\"name\""
	Schedule         PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetAction() *cato_models.WanFirewallActionEnum {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return &t.Action
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetApplication() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Application {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetCountry() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Country {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return t.Country
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return t.Description
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetDestination() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Destination {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetDevice() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Device {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return t.Device
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetExceptions() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Exceptions {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return t.Index
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return t.Name
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetSchedule() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Schedule {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetSection() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Section {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return &t.Section
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetService() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Service {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetSource() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Source {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return &t.Source
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule) GetTracking() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule_Tracking {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule{}
	}
	return &t.Tracking
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule struct {
	Audit      PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                      "json:\"properties\" graphql:\"properties\""
	Rule       PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule) GetAudit() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Audit {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule) GetRule() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule_Rule {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule{}
	}
	return &t.Rule
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule struct {
	Errors []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Errors "json:\"errors\" graphql:\"errors\""
	Rule   *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule     "json:\"rule,omitempty\" graphql:\"rule\""
	Status cato_models.PolicyMutationStatus                              "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule) GetErrors() []*PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Errors {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule) GetRule() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule_Rule {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule{}
	}
	return t.Rule
}
func (t *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule{}
	}
	return &t.Status
}

type PolicyWanFirewallAddRule_Policy_WanFirewall struct {
	AddRule PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule "json:\"addRule\" graphql:\"addRule\""
}

func (t *PolicyWanFirewallAddRule_Policy_WanFirewall) GetAddRule() *PolicyWanFirewallAddRule_Policy_WanFirewall_AddRule {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy_WanFirewall{}
	}
	return &t.AddRule
}

type PolicyWanFirewallAddRule_Policy struct {
	WanFirewall *PolicyWanFirewallAddRule_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallAddRule_Policy) GetWanFirewall() *PolicyWanFirewallAddRule_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallAddRule_Policy{}
	}
	return t.WanFirewall
}

type PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Section{}
	}
	return t.Name
}

type PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section struct {
	Audit      PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                 "json:\"properties\" graphql:\"properties\""
	Section    PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section) GetAudit() *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Audit {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section) GetSection() *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section_Section {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section{}
	}
	return &t.Section
}

type PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection struct {
	Errors  []*PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Errors "json:\"errors\" graphql:\"errors\""
	Section *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section  "json:\"section,omitempty\" graphql:\"section\""
	Status  cato_models.PolicyMutationStatus                                    "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection) GetErrors() []*PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Errors {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection) GetSection() *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection_Section {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection{}
	}
	return t.Section
}
func (t *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection{}
	}
	return &t.Status
}

type PolicyWanFirewallAddSection_Policy_WanFirewall struct {
	AddSection PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection "json:\"addSection\" graphql:\"addSection\""
}

func (t *PolicyWanFirewallAddSection_Policy_WanFirewall) GetAddSection() *PolicyWanFirewallAddSection_Policy_WanFirewall_AddSection {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy_WanFirewall{}
	}
	return &t.AddSection
}

type PolicyWanFirewallAddSection_Policy struct {
	WanFirewall *PolicyWanFirewallAddSection_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallAddSection_Policy) GetWanFirewall() *PolicyWanFirewallAddSection_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallAddSection_Policy{}
	}
	return t.WanFirewall
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source struct {
	FloatingSubnet    []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                    "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                    "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetFloatingSubnet() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetGlobalIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetHost() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetNetworkInterface() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetSite() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetSystemGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetUser() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_User {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source) GetUsersGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                         "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                         "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetFloatingSubnet() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetGlobalIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetHost() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetNetworkInterface() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetSite() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetSystemGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetUser() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination) GetUsersGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application struct {
	AppCategory            []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                              "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                              "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                              "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                              "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application) GetAppCategory() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application) GetApplication() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application) GetCustomApp() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application) GetCustomCategory() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application) GetGlobalIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application) GetIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom struct {
	Port                   []scalars.Port                                                                                                                         "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                                 "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom) GetPortRangeCustomService() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service struct {
	Custom   []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service) GetCustom() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service) GetStandard() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                                                "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                                         "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetMailingList() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetWebhook() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking struct {
	Alert PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking) GetAlert() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking) GetEvent() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.From
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.To
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return t.Days
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.From
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.To
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule struct {
	ActiveOn        cato_models.PolicyActiveOnEnum                                                                                            "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurring *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring "json:\"customRecurring,omitempty\" graphql:\"customRecurring\""
	CustomTimeframe *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe "json:\"customTimeframe,omitempty\" graphql:\"customTimeframe\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule) GetCustomRecurring() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomRecurring
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule) GetCustomTimeframe() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomTimeframe
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                               "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                               "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetHost() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSite() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSystemGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUser() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUsersGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                                    "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                                    "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetFloatingSubnet() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetHost() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetNetworkInterface() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSite() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSystemGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetUser() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetUsersGroup() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application struct {
	AppCategory            []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                         "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                         "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                         "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                         "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetAppCategory() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetApplication() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetCustomApp() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetCustomCategory() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetGlobalIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetIPRange() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom struct {
	Port      []scalars.Port                                                                                                                       "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                                                               "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPortRange() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service struct {
	Custom   []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetCustom() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetStandard() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions struct {
	Application      PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                       "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                          "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                                                                   "json:\"direction\" graphql:\"direction\""
	Name             string                                                                                                                 "json:\"name\" graphql:\"name\""
	Service          PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetApplication() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Application {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetCountry() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetDestination() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetDevice() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetService() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions) GetSource() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule struct {
	Action           cato_models.WanFirewallActionEnum                                                                             "json:\"action\" graphql:\"action\""
	Application      PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application   "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                              "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                                        "json:\"description\" graphql:\"description\""
	Destination      PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                 "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                                                          "json:\"direction\" graphql:\"direction\""
	Enabled          bool                                                                                                          "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                                        "json:\"id\" graphql:\"id\""
	Index            int64                                                                                                         "json:\"index\" graphql:\"index\""
	Name             string                                                                                                        "json:\"name\" graphql:\"name\""
	Schedule         PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetAction() *cato_models.WanFirewallActionEnum {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Action
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetApplication() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Application {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetCountry() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Country {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Country
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Description
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetDestination() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Destination {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetDevice() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Device {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Device
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetExceptions() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Exceptions {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Index
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return t.Name
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetSchedule() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Schedule {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetSection() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Section {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Section
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetService() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Service {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetSource() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Source {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Source
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule) GetTracking() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule_Tracking {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Tracking
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules struct {
	Audit      PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                        "json:\"properties\" graphql:\"properties\""
	Rule       PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules) GetAudit() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Audit {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules) GetRule() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules_Rule {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules{}
	}
	return &t.Rule
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Section{}
	}
	return t.Name
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections struct {
	Audit      PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                             "json:\"properties\" graphql:\"properties\""
	Section    PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections) GetAudit() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Audit {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections) GetSection() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections_Section {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections{}
	}
	return &t.Section
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_AuditWanFirewallPolicy struct {
	PublishedBy   string "json:\"publishedBy\" graphql:\"publishedBy\""
	PublishedTime string "json:\"publishedTime\" graphql:\"publishedTime\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_AuditWanFirewallPolicy) GetPublishedBy() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_AuditWanFirewallPolicy{}
	}
	return t.PublishedBy
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_AuditWanFirewallPolicy) GetPublishedTime() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_AuditWanFirewallPolicy{}
	}
	return t.PublishedTime
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy) GetChanges() int64 {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Changes
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy) GetCreatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.CreatedTime
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Description
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.ID
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Name
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy struct {
	AuditWanFirewallPolicy    *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_AuditWanFirewallPolicy    "json:\"auditWanFirewallPolicy,omitempty\" graphql:\"auditWanFirewallPolicy\""
	Enabled                   bool                                                                                                            "json:\"enabled\" graphql:\"enabled\""
	RevisionWanFirewallPolicy *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy "json:\"revisionWanFirewallPolicy,omitempty\" graphql:\"revisionWanFirewallPolicy\""
	Rules                     []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules                   "json:\"rules\" graphql:\"rules\""
	Sections                  []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections                "json:\"sections\" graphql:\"sections\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy) GetAuditWanFirewallPolicy() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_AuditWanFirewallPolicy {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy{}
	}
	return t.AuditWanFirewallPolicy
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy) GetRevisionWanFirewallPolicy() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_RevisionWanFirewallPolicy {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy{}
	}
	return t.RevisionWanFirewallPolicy
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy) GetRules() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Rules {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy{}
	}
	return t.Rules
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy) GetSections() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy_Sections {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy{}
	}
	return t.Sections
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision struct {
	Errors []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Errors "json:\"errors\" graphql:\"errors\""
	Policy *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy   "json:\"policy,omitempty\" graphql:\"policy\""
	Status cato_models.PolicyMutationStatus                                                        "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision) GetErrors() []*PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Errors {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision) GetPolicy() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision_Policy {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision{}
	}
	return t.Policy
}
func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision{}
	}
	return &t.Status
}

type PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall struct {
	CreatePolicyRevision PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision "json:\"createPolicyRevision\" graphql:\"createPolicyRevision\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall) GetCreatePolicyRevision() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall_CreatePolicyRevision {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall{}
	}
	return &t.CreatePolicyRevision
}

type PolicyWanFirewallCreatePolicyRevision_Policy struct {
	WanFirewall *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallCreatePolicyRevision_Policy) GetWanFirewall() *PolicyWanFirewallCreatePolicyRevision_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision_Policy{}
	}
	return t.WanFirewall
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source struct {
	FloatingSubnet    []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                      "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                      "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetFloatingSubnet() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetGlobalIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetHost() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetNetworkInterface() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetSite() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetSystemGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetUser() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_User {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source) GetUsersGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                           "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                           "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetFloatingSubnet() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetGlobalIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetHost() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetNetworkInterface() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetSite() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetSystemGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetUser() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination) GetUsersGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application struct {
	AppCategory            []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application) GetAppCategory() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application) GetApplication() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application) GetCustomApp() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application) GetCustomCategory() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application) GetGlobalIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application) GetIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom struct {
	Port                   []scalars.Port                                                                                                                           "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                                   "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom) GetPortRangeCustomService() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service struct {
	Custom   []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service) GetCustom() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service) GetStandard() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                                                  "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                                           "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetMailingList() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetWebhook() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking struct {
	Alert PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking) GetAlert() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking) GetEvent() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.From
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.To
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return t.Days
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.From
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.To
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule struct {
	ActiveOn        cato_models.PolicyActiveOnEnum                                                                                              "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurring *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring "json:\"customRecurring,omitempty\" graphql:\"customRecurring\""
	CustomTimeframe *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe "json:\"customTimeframe,omitempty\" graphql:\"customTimeframe\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule) GetCustomRecurring() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomRecurring
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule) GetCustomTimeframe() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomTimeframe
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                                 "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                                 "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetHost() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSite() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSystemGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUser() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUsersGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                                      "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                                      "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetFloatingSubnet() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetHost() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetNetworkInterface() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSite() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSystemGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetUser() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetUsersGroup() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application struct {
	AppCategory            []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                           "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                           "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                           "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                           "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetAppCategory() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetApplication() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetCustomApp() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetCustomCategory() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetGlobalIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetIPRange() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom struct {
	Port      []scalars.Port                                                                                                                         "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                                                                 "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPortRange() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service struct {
	Custom   []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetCustom() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetStandard() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions struct {
	Application      PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                         "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                            "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                                                                     "json:\"direction\" graphql:\"direction\""
	Name             string                                                                                                                   "json:\"name\" graphql:\"name\""
	Service          PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetApplication() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Application {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetCountry() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetDestination() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetDevice() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetService() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions) GetSource() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule struct {
	Action           cato_models.WanFirewallActionEnum                                                                               "json:\"action\" graphql:\"action\""
	Application      PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application   "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                                          "json:\"description\" graphql:\"description\""
	Destination      PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                   "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                                                            "json:\"direction\" graphql:\"direction\""
	Enabled          bool                                                                                                            "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                                          "json:\"id\" graphql:\"id\""
	Index            int64                                                                                                           "json:\"index\" graphql:\"index\""
	Name             string                                                                                                          "json:\"name\" graphql:\"name\""
	Schedule         PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetAction() *cato_models.WanFirewallActionEnum {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Action
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetApplication() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Application {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetCountry() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Country {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Country
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Description
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetDestination() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Destination {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetDevice() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Device {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Device
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetExceptions() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Exceptions {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Index
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Name
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetSchedule() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Schedule {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetSection() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Section {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Section
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetService() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Service {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetSource() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Source {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Source
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule) GetTracking() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule_Tracking {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Tracking
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules struct {
	Audit      PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                          "json:\"properties\" graphql:\"properties\""
	Rule       PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules) GetAudit() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Audit {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules) GetRule() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules_Rule {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules{}
	}
	return &t.Rule
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Section{}
	}
	return t.Name
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections struct {
	Audit      PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                               "json:\"properties\" graphql:\"properties\""
	Section    PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections) GetAudit() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Audit {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections) GetSection() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections_Section {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections{}
	}
	return &t.Section
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_AuditWanFirewallPolicy struct {
	PublishedBy   string "json:\"publishedBy\" graphql:\"publishedBy\""
	PublishedTime string "json:\"publishedTime\" graphql:\"publishedTime\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_AuditWanFirewallPolicy) GetPublishedBy() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_AuditWanFirewallPolicy{}
	}
	return t.PublishedBy
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_AuditWanFirewallPolicy) GetPublishedTime() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_AuditWanFirewallPolicy{}
	}
	return t.PublishedTime
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy) GetChanges() int64 {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Changes
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy) GetCreatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.CreatedTime
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Description
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.ID
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Name
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy struct {
	AuditWanFirewallPolicy    *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_AuditWanFirewallPolicy    "json:\"auditWanFirewallPolicy,omitempty\" graphql:\"auditWanFirewallPolicy\""
	Enabled                   bool                                                                                                              "json:\"enabled\" graphql:\"enabled\""
	RevisionWanFirewallPolicy *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy "json:\"revisionWanFirewallPolicy,omitempty\" graphql:\"revisionWanFirewallPolicy\""
	Rules                     []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules                   "json:\"rules\" graphql:\"rules\""
	Sections                  []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections                "json:\"sections\" graphql:\"sections\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy) GetAuditWanFirewallPolicy() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_AuditWanFirewallPolicy {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy{}
	}
	return t.AuditWanFirewallPolicy
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy) GetRevisionWanFirewallPolicy() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_RevisionWanFirewallPolicy {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy{}
	}
	return t.RevisionWanFirewallPolicy
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy) GetRules() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Rules {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy{}
	}
	return t.Rules
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy) GetSections() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy_Sections {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy{}
	}
	return t.Sections
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision struct {
	Errors []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Errors "json:\"errors\" graphql:\"errors\""
	Policy *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy   "json:\"policy,omitempty\" graphql:\"policy\""
	Status cato_models.PolicyMutationStatus                                                          "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision) GetErrors() []*PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Errors {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision) GetPolicy() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision_Policy {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision{}
	}
	return t.Policy
}
func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision{}
	}
	return &t.Status
}

type PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall struct {
	DiscardPolicyRevision PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision "json:\"discardPolicyRevision\" graphql:\"discardPolicyRevision\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall) GetDiscardPolicyRevision() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall_DiscardPolicyRevision {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall{}
	}
	return &t.DiscardPolicyRevision
}

type PolicyWanFirewallDiscardPolicyRevision_Policy struct {
	WanFirewall *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision_Policy) GetWanFirewall() *PolicyWanFirewallDiscardPolicyRevision_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision_Policy{}
	}
	return t.WanFirewall
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Section{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source struct {
	FloatingSubnet    []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                    "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                    "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetFloatingSubnet() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetGlobalIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetHost() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetNetworkInterface() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetSite() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetSystemGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetUser() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_User {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source) GetUsersGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Country{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Device{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                         "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                         "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetFloatingSubnet() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetGlobalIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetHost() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetNetworkInterface() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetSite() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetSystemGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetUser() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination) GetUsersGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application struct {
	AppCategory            []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                              "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                              "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                              "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                              "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application) GetAppCategory() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application) GetApplication() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application) GetCustomApp() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application) GetCustomCategory() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application) GetGlobalIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application) GetIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom struct {
	Port      []scalars.Port                                                                            "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                    "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom) GetPortRange() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service struct {
	Custom   []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service) GetCustom() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service) GetStandard() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                         "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert) GetMailingList() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert) GetWebhook() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking struct {
	Alert PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking) GetAlert() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking) GetEvent() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.From
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.To
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return t.Days
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.From
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.To
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule struct {
	ActiveOn                      cato_models.PolicyActiveOnEnum                                                                          "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurringPolicySchedule *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule "json:\"customRecurringPolicySchedule,omitempty\" graphql:\"customRecurringPolicySchedule\""
	CustomTimeframePolicySchedule *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule "json:\"customTimeframePolicySchedule,omitempty\" graphql:\"customTimeframePolicySchedule\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule) GetCustomRecurringPolicySchedule() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule{}
	}
	return t.CustomRecurringPolicySchedule
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule) GetCustomTimeframePolicySchedule() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule{}
	}
	return t.CustomTimeframePolicySchedule
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                               "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                               "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetHost() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetSite() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetSystemGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetUser() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source) GetUsersGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                    "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                    "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetFloatingSubnet() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetHost() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetNetworkInterface() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetSite() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetSystemGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetUser() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination) GetUsersGroup() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application struct {
	AppCategory            []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                         "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                         "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                         "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                         "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application) GetAppCategory() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application) GetApplication() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application) GetCustomApp() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application) GetCustomCategory() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application) GetGlobalIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application) GetIPRange() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom struct {
	Port                   []scalars.Port                                                                                                    "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                            "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom) GetPortRangeCustomService() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service struct {
	Custom   []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service) GetCustom() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service) GetStandard() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions struct {
	Application      PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                       "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                          "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                                   "json:\"direction\" graphql:\"direction\""
	Name             string                                                                                 "json:\"name\" graphql:\"name\""
	Service          PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions) GetApplication() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Application {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions) GetCountry() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions) GetDestination() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions) GetDevice() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions) GetService() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions) GetSource() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule struct {
	Action           cato_models.WanFirewallActionEnum                                             "json:\"action\" graphql:\"action\""
	Application      PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application   "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                              "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                        "json:\"description\" graphql:\"description\""
	Destination      PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                 "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                          "json:\"direction\" graphql:\"direction\""
	Enabled          bool                                                                          "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                        "json:\"id\" graphql:\"id\""
	Index            int64                                                                         "json:\"index\" graphql:\"index\""
	Name             string                                                                        "json:\"name\" graphql:\"name\""
	Schedule         PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetAction() *cato_models.WanFirewallActionEnum {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Action
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetApplication() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Application {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetCountry() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Country {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return t.Country
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return t.Description
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetDestination() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Destination {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetDevice() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Device {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return t.Device
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetExceptions() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Exceptions {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return t.Index
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return t.Name
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetSchedule() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Schedule {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetSection() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Section {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Section
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetService() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Service {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetSource() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Source {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Source
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule) GetTracking() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule_Tracking {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule{}
	}
	return &t.Tracking
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule struct {
	Audit      PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                        "json:\"properties\" graphql:\"properties\""
	Rule       PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule) GetAudit() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Audit {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule) GetRule() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule_Rule {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule{}
	}
	return &t.Rule
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule struct {
	Errors []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Errors "json:\"errors\" graphql:\"errors\""
	Rule   *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule     "json:\"rule,omitempty\" graphql:\"rule\""
	Status cato_models.PolicyMutationStatus                                "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule) GetErrors() []*PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Errors {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule) GetRule() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule_Rule {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule{}
	}
	return t.Rule
}
func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule{}
	}
	return &t.Status
}

type PolicyWanFirewallMoveRule_Policy_WanFirewall struct {
	MoveRule PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule "json:\"moveRule\" graphql:\"moveRule\""
}

func (t *PolicyWanFirewallMoveRule_Policy_WanFirewall) GetMoveRule() *PolicyWanFirewallMoveRule_Policy_WanFirewall_MoveRule {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy_WanFirewall{}
	}
	return &t.MoveRule
}

type PolicyWanFirewallMoveRule_Policy struct {
	WanFirewall *PolicyWanFirewallMoveRule_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallMoveRule_Policy) GetWanFirewall() *PolicyWanFirewallMoveRule_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallMoveRule_Policy{}
	}
	return t.WanFirewall
}

type PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Section{}
	}
	return t.Name
}

type PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section struct {
	Audit      PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                   "json:\"properties\" graphql:\"properties\""
	Section    PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section) GetAudit() *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Audit {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section) GetSection() *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section_Section {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section{}
	}
	return &t.Section
}

type PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection struct {
	Errors  []*PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Errors "json:\"errors\" graphql:\"errors\""
	Section *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section  "json:\"section,omitempty\" graphql:\"section\""
	Status  cato_models.PolicyMutationStatus                                      "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection) GetErrors() []*PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Errors {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection) GetSection() *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection_Section {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection{}
	}
	return t.Section
}
func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection{}
	}
	return &t.Status
}

type PolicyWanFirewallMoveSection_Policy_WanFirewall struct {
	MoveSection PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection "json:\"moveSection\" graphql:\"moveSection\""
}

func (t *PolicyWanFirewallMoveSection_Policy_WanFirewall) GetMoveSection() *PolicyWanFirewallMoveSection_Policy_WanFirewall_MoveSection {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy_WanFirewall{}
	}
	return &t.MoveSection
}

type PolicyWanFirewallMoveSection_Policy struct {
	WanFirewall *PolicyWanFirewallMoveSection_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallMoveSection_Policy) GetWanFirewall() *PolicyWanFirewallMoveSection_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallMoveSection_Policy{}
	}
	return t.WanFirewall
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source struct {
	FloatingSubnet    []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                      "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                      "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetFloatingSubnet() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetGlobalIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetHost() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetNetworkInterface() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetSite() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetSystemGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetUser() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_User {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source) GetUsersGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                           "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                           "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetFloatingSubnet() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetGlobalIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetHost() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetNetworkInterface() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetSite() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetSystemGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetUser() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination) GetUsersGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application struct {
	AppCategory            []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application) GetAppCategory() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application) GetApplication() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application) GetCustomApp() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application) GetCustomCategory() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application) GetGlobalIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application) GetIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom struct {
	Port                   []scalars.Port                                                                                                                           "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                                   "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom) GetPortRangeCustomService() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service struct {
	Custom   []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service) GetCustom() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service) GetStandard() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                                                  "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                                           "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetMailingList() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert) GetWebhook() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking struct {
	Alert PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking) GetAlert() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking) GetEvent() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.From
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.To
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return t.Days
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.From
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.To
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule struct {
	ActiveOn        cato_models.PolicyActiveOnEnum                                                                                              "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurring *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring "json:\"customRecurring,omitempty\" graphql:\"customRecurring\""
	CustomTimeframe *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe "json:\"customTimeframe,omitempty\" graphql:\"customTimeframe\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule) GetCustomRecurring() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomRecurring {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomRecurring
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule) GetCustomTimeframe() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule_CustomTimeframe {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomTimeframe
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                                 "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                                 "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetHost() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSite() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetSystemGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUser() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source) GetUsersGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                                      "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                                      "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetFloatingSubnet() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetHost() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetNetworkInterface() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSite() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetSystemGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetUser() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination) GetUsersGroup() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application struct {
	AppCategory            []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                                           "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                                           "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                                           "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                                           "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetAppCategory() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetApplication() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetCustomApp() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetCustomCategory() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetGlobalIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetIPRange() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom struct {
	Port      []scalars.Port                                                                                                                         "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                                                                 "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetPortRange() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service struct {
	Custom   []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetCustom() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service) GetStandard() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions struct {
	Application      PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                         "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                            "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                                                                     "json:\"direction\" graphql:\"direction\""
	Name             string                                                                                                                   "json:\"name\" graphql:\"name\""
	Service          PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetApplication() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Application {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetCountry() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetDestination() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetDevice() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetService() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions) GetSource() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule struct {
	Action           cato_models.WanFirewallActionEnum                                                                               "json:\"action\" graphql:\"action\""
	Application      PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application   "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                                "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                                          "json:\"description\" graphql:\"description\""
	Destination      PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                                   "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                                                            "json:\"direction\" graphql:\"direction\""
	Enabled          bool                                                                                                            "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                                          "json:\"id\" graphql:\"id\""
	Index            int64                                                                                                           "json:\"index\" graphql:\"index\""
	Name             string                                                                                                          "json:\"name\" graphql:\"name\""
	Schedule         PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetAction() *cato_models.WanFirewallActionEnum {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Action
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetApplication() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Application {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetCountry() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Country {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Country
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Description
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetDestination() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Destination {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetDevice() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Device {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Device
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetExceptions() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Exceptions {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Index
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return t.Name
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetSchedule() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Schedule {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetSection() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Section {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Section
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetService() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Service {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetSource() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Source {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Source
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule) GetTracking() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule_Tracking {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule{}
	}
	return &t.Tracking
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules struct {
	Audit      PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                          "json:\"properties\" graphql:\"properties\""
	Rule       PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules) GetAudit() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Audit {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules) GetRule() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules_Rule {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules{}
	}
	return &t.Rule
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Section{}
	}
	return t.Name
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections struct {
	Audit      PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                                               "json:\"properties\" graphql:\"properties\""
	Section    PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections) GetAudit() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Audit {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections) GetSection() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections_Section {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections{}
	}
	return &t.Section
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_AuditWanFirewallPolicy struct {
	PublishedBy   string "json:\"publishedBy\" graphql:\"publishedBy\""
	PublishedTime string "json:\"publishedTime\" graphql:\"publishedTime\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_AuditWanFirewallPolicy) GetPublishedBy() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_AuditWanFirewallPolicy{}
	}
	return t.PublishedBy
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_AuditWanFirewallPolicy) GetPublishedTime() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_AuditWanFirewallPolicy{}
	}
	return t.PublishedTime
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy) GetChanges() int64 {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Changes
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy) GetCreatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.CreatedTime
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Description
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.ID
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Name
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy struct {
	AuditWanFirewallPolicy    *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_AuditWanFirewallPolicy    "json:\"auditWanFirewallPolicy,omitempty\" graphql:\"auditWanFirewallPolicy\""
	Enabled                   bool                                                                                                              "json:\"enabled\" graphql:\"enabled\""
	RevisionWanFirewallPolicy *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy "json:\"revisionWanFirewallPolicy,omitempty\" graphql:\"revisionWanFirewallPolicy\""
	Rules                     []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules                   "json:\"rules\" graphql:\"rules\""
	Sections                  []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections                "json:\"sections\" graphql:\"sections\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy) GetAuditWanFirewallPolicy() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_AuditWanFirewallPolicy {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy{}
	}
	return t.AuditWanFirewallPolicy
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy) GetRevisionWanFirewallPolicy() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_RevisionWanFirewallPolicy {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy{}
	}
	return t.RevisionWanFirewallPolicy
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy) GetRules() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Rules {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy{}
	}
	return t.Rules
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy) GetSections() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy_Sections {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy{}
	}
	return t.Sections
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision struct {
	Errors []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Errors "json:\"errors\" graphql:\"errors\""
	Policy *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy   "json:\"policy,omitempty\" graphql:\"policy\""
	Status cato_models.PolicyMutationStatus                                                          "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision) GetErrors() []*PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Errors {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision) GetPolicy() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision_Policy {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision{}
	}
	return t.Policy
}
func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision{}
	}
	return &t.Status
}

type PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall struct {
	PublishPolicyRevision PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision "json:\"publishPolicyRevision\" graphql:\"publishPolicyRevision\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall) GetPublishPolicyRevision() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall_PublishPolicyRevision {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall{}
	}
	return &t.PublishPolicyRevision
}

type PolicyWanFirewallPublishPolicyRevision_Policy struct {
	WanFirewall *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallPublishPolicyRevision_Policy) GetWanFirewall() *PolicyWanFirewallPublishPolicyRevision_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision_Policy{}
	}
	return t.WanFirewall
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Section{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source struct {
	FloatingSubnet    []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                        "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                        "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetFloatingSubnet() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetGlobalIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetHost() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetNetworkInterface() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetSite() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetSystemGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetUser() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_User {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source) GetUsersGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Country{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Device{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                             "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                             "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetFloatingSubnet() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetGlobalIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetHost() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetNetworkInterface() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetSite() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetSystemGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetUser() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination) GetUsersGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application struct {
	AppCategory            []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                  "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                  "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                  "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                  "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application) GetAppCategory() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application) GetApplication() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application) GetCustomApp() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application) GetCustomCategory() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application) GetGlobalIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application) GetIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom struct {
	Port      []scalars.Port                                                                                "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                        "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom) GetPortRange() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service struct {
	Custom   []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service) GetCustom() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service) GetStandard() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                    "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                             "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert) GetMailingList() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert) GetWebhook() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking struct {
	Alert PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking) GetAlert() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking) GetEvent() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.From
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.To
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return t.Days
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.From
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.To
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule struct {
	ActiveOn                      cato_models.PolicyActiveOnEnum                                                                              "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurringPolicySchedule *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule "json:\"customRecurringPolicySchedule,omitempty\" graphql:\"customRecurringPolicySchedule\""
	CustomTimeframePolicySchedule *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule "json:\"customTimeframePolicySchedule,omitempty\" graphql:\"customTimeframePolicySchedule\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule) GetCustomRecurringPolicySchedule() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule{}
	}
	return t.CustomRecurringPolicySchedule
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule) GetCustomTimeframePolicySchedule() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule{}
	}
	return t.CustomTimeframePolicySchedule
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                   "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                   "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetHost() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetSite() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetSystemGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetUser() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source) GetUsersGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                        "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                        "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetFloatingSubnet() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetHost() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetNetworkInterface() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetSite() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetSystemGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetUser() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination) GetUsersGroup() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application struct {
	AppCategory            []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                             "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                             "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                             "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                             "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application) GetAppCategory() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application) GetApplication() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application) GetCustomApp() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application) GetCustomCategory() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application) GetGlobalIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application) GetIPRange() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom struct {
	Port                   []scalars.Port                                                                                                        "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom) GetPortRangeCustomService() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service struct {
	Custom   []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service) GetCustom() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service) GetStandard() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions struct {
	Application      PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                           "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                              "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                                       "json:\"direction\" graphql:\"direction\""
	Name             string                                                                                     "json:\"name\" graphql:\"name\""
	Service          PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions) GetApplication() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Application {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions) GetCountry() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions) GetDestination() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions) GetDevice() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions) GetService() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions) GetSource() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule struct {
	Action           cato_models.WanFirewallActionEnum                                                 "json:\"action\" graphql:\"action\""
	Application      PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application   "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                  "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                            "json:\"description\" graphql:\"description\""
	Destination      PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                     "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                              "json:\"direction\" graphql:\"direction\""
	Enabled          bool                                                                              "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                            "json:\"id\" graphql:\"id\""
	Index            int64                                                                             "json:\"index\" graphql:\"index\""
	Name             string                                                                            "json:\"name\" graphql:\"name\""
	Schedule         PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetAction() *cato_models.WanFirewallActionEnum {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Action
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetApplication() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Application {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetCountry() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Country {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Country
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Description
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetDestination() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Destination {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetDevice() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Device {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Device
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetExceptions() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Exceptions {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Index
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return t.Name
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetSchedule() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Schedule {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetSection() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Section {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Section
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetService() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Service {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetSource() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Source {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Source
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule) GetTracking() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule_Tracking {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule{}
	}
	return &t.Tracking
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule struct {
	Audit      PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                            "json:\"properties\" graphql:\"properties\""
	Rule       PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule) GetAudit() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Audit {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule) GetRule() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule_Rule {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule{}
	}
	return &t.Rule
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule struct {
	Errors []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Errors "json:\"errors\" graphql:\"errors\""
	Rule   *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule     "json:\"rule,omitempty\" graphql:\"rule\""
	Status cato_models.PolicyMutationStatus                                    "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule) GetErrors() []*PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Errors {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule) GetRule() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule_Rule {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule{}
	}
	return t.Rule
}
func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule{}
	}
	return &t.Status
}

type PolicyWanFirewallRemoveRule_Policy_WanFirewall struct {
	RemoveRule PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule "json:\"removeRule\" graphql:\"removeRule\""
}

func (t *PolicyWanFirewallRemoveRule_Policy_WanFirewall) GetRemoveRule() *PolicyWanFirewallRemoveRule_Policy_WanFirewall_RemoveRule {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy_WanFirewall{}
	}
	return &t.RemoveRule
}

type PolicyWanFirewallRemoveRule_Policy struct {
	WanFirewall *PolicyWanFirewallRemoveRule_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallRemoveRule_Policy) GetWanFirewall() *PolicyWanFirewallRemoveRule_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule_Policy{}
	}
	return t.WanFirewall
}

type PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Section{}
	}
	return t.Name
}

type PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section struct {
	Audit      PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                       "json:\"properties\" graphql:\"properties\""
	Section    PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section) GetAudit() *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Audit {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section) GetSection() *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section_Section {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section{}
	}
	return &t.Section
}

type PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection struct {
	Errors  []*PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Errors "json:\"errors\" graphql:\"errors\""
	Section *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section  "json:\"section,omitempty\" graphql:\"section\""
	Status  cato_models.PolicyMutationStatus                                          "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection) GetErrors() []*PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Errors {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection) GetSection() *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection_Section {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection{}
	}
	return t.Section
}
func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection{}
	}
	return &t.Status
}

type PolicyWanFirewallRemoveSection_Policy_WanFirewall struct {
	RemoveSection PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection "json:\"removeSection\" graphql:\"removeSection\""
}

func (t *PolicyWanFirewallRemoveSection_Policy_WanFirewall) GetRemoveSection() *PolicyWanFirewallRemoveSection_Policy_WanFirewall_RemoveSection {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy_WanFirewall{}
	}
	return &t.RemoveSection
}

type PolicyWanFirewallRemoveSection_Policy struct {
	WanFirewall *PolicyWanFirewallRemoveSection_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallRemoveSection_Policy) GetWanFirewall() *PolicyWanFirewallRemoveSection_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection_Policy{}
	}
	return t.WanFirewall
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Section{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source struct {
	FloatingSubnet    []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                    "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                    "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetFloatingSubnet() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetGlobalIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetHost() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetNetworkInterface() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetSite() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetSystemGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetUser() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_User {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source) GetUsersGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Country{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Device{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                         "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                         "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetFloatingSubnet() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetGlobalIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetHost() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetNetworkInterface() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetSite() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetSystemGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetUser() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination) GetUsersGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application struct {
	AppCategory            []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                              "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                              "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                              "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                              "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application) GetAppCategory() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application) GetApplication() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application) GetCustomApp() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application) GetCustomCategory() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application) GetGlobalIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application) GetIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom struct {
	Port                   []scalars.Port                                                                                                         "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                 "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom) GetPortRangeCustomService() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service struct {
	Custom   []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service) GetCustom() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service) GetStandard() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                                "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                                         "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert) GetMailingList() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert) GetWebhook() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking struct {
	Alert PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking) GetAlert() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking) GetEvent() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe{}
	}
	return t.To
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return t.Days
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.From
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring{}
	}
	return &t.To
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule struct {
	ActiveOn        cato_models.PolicyActiveOnEnum                                                                            "json:\"activeOn\" graphql:\"activeOn\""
	CustomRecurring *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring "json:\"customRecurring,omitempty\" graphql:\"customRecurring\""
	CustomTimeframe *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe "json:\"customTimeframe,omitempty\" graphql:\"customTimeframe\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule) GetActiveOn() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule{}
	}
	return &t.ActiveOn
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule) GetCustomRecurring() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomRecurring {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomRecurring
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule) GetCustomTimeframe() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule_CustomTimeframe {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule{}
	}
	return t.CustomTimeframe
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                               "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                               "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetHost() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetSite() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetSystemGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetUser() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source) GetUsersGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                                    "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                                    "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetFloatingSubnet() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetHost() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetNetworkInterface() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetSite() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetSystemGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetUser() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination) GetUsersGroup() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application struct {
	AppCategory            []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                                         "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                                         "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                                         "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                                         "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application) GetAppCategory() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application) GetApplication() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application) GetCustomApp() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application) GetCustomCategory() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application) GetGlobalIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application) GetIPRange() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom struct {
	Port      []scalars.Port                                                                                                       "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                                               "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom) GetPortRange() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service struct {
	Custom   []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service) GetCustom() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service) GetStandard() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions struct {
	Application      PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                                       "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination      PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                          "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                                                   "json:\"direction\" graphql:\"direction\""
	Name             string                                                                                                 "json:\"name\" graphql:\"name\""
	Service          PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetApplication() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Application {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetCountry() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetDestination() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetDevice() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetService() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions) GetSource() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule struct {
	Action           cato_models.WanFirewallActionEnum                                                             "json:\"action\" graphql:\"action\""
	Application      PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application   "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                              "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                                        "json:\"description\" graphql:\"description\""
	Destination      PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                                 "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                                          "json:\"direction\" graphql:\"direction\""
	Enabled          bool                                                                                          "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                                        "json:\"id\" graphql:\"id\""
	Index            int64                                                                                         "json:\"index\" graphql:\"index\""
	Name             string                                                                                        "json:\"name\" graphql:\"name\""
	Schedule         PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetAction() *cato_models.WanFirewallActionEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Action
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetApplication() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Application {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetCountry() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Country {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Country
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Description
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetDestination() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Destination {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetDevice() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Device {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Device
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetExceptions() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Exceptions {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Index
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return t.Name
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetSchedule() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Schedule {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetSection() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Section {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Section
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetService() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Service {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetSource() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Source {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Source
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule) GetTracking() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule_Tracking {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule{}
	}
	return &t.Tracking
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules struct {
	Audit      PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                        "json:\"properties\" graphql:\"properties\""
	Rule       PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules) GetAudit() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Audit {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules) GetRule() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules_Rule {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules{}
	}
	return &t.Rule
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Section{}
	}
	return t.Name
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections struct {
	Audit      PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                             "json:\"properties\" graphql:\"properties\""
	Section    PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections) GetAudit() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Audit {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections) GetSection() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections_Section {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections{}
	}
	return &t.Section
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_AuditWanFirewallPolicy struct {
	PublishedBy   string "json:\"publishedBy\" graphql:\"publishedBy\""
	PublishedTime string "json:\"publishedTime\" graphql:\"publishedTime\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_AuditWanFirewallPolicy) GetPublishedBy() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_AuditWanFirewallPolicy{}
	}
	return t.PublishedBy
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_AuditWanFirewallPolicy) GetPublishedTime() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_AuditWanFirewallPolicy{}
	}
	return t.PublishedTime
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy struct {
	Changes     int64  "json:\"changes\" graphql:\"changes\""
	CreatedTime string "json:\"createdTime\" graphql:\"createdTime\""
	Description string "json:\"description\" graphql:\"description\""
	ID          string "json:\"id\" graphql:\"id\""
	Name        string "json:\"name\" graphql:\"name\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy) GetChanges() int64 {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Changes
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy) GetCreatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy{}
	}
	return t.CreatedTime
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Description
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy{}
	}
	return t.Name
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy struct {
	AuditWanFirewallPolicy    *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_AuditWanFirewallPolicy    "json:\"auditWanFirewallPolicy,omitempty\" graphql:\"auditWanFirewallPolicy\""
	Enabled                   bool                                                                                            "json:\"enabled\" graphql:\"enabled\""
	RevisionWanFirewallPolicy *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy "json:\"revisionWanFirewallPolicy,omitempty\" graphql:\"revisionWanFirewallPolicy\""
	Rules                     []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules                   "json:\"rules\" graphql:\"rules\""
	Sections                  []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections                "json:\"sections\" graphql:\"sections\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy) GetAuditWanFirewallPolicy() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_AuditWanFirewallPolicy {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy{}
	}
	return t.AuditWanFirewallPolicy
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy) GetRevisionWanFirewallPolicy() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_RevisionWanFirewallPolicy {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy{}
	}
	return t.RevisionWanFirewallPolicy
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy) GetRules() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Rules {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy{}
	}
	return t.Rules
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy) GetSections() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy_Sections {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy{}
	}
	return t.Sections
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy struct {
	Errors []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Errors "json:\"errors\" graphql:\"errors\""
	Policy *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy   "json:\"policy,omitempty\" graphql:\"policy\""
	Status cato_models.PolicyMutationStatus                                        "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy) GetErrors() []*PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Errors {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy) GetPolicy() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy_Policy {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy{}
	}
	return t.Policy
}
func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy{}
	}
	return &t.Status
}

type PolicyWanFirewallUpdatePolicy_Policy_WanFirewall struct {
	UpdatePolicy PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy "json:\"updatePolicy\" graphql:\"updatePolicy\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall) GetUpdatePolicy() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall_UpdatePolicy {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy_WanFirewall{}
	}
	return &t.UpdatePolicy
}

type PolicyWanFirewallUpdatePolicy_Policy struct {
	WanFirewall *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallUpdatePolicy_Policy) GetWanFirewall() *PolicyWanFirewallUpdatePolicy_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy_Policy{}
	}
	return t.WanFirewall
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Section{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source struct {
	FloatingSubnet    []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                        "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                        "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetFloatingSubnet() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetGlobalIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetHost() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetNetworkInterface() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetSite() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetSystemGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetUser() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_User {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source) GetUsersGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Country{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Device{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                             "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                             "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetFloatingSubnet() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetGlobalIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetHost() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetNetworkInterface() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetSite() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetSystemGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetUser() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination) GetUsersGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application struct {
	AppCategory            []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                  "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                  "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                  "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                  "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application) GetAppCategory() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application) GetApplication() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application) GetCustomApp() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application) GetCustomCategory() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application) GetGlobalIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application) GetIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.From
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange{}
	}
	return &t.To
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom struct {
	Port      []scalars.Port                                                                                "json:\"port,omitempty\" graphql:\"port\""
	PortRange *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange "json:\"portRange,omitempty\" graphql:\"portRange\""
	Protocol  cato_models.IPProtocol                                                                        "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom) GetPortRange() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom_PortRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom{}
	}
	return t.PortRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service struct {
	Custom   []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service) GetCustom() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service) GetStandard() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Event struct {
	Enabled bool "json:\"enabled\" graphql:\"enabled\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Event) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Event{}
	}
	return t.Enabled
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert struct {
	Enabled           bool                                                                                                    "json:\"enabled\" graphql:\"enabled\""
	Frequency         cato_models.PolicyRuleTrackingFrequencyEnum                                                             "json:\"frequency\" graphql:\"frequency\""
	MailingList       []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList       "json:\"mailingList\" graphql:\"mailingList\""
	SubscriptionGroup []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup "json:\"subscriptionGroup\" graphql:\"subscriptionGroup\""
	Webhook           []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook           "json:\"webhook\" graphql:\"webhook\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert) GetFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert{}
	}
	return &t.Frequency
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert) GetMailingList() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_MailingList {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert{}
	}
	return t.MailingList
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert) GetSubscriptionGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_SubscriptionGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert{}
	}
	return t.SubscriptionGroup
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert) GetWebhook() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert_Webhook {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert{}
	}
	return t.Webhook
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking struct {
	Alert PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert "json:\"alert\" graphql:\"alert\""
	Event PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Event "json:\"event\" graphql:\"event\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking) GetAlert() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Alert {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking{}
	}
	return &t.Alert
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking) GetEvent() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking_Event {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking{}
	}
	return &t.Event
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule{}
	}
	return t.To
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule struct {
	Days []cato_models.DayOfWeek "json:\"days\" graphql:\"days\""
	From scalars.Time            "json:\"from\" graphql:\"from\""
	To   scalars.Time            "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetDays() []cato_models.DayOfWeek {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return t.Days
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetFrom() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.From
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule) GetTo() *scalars.Time {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule{}
	}
	return &t.To
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule struct {
	ActiveOnPolicySchedule        cato_models.PolicyActiveOnEnum                                                                              "json:\"activeOnPolicySchedule\" graphql:\"activeOnPolicySchedule\""
	CustomRecurringPolicySchedule *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule "json:\"customRecurringPolicySchedule,omitempty\" graphql:\"customRecurringPolicySchedule\""
	CustomTimeframePolicySchedule *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule "json:\"customTimeframePolicySchedule,omitempty\" graphql:\"customTimeframePolicySchedule\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule) GetActiveOnPolicySchedule() *cato_models.PolicyActiveOnEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule{}
	}
	return &t.ActiveOnPolicySchedule
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule) GetCustomRecurringPolicySchedule() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomRecurringPolicySchedule {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule{}
	}
	return t.CustomRecurringPolicySchedule
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule) GetCustomTimeframePolicySchedule() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule_CustomTimeframePolicySchedule {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule{}
	}
	return t.CustomTimeframePolicySchedule
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source struct {
	FloatingSubnet    []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                   "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                   "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetFloatingSubnet() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetGlobalIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Group {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Group
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetHost() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Host {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Host
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetNetworkInterface() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetSite() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_Site {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Site
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetSiteNetworkSubnet() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetSystemGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetUser() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_User {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.User
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source) GetUsersGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Host struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Host) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Host{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Host) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Host{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Site) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Site{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Site) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Site{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_NetworkInterface struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_NetworkInterface) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_NetworkInterface) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_NetworkInterface{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_FloatingSubnet struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_FloatingSubnet) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_FloatingSubnet) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_FloatingSubnet{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_User struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_User) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_User{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_User) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_User{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_UsersGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_UsersGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_UsersGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_UsersGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Group struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Group) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Group{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Group) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Group{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SystemGroup struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SystemGroup) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SystemGroup) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SystemGroup{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination struct {
	FloatingSubnet    []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_FloatingSubnet    "json:\"floatingSubnet\" graphql:\"floatingSubnet\""
	GlobalIPRange     []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange     "json:\"globalIpRange\" graphql:\"globalIpRange\""
	Group             []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Group             "json:\"group\" graphql:\"group\""
	Host              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Host              "json:\"host\" graphql:\"host\""
	IP                []string                                                                                                        "json:\"ip\" graphql:\"ip\""
	IPRange           []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange           "json:\"ipRange\" graphql:\"ipRange\""
	NetworkInterface  []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_NetworkInterface  "json:\"networkInterface\" graphql:\"networkInterface\""
	Site              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Site              "json:\"site\" graphql:\"site\""
	SiteNetworkSubnet []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet "json:\"siteNetworkSubnet\" graphql:\"siteNetworkSubnet\""
	Subnet            []string                                                                                                        "json:\"subnet\" graphql:\"subnet\""
	SystemGroup       []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SystemGroup       "json:\"systemGroup\" graphql:\"systemGroup\""
	User              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_User              "json:\"user\" graphql:\"user\""
	UsersGroup        []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_UsersGroup        "json:\"usersGroup\" graphql:\"usersGroup\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetFloatingSubnet() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_FloatingSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.FloatingSubnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetGlobalIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Group {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Group
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetHost() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Host {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Host
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetNetworkInterface() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_NetworkInterface {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.NetworkInterface
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetSite() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_Site {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Site
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetSiteNetworkSubnet() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SiteNetworkSubnet {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SiteNetworkSubnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.Subnet
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetSystemGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_SystemGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.SystemGroup
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetUser() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_User {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.User
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination) GetUsersGroup() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination_UsersGroup {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination{}
	}
	return t.UsersGroup
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Country struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Country) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Country{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Country) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Country{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Device struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Device) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Device{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Device) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Device{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_Application struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_Application) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_Application{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_Application) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_Application{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_AppCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_AppCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_AppCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_AppCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_AppCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomApp struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomApp) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomApp{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomApp) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomApp{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_IPRange struct {
	From string "json:\"from\" graphql:\"from\""
	To   string "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_IPRange) GetFrom() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_IPRange{}
	}
	return t.From
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_IPRange) GetTo() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_IPRange{}
	}
	return t.To
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_GlobalIPRange struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_GlobalIPRange) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_GlobalIPRange) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_GlobalIPRange{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application struct {
	AppCategory            []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_AppCategory            "json:\"appCategory\" graphql:\"appCategory\""
	Application            []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_Application            "json:\"application\" graphql:\"application\""
	CustomApp              []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomApp              "json:\"customApp\" graphql:\"customApp\""
	CustomCategory         []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomCategory         "json:\"customCategory\" graphql:\"customCategory\""
	Domain                 []string                                                                                                             "json:\"domain\" graphql:\"domain\""
	Fqdn                   []string                                                                                                             "json:\"fqdn\" graphql:\"fqdn\""
	GlobalIPRange          []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_GlobalIPRange          "json:\"globalIpRange\" graphql:\"globalIpRange\""
	IP                     []string                                                                                                             "json:\"ip\" graphql:\"ip\""
	IPRange                []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_IPRange                "json:\"ipRange\" graphql:\"ipRange\""
	SanctionedAppsCategory []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory "json:\"sanctionedAppsCategory\" graphql:\"sanctionedAppsCategory\""
	Subnet                 []string                                                                                                             "json:\"subnet\" graphql:\"subnet\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application) GetAppCategory() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_AppCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application{}
	}
	return t.AppCategory
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application) GetApplication() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_Application {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Application
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application) GetCustomApp() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomApp {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application{}
	}
	return t.CustomApp
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application) GetCustomCategory() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_CustomCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application{}
	}
	return t.CustomCategory
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application) GetDomain() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Domain
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application) GetFqdn() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Fqdn
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application) GetGlobalIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_GlobalIPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application{}
	}
	return t.GlobalIPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application) GetIP() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application{}
	}
	return t.IP
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application) GetIPRange() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_IPRange {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application{}
	}
	return t.IPRange
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application) GetSanctionedAppsCategory() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application_SanctionedAppsCategory {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application{}
	}
	return t.SanctionedAppsCategory
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application) GetSubnet() []string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application{}
	}
	return t.Subnet
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService struct {
	From scalars.Port "json:\"from\" graphql:\"from\""
	To   scalars.Port "json:\"to\" graphql:\"to\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetFrom() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.From
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService) GetTo() *scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService{}
	}
	return &t.To
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom struct {
	Port                   []scalars.Port                                                                                                        "json:\"port,omitempty\" graphql:\"port\""
	PortRangeCustomService *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService "json:\"portRangeCustomService,omitempty\" graphql:\"portRangeCustomService\""
	Protocol               cato_models.IPProtocol                                                                                                "json:\"protocol\" graphql:\"protocol\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom) GetPort() []scalars.Port {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.Port
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom) GetPortRangeCustomService() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom_PortRangeCustomService {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return t.PortRangeCustomService
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom) GetProtocol() *cato_models.IPProtocol {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom{}
	}
	return &t.Protocol
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service struct {
	Custom   []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom   "json:\"custom\" graphql:\"custom\""
	Standard []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard "json:\"standard\" graphql:\"standard\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service) GetCustom() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Custom {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Custom
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service) GetStandard() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service_Standard {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service{}
	}
	return t.Standard
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions struct {
	Application                              PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application "json:\"application\" graphql:\"application\""
	ConnectionOriginWanFirewallRuleException cato_models.ConnectionOriginEnum                                                           "json:\"connectionOriginWanFirewallRuleException\" graphql:\"connectionOriginWanFirewallRuleException\""
	Country                                  []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Country  "json:\"country\" graphql:\"country\""
	Destination                              PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination "json:\"destination\" graphql:\"destination\""
	Device                                   []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Device   "json:\"device\" graphql:\"device\""
	DeviceOs                                 []cato_models.OperatingSystem                                                              "json:\"deviceOS\" graphql:\"deviceOS\""
	DirectionWanFirewallRuleException        cato_models.WanFirewallDirectionEnum                                                       "json:\"directionWanFirewallRuleException\" graphql:\"directionWanFirewallRuleException\""
	Name                                     string                                                                                     "json:\"name\" graphql:\"name\""
	Service                                  PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service     "json:\"service\" graphql:\"service\""
	Source                                   PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source      "json:\"source\" graphql:\"source\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions) GetApplication() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Application {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions) GetConnectionOriginWanFirewallRuleException() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return &t.ConnectionOriginWanFirewallRuleException
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions) GetCountry() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Country {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return t.Country
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions) GetDestination() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Destination {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions) GetDevice() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Device {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return t.Device
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions) GetDirectionWanFirewallRuleException() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return &t.DirectionWanFirewallRuleException
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return t.Name
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions) GetService() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Service {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions) GetSource() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions_Source {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions{}
	}
	return &t.Source
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule struct {
	Action           cato_models.WanFirewallActionEnum                                                 "json:\"action\" graphql:\"action\""
	Application      PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application   "json:\"application\" graphql:\"application\""
	ConnectionOrigin cato_models.ConnectionOriginEnum                                                  "json:\"connectionOrigin\" graphql:\"connectionOrigin\""
	Country          []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Country    "json:\"country\" graphql:\"country\""
	Description      string                                                                            "json:\"description\" graphql:\"description\""
	Destination      PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination   "json:\"destination\" graphql:\"destination\""
	Device           []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Device     "json:\"device\" graphql:\"device\""
	DeviceOs         []cato_models.OperatingSystem                                                     "json:\"deviceOS\" graphql:\"deviceOS\""
	Direction        cato_models.WanFirewallDirectionEnum                                              "json:\"direction\" graphql:\"direction\""
	Enabled          bool                                                                              "json:\"enabled\" graphql:\"enabled\""
	Exceptions       []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions "json:\"exceptions\" graphql:\"exceptions\""
	ID               string                                                                            "json:\"id\" graphql:\"id\""
	Index            int64                                                                             "json:\"index\" graphql:\"index\""
	Name             string                                                                            "json:\"name\" graphql:\"name\""
	Schedule         PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule      "json:\"schedule\" graphql:\"schedule\""
	Section          PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Section       "json:\"section\" graphql:\"section\""
	Service          PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service       "json:\"service\" graphql:\"service\""
	Source           PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source        "json:\"source\" graphql:\"source\""
	Tracking         PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking      "json:\"tracking\" graphql:\"tracking\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetAction() *cato_models.WanFirewallActionEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Action
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetApplication() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Application {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Application
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetConnectionOrigin() *cato_models.ConnectionOriginEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.ConnectionOrigin
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetCountry() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Country {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Country
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetDescription() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Description
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetDestination() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Destination {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Destination
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetDevice() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Device {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Device
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetDeviceOs() []cato_models.OperatingSystem {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return t.DeviceOs
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetDirection() *cato_models.WanFirewallDirectionEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Direction
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetEnabled() bool {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Enabled
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetExceptions() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Exceptions {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Exceptions
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetIndex() int64 {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Index
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return t.Name
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetSchedule() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Schedule {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Schedule
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetSection() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Section {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Section
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetService() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Service {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Service
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetSource() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Source {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Source
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule) GetTracking() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule_Tracking {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule{}
	}
	return &t.Tracking
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule struct {
	Audit      PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Audit "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                            "json:\"properties\" graphql:\"properties\""
	Rule       PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule  "json:\"rule\" graphql:\"rule\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule) GetAudit() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Audit {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule) GetRule() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule_Rule {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule{}
	}
	return &t.Rule
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule struct {
	Errors []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Errors "json:\"errors\" graphql:\"errors\""
	Rule   *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule     "json:\"rule,omitempty\" graphql:\"rule\""
	Status cato_models.PolicyMutationStatus                                    "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule) GetErrors() []*PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Errors {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule) GetRule() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule_Rule {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule{}
	}
	return t.Rule
}
func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule{}
	}
	return &t.Status
}

type PolicyWanFirewallUpdateRule_Policy_WanFirewall struct {
	UpdateRule PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule "json:\"updateRule\" graphql:\"updateRule\""
}

func (t *PolicyWanFirewallUpdateRule_Policy_WanFirewall) GetUpdateRule() *PolicyWanFirewallUpdateRule_Policy_WanFirewall_UpdateRule {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy_WanFirewall{}
	}
	return &t.UpdateRule
}

type PolicyWanFirewallUpdateRule_Policy struct {
	WanFirewall *PolicyWanFirewallUpdateRule_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallUpdateRule_Policy) GetWanFirewall() *PolicyWanFirewallUpdateRule_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule_Policy{}
	}
	return t.WanFirewall
}

type PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Audit struct {
	UpdatedBy   string "json:\"updatedBy\" graphql:\"updatedBy\""
	UpdatedTime string "json:\"updatedTime\" graphql:\"updatedTime\""
}

func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Audit) GetUpdatedBy() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Audit{}
	}
	return t.UpdatedBy
}
func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Audit) GetUpdatedTime() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Audit{}
	}
	return t.UpdatedTime
}

type PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Section struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Section) GetID() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Section{}
	}
	return t.ID
}
func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Section) GetName() string {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Section{}
	}
	return t.Name
}

type PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section struct {
	Audit      PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Audit   "json:\"audit\" graphql:\"audit\""
	Properties []cato_models.PolicyElementPropertiesEnum                                       "json:\"properties\" graphql:\"properties\""
	Section    PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Section "json:\"section\" graphql:\"section\""
}

func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section) GetAudit() *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Audit {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section{}
	}
	return &t.Audit
}
func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section) GetProperties() []cato_models.PolicyElementPropertiesEnum {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section{}
	}
	return t.Properties
}
func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section) GetSection() *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section_Section {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section{}
	}
	return &t.Section
}

type PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Errors struct {
	ErrorCode    *string "json:\"errorCode,omitempty\" graphql:\"errorCode\""
	ErrorMessage *string "json:\"errorMessage,omitempty\" graphql:\"errorMessage\""
}

func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Errors) GetErrorCode() *string {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Errors{}
	}
	return t.ErrorCode
}
func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Errors) GetErrorMessage() *string {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Errors{}
	}
	return t.ErrorMessage
}

type PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection struct {
	Errors  []*PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Errors "json:\"errors\" graphql:\"errors\""
	Section *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section  "json:\"section,omitempty\" graphql:\"section\""
	Status  cato_models.PolicyMutationStatus                                          "json:\"status\" graphql:\"status\""
}

func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection) GetErrors() []*PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Errors {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection{}
	}
	return t.Errors
}
func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection) GetSection() *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection_Section {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection{}
	}
	return t.Section
}
func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection) GetStatus() *cato_models.PolicyMutationStatus {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection{}
	}
	return &t.Status
}

type PolicyWanFirewallUpdateSection_Policy_WanFirewall struct {
	UpdateSection PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection "json:\"updateSection\" graphql:\"updateSection\""
}

func (t *PolicyWanFirewallUpdateSection_Policy_WanFirewall) GetUpdateSection() *PolicyWanFirewallUpdateSection_Policy_WanFirewall_UpdateSection {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy_WanFirewall{}
	}
	return &t.UpdateSection
}

type PolicyWanFirewallUpdateSection_Policy struct {
	WanFirewall *PolicyWanFirewallUpdateSection_Policy_WanFirewall "json:\"wanFirewall,omitempty\" graphql:\"wanFirewall\""
}

func (t *PolicyWanFirewallUpdateSection_Policy) GetWanFirewall() *PolicyWanFirewallUpdateSection_Policy_WanFirewall {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection_Policy{}
	}
	return t.WanFirewall
}

type Site_Site_CloudInterconnectPhysicalConnection_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Site_Site_CloudInterconnectPhysicalConnection_Site) GetID() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection_Site{}
	}
	return t.ID
}
func (t *Site_Site_CloudInterconnectPhysicalConnection_Site) GetName() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection_Site{}
	}
	return t.Name
}

type Site_Site_CloudInterconnectPhysicalConnection_PopLocation struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Site_Site_CloudInterconnectPhysicalConnection_PopLocation) GetID() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection_PopLocation{}
	}
	return t.ID
}
func (t *Site_Site_CloudInterconnectPhysicalConnection_PopLocation) GetName() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection_PopLocation{}
	}
	return t.Name
}

type Site_Site_CloudInterconnectPhysicalConnection struct {
	CVlan               *string                                                   "json:\"cVlan,omitempty\" graphql:\"cVlan\""
	DownstreamBwLimit   string                                                    "json:\"downstreamBwLimit\" graphql:\"downstreamBwLimit\""
	EncapsulationMethod cato_models.TaggingMethod                                 "json:\"encapsulationMethod\" graphql:\"encapsulationMethod\""
	HaRole              cato_models.HaRole                                        "json:\"haRole\" graphql:\"haRole\""
	ID                  string                                                    "json:\"id\" graphql:\"id\""
	PopLocation         Site_Site_CloudInterconnectPhysicalConnection_PopLocation "json:\"popLocation\" graphql:\"popLocation\""
	PrivateCatoIP       string                                                    "json:\"privateCatoIp\" graphql:\"privateCatoIp\""
	PrivateSiteIP       string                                                    "json:\"privateSiteIp\" graphql:\"privateSiteIp\""
	SVlan               *string                                                   "json:\"sVlan,omitempty\" graphql:\"sVlan\""
	ServiceProviderName string                                                    "json:\"serviceProviderName\" graphql:\"serviceProviderName\""
	Site                Site_Site_CloudInterconnectPhysicalConnection_Site        "json:\"site\" graphql:\"site\""
	Subnet              string                                                    "json:\"subnet\" graphql:\"subnet\""
	UpstreamBwLimit     string                                                    "json:\"upstreamBwLimit\" graphql:\"upstreamBwLimit\""
	Vlan                *string                                                   "json:\"vlan,omitempty\" graphql:\"vlan\""
}

func (t *Site_Site_CloudInterconnectPhysicalConnection) GetCVlan() *string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return t.CVlan
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetDownstreamBwLimit() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return t.DownstreamBwLimit
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetEncapsulationMethod() *cato_models.TaggingMethod {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return &t.EncapsulationMethod
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetHaRole() *cato_models.HaRole {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return &t.HaRole
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetID() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return t.ID
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetPopLocation() *Site_Site_CloudInterconnectPhysicalConnection_PopLocation {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return &t.PopLocation
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetPrivateCatoIP() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return t.PrivateCatoIP
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetPrivateSiteIP() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return t.PrivateSiteIP
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetSVlan() *string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return t.SVlan
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetServiceProviderName() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return t.ServiceProviderName
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetSite() *Site_Site_CloudInterconnectPhysicalConnection_Site {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return &t.Site
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetSubnet() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return t.Subnet
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetUpstreamBwLimit() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return t.UpstreamBwLimit
}
func (t *Site_Site_CloudInterconnectPhysicalConnection) GetVlan() *string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnection{}
	}
	return t.Vlan
}

type Site_Site_CloudInterconnectPhysicalConnectionID struct {
	ID string "json:\"id\" graphql:\"id\""
}

func (t *Site_Site_CloudInterconnectPhysicalConnectionID) GetID() string {
	if t == nil {
		t = &Site_Site_CloudInterconnectPhysicalConnectionID{}
	}
	return t.ID
}

type Site_Site_CloudInterconnectConnectionConnectivity struct {
	Success bool "json:\"success\" graphql:\"success\""
}

func (t *Site_Site_CloudInterconnectConnectionConnectivity) GetSuccess() bool {
	if t == nil {
		t = &Site_Site_CloudInterconnectConnectionConnectivity{}
	}
	return t.Success
}

type Site_Site_BgpPeer_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Site_Site_BgpPeer_Site) GetID() string {
	if t == nil {
		t = &Site_Site_BgpPeer_Site{}
	}
	return t.ID
}
func (t *Site_Site_BgpPeer_Site) GetName() string {
	if t == nil {
		t = &Site_Site_BgpPeer_Site{}
	}
	return t.Name
}

type Site_Site_BgpPeer_SummaryRoute_Community struct {
	From scalars.Asn16 "json:\"from\" graphql:\"from\""
	To   scalars.Asn16 "json:\"to\" graphql:\"to\""
}

func (t *Site_Site_BgpPeer_SummaryRoute_Community) GetFrom() *scalars.Asn16 {
	if t == nil {
		t = &Site_Site_BgpPeer_SummaryRoute_Community{}
	}
	return &t.From
}
func (t *Site_Site_BgpPeer_SummaryRoute_Community) GetTo() *scalars.Asn16 {
	if t == nil {
		t = &Site_Site_BgpPeer_SummaryRoute_Community{}
	}
	return &t.To
}

type Site_Site_BgpPeer_SummaryRoute struct {
	Community []*Site_Site_BgpPeer_SummaryRoute_Community "json:\"community\" graphql:\"community\""
	ID        string                                      "json:\"id\" graphql:\"id\""
	Route     string                                      "json:\"route\" graphql:\"route\""
}

func (t *Site_Site_BgpPeer_SummaryRoute) GetCommunity() []*Site_Site_BgpPeer_SummaryRoute_Community {
	if t == nil {
		t = &Site_Site_BgpPeer_SummaryRoute{}
	}
	return t.Community
}
func (t *Site_Site_BgpPeer_SummaryRoute) GetID() string {
	if t == nil {
		t = &Site_Site_BgpPeer_SummaryRoute{}
	}
	return t.ID
}
func (t *Site_Site_BgpPeer_SummaryRoute) GetRoute() string {
	if t == nil {
		t = &Site_Site_BgpPeer_SummaryRoute{}
	}
	return t.Route
}

type Site_Site_BgpPeer_BfdSettingsBgpPeer struct {
	Multiplier       int64 "json:\"multiplier\" graphql:\"multiplier\""
	ReceiveInterval  int64 "json:\"receiveInterval\" graphql:\"receiveInterval\""
	TransmitInterval int64 "json:\"transmitInterval\" graphql:\"transmitInterval\""
}

func (t *Site_Site_BgpPeer_BfdSettingsBgpPeer) GetMultiplier() int64 {
	if t == nil {
		t = &Site_Site_BgpPeer_BfdSettingsBgpPeer{}
	}
	return t.Multiplier
}
func (t *Site_Site_BgpPeer_BfdSettingsBgpPeer) GetReceiveInterval() int64 {
	if t == nil {
		t = &Site_Site_BgpPeer_BfdSettingsBgpPeer{}
	}
	return t.ReceiveInterval
}
func (t *Site_Site_BgpPeer_BfdSettingsBgpPeer) GetTransmitInterval() int64 {
	if t == nil {
		t = &Site_Site_BgpPeer_BfdSettingsBgpPeer{}
	}
	return t.TransmitInterval
}

type Site_Site_BgpPeer_TrackingBgpPeer struct {
	AlertFrequency cato_models.PolicyRuleTrackingFrequencyEnum "json:\"alertFrequency\" graphql:\"alertFrequency\""
	Enabled        bool                                        "json:\"enabled\" graphql:\"enabled\""
	ID             string                                      "json:\"id\" graphql:\"id\""
	SubscriptionID *string                                     "json:\"subscriptionId,omitempty\" graphql:\"subscriptionId\""
}

func (t *Site_Site_BgpPeer_TrackingBgpPeer) GetAlertFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &Site_Site_BgpPeer_TrackingBgpPeer{}
	}
	return &t.AlertFrequency
}
func (t *Site_Site_BgpPeer_TrackingBgpPeer) GetEnabled() bool {
	if t == nil {
		t = &Site_Site_BgpPeer_TrackingBgpPeer{}
	}
	return t.Enabled
}
func (t *Site_Site_BgpPeer_TrackingBgpPeer) GetID() string {
	if t == nil {
		t = &Site_Site_BgpPeer_TrackingBgpPeer{}
	}
	return t.ID
}
func (t *Site_Site_BgpPeer_TrackingBgpPeer) GetSubscriptionID() *string {
	if t == nil {
		t = &Site_Site_BgpPeer_TrackingBgpPeer{}
	}
	return t.SubscriptionID
}

type Site_Site_BgpPeer struct {
	AdvertiseAllRoutes     bool                                  "json:\"advertiseAllRoutes\" graphql:\"advertiseAllRoutes\""
	AdvertiseDefaultRoute  bool                                  "json:\"advertiseDefaultRoute\" graphql:\"advertiseDefaultRoute\""
	AdvertiseSummaryRoutes bool                                  "json:\"advertiseSummaryRoutes\" graphql:\"advertiseSummaryRoutes\""
	BfdEnabled             bool                                  "json:\"bfdEnabled\" graphql:\"bfdEnabled\""
	BfdSettingsBgpPeer     *Site_Site_BgpPeer_BfdSettingsBgpPeer "json:\"bfdSettingsBgpPeer,omitempty\" graphql:\"bfdSettingsBgpPeer\""
	CatoAsn                scalars.Asn16                         "json:\"catoAsn\" graphql:\"catoAsn\""
	CatoIP                 string                                "json:\"catoIp\" graphql:\"catoIp\""
	DefaultAction          cato_models.BgpDefaultAction          "json:\"defaultAction\" graphql:\"defaultAction\""
	HoldTime               int64                                 "json:\"holdTime\" graphql:\"holdTime\""
	ID                     string                                "json:\"id\" graphql:\"id\""
	KeepaliveInterval      int64                                 "json:\"keepaliveInterval\" graphql:\"keepaliveInterval\""
	Md5AuthKey             *string                               "json:\"md5AuthKey,omitempty\" graphql:\"md5AuthKey\""
	Metric                 int64                                 "json:\"metric\" graphql:\"metric\""
	Name                   string                                "json:\"name\" graphql:\"name\""
	PeerAsn                scalars.Asn32                         "json:\"peerAsn\" graphql:\"peerAsn\""
	PeerIP                 string                                "json:\"peerIp\" graphql:\"peerIp\""
	PerformNat             bool                                  "json:\"performNat\" graphql:\"performNat\""
	Site                   Site_Site_BgpPeer_Site                "json:\"site\" graphql:\"site\""
	SummaryRoute           []*Site_Site_BgpPeer_SummaryRoute     "json:\"summaryRoute\" graphql:\"summaryRoute\""
	TrackingBgpPeer        *Site_Site_BgpPeer_TrackingBgpPeer    "json:\"trackingBgpPeer,omitempty\" graphql:\"trackingBgpPeer\""
}

func (t *Site_Site_BgpPeer) GetAdvertiseAllRoutes() bool {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.AdvertiseAllRoutes
}
func (t *Site_Site_BgpPeer) GetAdvertiseDefaultRoute() bool {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.AdvertiseDefaultRoute
}
func (t *Site_Site_BgpPeer) GetAdvertiseSummaryRoutes() bool {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.AdvertiseSummaryRoutes
}
func (t *Site_Site_BgpPeer) GetBfdEnabled() bool {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.BfdEnabled
}
func (t *Site_Site_BgpPeer) GetBfdSettingsBgpPeer() *Site_Site_BgpPeer_BfdSettingsBgpPeer {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.BfdSettingsBgpPeer
}
func (t *Site_Site_BgpPeer) GetCatoAsn() *scalars.Asn16 {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return &t.CatoAsn
}
func (t *Site_Site_BgpPeer) GetCatoIP() string {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.CatoIP
}
func (t *Site_Site_BgpPeer) GetDefaultAction() *cato_models.BgpDefaultAction {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return &t.DefaultAction
}
func (t *Site_Site_BgpPeer) GetHoldTime() int64 {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.HoldTime
}
func (t *Site_Site_BgpPeer) GetID() string {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.ID
}
func (t *Site_Site_BgpPeer) GetKeepaliveInterval() int64 {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.KeepaliveInterval
}
func (t *Site_Site_BgpPeer) GetMd5AuthKey() *string {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.Md5AuthKey
}
func (t *Site_Site_BgpPeer) GetMetric() int64 {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.Metric
}
func (t *Site_Site_BgpPeer) GetName() string {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.Name
}
func (t *Site_Site_BgpPeer) GetPeerAsn() *scalars.Asn32 {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return &t.PeerAsn
}
func (t *Site_Site_BgpPeer) GetPeerIP() string {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.PeerIP
}
func (t *Site_Site_BgpPeer) GetPerformNat() bool {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.PerformNat
}
func (t *Site_Site_BgpPeer) GetSite() *Site_Site_BgpPeer_Site {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return &t.Site
}
func (t *Site_Site_BgpPeer) GetSummaryRoute() []*Site_Site_BgpPeer_SummaryRoute {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.SummaryRoute
}
func (t *Site_Site_BgpPeer) GetTrackingBgpPeer() *Site_Site_BgpPeer_TrackingBgpPeer {
	if t == nil {
		t = &Site_Site_BgpPeer{}
	}
	return t.TrackingBgpPeer
}

type Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Site struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Site) GetID() string {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Site{}
	}
	return t.ID
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Site) GetName() string {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Site{}
	}
	return t.Name
}

type Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute_Community struct {
	From scalars.Asn16 "json:\"from\" graphql:\"from\""
	To   scalars.Asn16 "json:\"to\" graphql:\"to\""
}

func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute_Community) GetFrom() *scalars.Asn16 {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute_Community{}
	}
	return &t.From
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute_Community) GetTo() *scalars.Asn16 {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute_Community{}
	}
	return &t.To
}

type Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute struct {
	Community []*Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute_Community "json:\"community\" graphql:\"community\""
	ID        string                                                                    "json:\"id\" graphql:\"id\""
	Route     string                                                                    "json:\"route\" graphql:\"route\""
}

func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute) GetCommunity() []*Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute_Community {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute{}
	}
	return t.Community
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute) GetID() string {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute{}
	}
	return t.ID
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute) GetRoute() string {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute{}
	}
	return t.Route
}

type Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_BfdSettings struct {
	Multiplier       int64 "json:\"multiplier\" graphql:\"multiplier\""
	ReceiveInterval  int64 "json:\"receiveInterval\" graphql:\"receiveInterval\""
	TransmitInterval int64 "json:\"transmitInterval\" graphql:\"transmitInterval\""
}

func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_BfdSettings) GetMultiplier() int64 {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_BfdSettings{}
	}
	return t.Multiplier
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_BfdSettings) GetReceiveInterval() int64 {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_BfdSettings{}
	}
	return t.ReceiveInterval
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_BfdSettings) GetTransmitInterval() int64 {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_BfdSettings{}
	}
	return t.TransmitInterval
}

type Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Tracking struct {
	AlertFrequency cato_models.PolicyRuleTrackingFrequencyEnum "json:\"alertFrequency\" graphql:\"alertFrequency\""
	Enabled        bool                                        "json:\"enabled\" graphql:\"enabled\""
	ID             string                                      "json:\"id\" graphql:\"id\""
	SubscriptionID *string                                     "json:\"subscriptionId,omitempty\" graphql:\"subscriptionId\""
}

func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Tracking) GetAlertFrequency() *cato_models.PolicyRuleTrackingFrequencyEnum {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Tracking{}
	}
	return &t.AlertFrequency
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Tracking) GetEnabled() bool {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Tracking{}
	}
	return t.Enabled
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Tracking) GetID() string {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Tracking{}
	}
	return t.ID
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Tracking) GetSubscriptionID() *string {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Tracking{}
	}
	return t.SubscriptionID
}

type Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload struct {
	AdvertiseAllRoutes     bool                                                            "json:\"advertiseAllRoutes\" graphql:\"advertiseAllRoutes\""
	AdvertiseDefaultRoute  bool                                                            "json:\"advertiseDefaultRoute\" graphql:\"advertiseDefaultRoute\""
	AdvertiseSummaryRoutes bool                                                            "json:\"advertiseSummaryRoutes\" graphql:\"advertiseSummaryRoutes\""
	BfdEnabled             bool                                                            "json:\"bfdEnabled\" graphql:\"bfdEnabled\""
	BfdSettings            *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_BfdSettings    "json:\"bfdSettings,omitempty\" graphql:\"bfdSettings\""
	CatoAsn                scalars.Asn16                                                   "json:\"catoAsn\" graphql:\"catoAsn\""
	CatoIP                 string                                                          "json:\"catoIp\" graphql:\"catoIp\""
	DefaultAction          cato_models.BgpDefaultAction                                    "json:\"defaultAction\" graphql:\"defaultAction\""
	HoldTime               int64                                                           "json:\"holdTime\" graphql:\"holdTime\""
	ID                     string                                                          "json:\"id\" graphql:\"id\""
	KeepaliveInterval      int64                                                           "json:\"keepaliveInterval\" graphql:\"keepaliveInterval\""
	Md5AuthKey             *string                                                         "json:\"md5AuthKey,omitempty\" graphql:\"md5AuthKey\""
	Metric                 int64                                                           "json:\"metric\" graphql:\"metric\""
	Name                   string                                                          "json:\"name\" graphql:\"name\""
	PeerAsn                scalars.Asn32                                                   "json:\"peerAsn\" graphql:\"peerAsn\""
	PeerIP                 string                                                          "json:\"peerIp\" graphql:\"peerIp\""
	PerformNat             bool                                                            "json:\"performNat\" graphql:\"performNat\""
	Site                   Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Site            "json:\"site\" graphql:\"site\""
	SummaryRoute           []*Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute "json:\"summaryRoute\" graphql:\"summaryRoute\""
	Tracking               *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Tracking       "json:\"tracking,omitempty\" graphql:\"tracking\""
}

func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetAdvertiseAllRoutes() bool {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.AdvertiseAllRoutes
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetAdvertiseDefaultRoute() bool {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.AdvertiseDefaultRoute
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetAdvertiseSummaryRoutes() bool {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.AdvertiseSummaryRoutes
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetBfdEnabled() bool {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.BfdEnabled
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetBfdSettings() *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_BfdSettings {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.BfdSettings
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetCatoAsn() *scalars.Asn16 {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return &t.CatoAsn
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetCatoIP() string {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.CatoIP
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetDefaultAction() *cato_models.BgpDefaultAction {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return &t.DefaultAction
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetHoldTime() int64 {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.HoldTime
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetID() string {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.ID
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetKeepaliveInterval() int64 {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.KeepaliveInterval
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetMd5AuthKey() *string {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.Md5AuthKey
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetMetric() int64 {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.Metric
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetName() string {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.Name
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetPeerAsn() *scalars.Asn32 {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return &t.PeerAsn
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetPeerIP() string {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.PeerIP
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetPerformNat() bool {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.PerformNat
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetSite() *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Site {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return &t.Site
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetSummaryRoute() []*Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_SummaryRoute {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.SummaryRoute
}
func (t *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload) GetTracking() *Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload_Tracking {
	if t == nil {
		t = &Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload{}
	}
	return t.Tracking
}

type Site_Site_BgpPeerList struct {
	BgpPeerBgpPeerListPayload []*Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload "json:\"bgpPeerBgpPeerListPayload\" graphql:\"bgpPeerBgpPeerListPayload\""
	Total                     int64                                              "json:\"total\" graphql:\"total\""
}

func (t *Site_Site_BgpPeerList) GetBgpPeerBgpPeerListPayload() []*Site_Site_BgpPeerList_BgpPeerBgpPeerListPayload {
	if t == nil {
		t = &Site_Site_BgpPeerList{}
	}
	return t.BgpPeerBgpPeerListPayload
}
func (t *Site_Site_BgpPeerList) GetTotal() int64 {
	if t == nil {
		t = &Site_Site_BgpPeerList{}
	}
	return t.Total
}

type Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer_Community struct {
	From scalars.Asn16 "json:\"from\" graphql:\"from\""
	To   scalars.Asn16 "json:\"to\" graphql:\"to\""
}

func (t *Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer_Community) GetFrom() *scalars.Asn16 {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer_Community{}
	}
	return &t.From
}
func (t *Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer_Community) GetTo() *scalars.Asn16 {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer_Community{}
	}
	return &t.To
}

type Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer struct {
	Community          []*Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer_Community "json:\"community\" graphql:\"community\""
	LastPublishAttempt *string                                                            "json:\"lastPublishAttempt,omitempty\" graphql:\"lastPublishAttempt\""
	Rule               *string                                                            "json:\"rule,omitempty\" graphql:\"rule\""
	Subnet             *string                                                            "json:\"subnet,omitempty\" graphql:\"subnet\""
	Type               *string                                                            "json:\"type,omitempty\" graphql:\"type\""
}

func (t *Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer) GetCommunity() []*Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer_Community {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer{}
	}
	return t.Community
}
func (t *Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer) GetLastPublishAttempt() *string {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer{}
	}
	return t.LastPublishAttempt
}
func (t *Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer) GetRule() *string {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer{}
	}
	return t.Rule
}
func (t *Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer) GetSubnet() *string {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer{}
	}
	return t.Subnet
}
func (t *Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer) GetType() *string {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer{}
	}
	return t.Type
}

type Site_Site_SiteBgpStatus_Status struct {
	BfdSession             *string                                                  "json:\"bfdSession,omitempty\" graphql:\"bfdSession\""
	BgpSession             string                                                   "json:\"bgpSession\" graphql:\"bgpSession\""
	RejectedRoutesFromPeer []*Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer "json:\"rejectedRoutesFromPeer\" graphql:\"rejectedRoutesFromPeer\""
	RemoteIP               string                                                   "json:\"remoteIp\" graphql:\"remoteIp\""
	RoutesFromPeer         []string                                                 "json:\"routesFromPeer\" graphql:\"routesFromPeer\""
	RoutesToPeer           []string                                                 "json:\"routesToPeer\" graphql:\"routesToPeer\""
}

func (t *Site_Site_SiteBgpStatus_Status) GetBfdSession() *string {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status{}
	}
	return t.BfdSession
}
func (t *Site_Site_SiteBgpStatus_Status) GetBgpSession() string {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status{}
	}
	return t.BgpSession
}
func (t *Site_Site_SiteBgpStatus_Status) GetRejectedRoutesFromPeer() []*Site_Site_SiteBgpStatus_Status_RejectedRoutesFromPeer {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status{}
	}
	return t.RejectedRoutesFromPeer
}
func (t *Site_Site_SiteBgpStatus_Status) GetRemoteIP() string {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status{}
	}
	return t.RemoteIP
}
func (t *Site_Site_SiteBgpStatus_Status) GetRoutesFromPeer() []string {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status{}
	}
	return t.RoutesFromPeer
}
func (t *Site_Site_SiteBgpStatus_Status) GetRoutesToPeer() []string {
	if t == nil {
		t = &Site_Site_SiteBgpStatus_Status{}
	}
	return t.RoutesToPeer
}

type Site_Site_SiteBgpStatus struct {
	RawStatus []string                          "json:\"rawStatus\" graphql:\"rawStatus\""
	Status    []*Site_Site_SiteBgpStatus_Status "json:\"status\" graphql:\"status\""
}

func (t *Site_Site_SiteBgpStatus) GetRawStatus() []string {
	if t == nil {
		t = &Site_Site_SiteBgpStatus{}
	}
	return t.RawStatus
}
func (t *Site_Site_SiteBgpStatus) GetStatus() []*Site_Site_SiteBgpStatus_Status {
	if t == nil {
		t = &Site_Site_SiteBgpStatus{}
	}
	return t.Status
}

type Site_Site struct {
	BgpPeer                                 *Site_Site_BgpPeer                                 "json:\"bgpPeer,omitempty\" graphql:\"bgpPeer\""
	BgpPeerList                             *Site_Site_BgpPeerList                             "json:\"bgpPeerList,omitempty\" graphql:\"bgpPeerList\""
	CloudInterconnectConnectionConnectivity *Site_Site_CloudInterconnectConnectionConnectivity "json:\"cloudInterconnectConnectionConnectivity,omitempty\" graphql:\"cloudInterconnectConnectionConnectivity\""
	CloudInterconnectPhysicalConnection     *Site_Site_CloudInterconnectPhysicalConnection     "json:\"cloudInterconnectPhysicalConnection,omitempty\" graphql:\"cloudInterconnectPhysicalConnection\""
	CloudInterconnectPhysicalConnectionID   *Site_Site_CloudInterconnectPhysicalConnectionID   "json:\"cloudInterconnectPhysicalConnectionId,omitempty\" graphql:\"cloudInterconnectPhysicalConnectionId\""
	SiteBgpStatus                           *Site_Site_SiteBgpStatus                           "json:\"siteBgpStatus,omitempty\" graphql:\"siteBgpStatus\""
}

func (t *Site_Site) GetBgpPeer() *Site_Site_BgpPeer {
	if t == nil {
		t = &Site_Site{}
	}
	return t.BgpPeer
}
func (t *Site_Site) GetBgpPeerList() *Site_Site_BgpPeerList {
	if t == nil {
		t = &Site_Site{}
	}
	return t.BgpPeerList
}
func (t *Site_Site) GetCloudInterconnectConnectionConnectivity() *Site_Site_CloudInterconnectConnectionConnectivity {
	if t == nil {
		t = &Site_Site{}
	}
	return t.CloudInterconnectConnectionConnectivity
}
func (t *Site_Site) GetCloudInterconnectPhysicalConnection() *Site_Site_CloudInterconnectPhysicalConnection {
	if t == nil {
		t = &Site_Site{}
	}
	return t.CloudInterconnectPhysicalConnection
}
func (t *Site_Site) GetCloudInterconnectPhysicalConnectionID() *Site_Site_CloudInterconnectPhysicalConnectionID {
	if t == nil {
		t = &Site_Site{}
	}
	return t.CloudInterconnectPhysicalConnectionID
}
func (t *Site_Site) GetSiteBgpStatus() *Site_Site_SiteBgpStatus {
	if t == nil {
		t = &Site_Site{}
	}
	return t.SiteBgpStatus
}

type SiteAddIpsecIkeV2Site_Site_AddIpsecIkeV2Site struct {
	SiteID string "json:\"siteId\" graphql:\"siteId\""
}

func (t *SiteAddIpsecIkeV2Site_Site_AddIpsecIkeV2Site) GetSiteID() string {
	if t == nil {
		t = &SiteAddIpsecIkeV2Site_Site_AddIpsecIkeV2Site{}
	}
	return t.SiteID
}

type SiteAddIpsecIkeV2Site_Site struct {
	AddIpsecIkeV2Site *SiteAddIpsecIkeV2Site_Site_AddIpsecIkeV2Site "json:\"addIpsecIkeV2Site,omitempty\" graphql:\"addIpsecIkeV2Site\""
}

func (t *SiteAddIpsecIkeV2Site_Site) GetAddIpsecIkeV2Site() *SiteAddIpsecIkeV2Site_Site_AddIpsecIkeV2Site {
	if t == nil {
		t = &SiteAddIpsecIkeV2Site_Site{}
	}
	return t.AddIpsecIkeV2Site
}

type SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels struct {
	LocalID                                *string                         "json:\"localId,omitempty\" graphql:\"localId\""
	TunnelIDAddIpsecIkeV2SiteTunnelPayload *cato_models.IPSecV2InterfaceID "json:\"tunnelIdAddIpsecIkeV2SiteTunnelPayload,omitempty\" graphql:\"tunnelIdAddIpsecIkeV2SiteTunnelPayload\""
}

func (t *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels) GetLocalID() *string {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels{}
	}
	return t.LocalID
}
func (t *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels) GetTunnelIDAddIpsecIkeV2SiteTunnelPayload() *cato_models.IPSecV2InterfaceID {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels{}
	}
	return t.TunnelIDAddIpsecIkeV2SiteTunnelPayload
}

type SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload struct {
	Fqdn    *string                                                                                                      "json:\"fqdn,omitempty\" graphql:\"fqdn\""
	Tunnels []*SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels "json:\"tunnels\" graphql:\"tunnels\""
}

func (t *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload) GetFqdn() *string {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload{}
	}
	return t.Fqdn
}
func (t *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload) GetTunnels() []*SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload{}
	}
	return t.Tunnels
}

type SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels struct {
	LocalID                                *string                         "json:\"localId,omitempty\" graphql:\"localId\""
	TunnelIDAddIpsecIkeV2SiteTunnelPayload *cato_models.IPSecV2InterfaceID "json:\"tunnelIdAddIpsecIkeV2SiteTunnelPayload,omitempty\" graphql:\"tunnelIdAddIpsecIkeV2SiteTunnelPayload\""
}

func (t *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels) GetLocalID() *string {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels{}
	}
	return t.LocalID
}
func (t *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels) GetTunnelIDAddIpsecIkeV2SiteTunnelPayload() *cato_models.IPSecV2InterfaceID {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels{}
	}
	return t.TunnelIDAddIpsecIkeV2SiteTunnelPayload
}

type SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload struct {
	Fqdn    *string                                                                                                        "json:\"fqdn,omitempty\" graphql:\"fqdn\""
	Tunnels []*SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels "json:\"tunnels\" graphql:\"tunnels\""
}

func (t *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload) GetFqdn() *string {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload{}
	}
	return t.Fqdn
}
func (t *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload) GetTunnels() []*SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload_Tunnels {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload{}
	}
	return t.Tunnels
}

type SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels struct {
	PrimaryAddIpsecIkeV2SiteTunnelsPayload   *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload   "json:\"primaryAddIpsecIkeV2SiteTunnelsPayload,omitempty\" graphql:\"primaryAddIpsecIkeV2SiteTunnelsPayload\""
	SecondaryAddIpsecIkeV2SiteTunnelsPayload *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload "json:\"secondaryAddIpsecIkeV2SiteTunnelsPayload,omitempty\" graphql:\"secondaryAddIpsecIkeV2SiteTunnelsPayload\""
	SiteID                                   string                                                                                               "json:\"siteId\" graphql:\"siteId\""
}

func (t *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels) GetPrimaryAddIpsecIkeV2SiteTunnelsPayload() *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_PrimaryAddIpsecIkeV2SiteTunnelsPayload {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels{}
	}
	return t.PrimaryAddIpsecIkeV2SiteTunnelsPayload
}
func (t *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels) GetSecondaryAddIpsecIkeV2SiteTunnelsPayload() *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels_SecondaryAddIpsecIkeV2SiteTunnelsPayload {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels{}
	}
	return t.SecondaryAddIpsecIkeV2SiteTunnelsPayload
}
func (t *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels) GetSiteID() string {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels{}
	}
	return t.SiteID
}

type SiteAddIpsecIkeV2SiteTunnels_Site struct {
	AddIpsecIkeV2SiteTunnels *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels "json:\"addIpsecIkeV2SiteTunnels,omitempty\" graphql:\"addIpsecIkeV2SiteTunnels\""
}

func (t *SiteAddIpsecIkeV2SiteTunnels_Site) GetAddIpsecIkeV2SiteTunnels() *SiteAddIpsecIkeV2SiteTunnels_Site_AddIpsecIkeV2SiteTunnels {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels_Site{}
	}
	return t.AddIpsecIkeV2SiteTunnels
}

type SiteAddNetworkRange_Site_AddNetworkRange struct {
	NetworkRangeID string "json:\"networkRangeId\" graphql:\"networkRangeId\""
}

func (t *SiteAddNetworkRange_Site_AddNetworkRange) GetNetworkRangeID() string {
	if t == nil {
		t = &SiteAddNetworkRange_Site_AddNetworkRange{}
	}
	return t.NetworkRangeID
}

type SiteAddNetworkRange_Site struct {
	AddNetworkRange *SiteAddNetworkRange_Site_AddNetworkRange "json:\"addNetworkRange,omitempty\" graphql:\"addNetworkRange\""
}

func (t *SiteAddNetworkRange_Site) GetAddNetworkRange() *SiteAddNetworkRange_Site_AddNetworkRange {
	if t == nil {
		t = &SiteAddNetworkRange_Site{}
	}
	return t.AddNetworkRange
}

type SiteAddSocketSite_Site_AddSocketSite struct {
	SiteID string "json:\"siteId\" graphql:\"siteId\""
}

func (t *SiteAddSocketSite_Site_AddSocketSite) GetSiteID() string {
	if t == nil {
		t = &SiteAddSocketSite_Site_AddSocketSite{}
	}
	return t.SiteID
}

type SiteAddSocketSite_Site struct {
	AddSocketSite *SiteAddSocketSite_Site_AddSocketSite "json:\"addSocketSite,omitempty\" graphql:\"addSocketSite\""
}

func (t *SiteAddSocketSite_Site) GetAddSocketSite() *SiteAddSocketSite_Site_AddSocketSite {
	if t == nil {
		t = &SiteAddSocketSite_Site{}
	}
	return t.AddSocketSite
}

type SiteAddStaticHost_Site_AddStaticHost struct {
	HostID string "json:\"hostId\" graphql:\"hostId\""
}

func (t *SiteAddStaticHost_Site_AddStaticHost) GetHostID() string {
	if t == nil {
		t = &SiteAddStaticHost_Site_AddStaticHost{}
	}
	return t.HostID
}

type SiteAddStaticHost_Site struct {
	AddStaticHost *SiteAddStaticHost_Site_AddStaticHost "json:\"addStaticHost,omitempty\" graphql:\"addStaticHost\""
}

func (t *SiteAddStaticHost_Site) GetAddStaticHost() *SiteAddStaticHost_Site_AddStaticHost {
	if t == nil {
		t = &SiteAddStaticHost_Site{}
	}
	return t.AddStaticHost
}

type SiteRemoveNetworkRange_Site_RemoveNetworkRange struct {
	NetworkRangeID string "json:\"networkRangeId\" graphql:\"networkRangeId\""
}

func (t *SiteRemoveNetworkRange_Site_RemoveNetworkRange) GetNetworkRangeID() string {
	if t == nil {
		t = &SiteRemoveNetworkRange_Site_RemoveNetworkRange{}
	}
	return t.NetworkRangeID
}

type SiteRemoveNetworkRange_Site struct {
	RemoveNetworkRange *SiteRemoveNetworkRange_Site_RemoveNetworkRange "json:\"removeNetworkRange,omitempty\" graphql:\"removeNetworkRange\""
}

func (t *SiteRemoveNetworkRange_Site) GetRemoveNetworkRange() *SiteRemoveNetworkRange_Site_RemoveNetworkRange {
	if t == nil {
		t = &SiteRemoveNetworkRange_Site{}
	}
	return t.RemoveNetworkRange
}

type SiteRemoveSite_Site_RemoveSite struct {
	SiteID string "json:\"siteId\" graphql:\"siteId\""
}

func (t *SiteRemoveSite_Site_RemoveSite) GetSiteID() string {
	if t == nil {
		t = &SiteRemoveSite_Site_RemoveSite{}
	}
	return t.SiteID
}

type SiteRemoveSite_Site struct {
	RemoveSite *SiteRemoveSite_Site_RemoveSite "json:\"removeSite,omitempty\" graphql:\"removeSite\""
}

func (t *SiteRemoveSite_Site) GetRemoveSite() *SiteRemoveSite_Site_RemoveSite {
	if t == nil {
		t = &SiteRemoveSite_Site{}
	}
	return t.RemoveSite
}

type SiteRemoveStaticHost_Site_RemoveStaticHost struct {
	HostID string "json:\"hostId\" graphql:\"hostId\""
}

func (t *SiteRemoveStaticHost_Site_RemoveStaticHost) GetHostID() string {
	if t == nil {
		t = &SiteRemoveStaticHost_Site_RemoveStaticHost{}
	}
	return t.HostID
}

type SiteRemoveStaticHost_Site struct {
	RemoveStaticHost *SiteRemoveStaticHost_Site_RemoveStaticHost "json:\"removeStaticHost,omitempty\" graphql:\"removeStaticHost\""
}

func (t *SiteRemoveStaticHost_Site) GetRemoveStaticHost() *SiteRemoveStaticHost_Site_RemoveStaticHost {
	if t == nil {
		t = &SiteRemoveStaticHost_Site{}
	}
	return t.RemoveStaticHost
}

type SiteUpdateHa_Site_UpdateHa struct {
	SiteID string "json:\"siteId\" graphql:\"siteId\""
}

func (t *SiteUpdateHa_Site_UpdateHa) GetSiteID() string {
	if t == nil {
		t = &SiteUpdateHa_Site_UpdateHa{}
	}
	return t.SiteID
}

type SiteUpdateHa_Site struct {
	UpdateHa *SiteUpdateHa_Site_UpdateHa "json:\"updateHa,omitempty\" graphql:\"updateHa\""
}

func (t *SiteUpdateHa_Site) GetUpdateHa() *SiteUpdateHa_Site_UpdateHa {
	if t == nil {
		t = &SiteUpdateHa_Site{}
	}
	return t.UpdateHa
}

type SiteUpdateIpsecIkeV2SiteGeneralDetails_Site_UpdateIpsecIkeV2SiteGeneralDetails struct {
	LocalID *string "json:\"localId,omitempty\" graphql:\"localId\""
	SiteID  string  "json:\"siteId\" graphql:\"siteId\""
}

func (t *SiteUpdateIpsecIkeV2SiteGeneralDetails_Site_UpdateIpsecIkeV2SiteGeneralDetails) GetLocalID() *string {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteGeneralDetails_Site_UpdateIpsecIkeV2SiteGeneralDetails{}
	}
	return t.LocalID
}
func (t *SiteUpdateIpsecIkeV2SiteGeneralDetails_Site_UpdateIpsecIkeV2SiteGeneralDetails) GetSiteID() string {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteGeneralDetails_Site_UpdateIpsecIkeV2SiteGeneralDetails{}
	}
	return t.SiteID
}

type SiteUpdateIpsecIkeV2SiteGeneralDetails_Site struct {
	UpdateIpsecIkeV2SiteGeneralDetails *SiteUpdateIpsecIkeV2SiteGeneralDetails_Site_UpdateIpsecIkeV2SiteGeneralDetails "json:\"updateIpsecIkeV2SiteGeneralDetails,omitempty\" graphql:\"updateIpsecIkeV2SiteGeneralDetails\""
}

func (t *SiteUpdateIpsecIkeV2SiteGeneralDetails_Site) GetUpdateIpsecIkeV2SiteGeneralDetails() *SiteUpdateIpsecIkeV2SiteGeneralDetails_Site_UpdateIpsecIkeV2SiteGeneralDetails {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteGeneralDetails_Site{}
	}
	return t.UpdateIpsecIkeV2SiteGeneralDetails
}

type SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels struct {
	LocalID                                   *string                         "json:\"localId,omitempty\" graphql:\"localId\""
	TunnelIDUpdateIpsecIkeV2SiteTunnelPayload *cato_models.IPSecV2InterfaceID "json:\"tunnelIdUpdateIpsecIkeV2SiteTunnelPayload,omitempty\" graphql:\"tunnelIdUpdateIpsecIkeV2SiteTunnelPayload\""
}

func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels) GetLocalID() *string {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels{}
	}
	return t.LocalID
}
func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels) GetTunnelIDUpdateIpsecIkeV2SiteTunnelPayload() *cato_models.IPSecV2InterfaceID {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels{}
	}
	return t.TunnelIDUpdateIpsecIkeV2SiteTunnelPayload
}

type SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload struct {
	Fqdn    *string                                                                                                               "json:\"fqdn,omitempty\" graphql:\"fqdn\""
	Tunnels []*SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels "json:\"tunnels\" graphql:\"tunnels\""
}

func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload) GetFqdn() *string {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload{}
	}
	return t.Fqdn
}
func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload) GetTunnels() []*SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload{}
	}
	return t.Tunnels
}

type SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels struct {
	LocalID                                   *string                         "json:\"localId,omitempty\" graphql:\"localId\""
	TunnelIDUpdateIpsecIkeV2SiteTunnelPayload *cato_models.IPSecV2InterfaceID "json:\"tunnelIdUpdateIpsecIkeV2SiteTunnelPayload,omitempty\" graphql:\"tunnelIdUpdateIpsecIkeV2SiteTunnelPayload\""
}

func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels) GetLocalID() *string {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels{}
	}
	return t.LocalID
}
func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels) GetTunnelIDUpdateIpsecIkeV2SiteTunnelPayload() *cato_models.IPSecV2InterfaceID {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels{}
	}
	return t.TunnelIDUpdateIpsecIkeV2SiteTunnelPayload
}

type SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload struct {
	Fqdn    *string                                                                                                                 "json:\"fqdn,omitempty\" graphql:\"fqdn\""
	Tunnels []*SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels "json:\"tunnels\" graphql:\"tunnels\""
}

func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload) GetFqdn() *string {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload{}
	}
	return t.Fqdn
}
func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload) GetTunnels() []*SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload_Tunnels {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload{}
	}
	return t.Tunnels
}

type SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels struct {
	PrimaryUpdateIpsecIkeV2SiteTunnelsPayload   *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload   "json:\"primaryUpdateIpsecIkeV2SiteTunnelsPayload,omitempty\" graphql:\"primaryUpdateIpsecIkeV2SiteTunnelsPayload\""
	SecondaryUpdateIpsecIkeV2SiteTunnelsPayload *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload "json:\"secondaryUpdateIpsecIkeV2SiteTunnelsPayload,omitempty\" graphql:\"secondaryUpdateIpsecIkeV2SiteTunnelsPayload\""
	SiteID                                      string                                                                                                        "json:\"siteId\" graphql:\"siteId\""
}

func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels) GetPrimaryUpdateIpsecIkeV2SiteTunnelsPayload() *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_PrimaryUpdateIpsecIkeV2SiteTunnelsPayload {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels{}
	}
	return t.PrimaryUpdateIpsecIkeV2SiteTunnelsPayload
}
func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels) GetSecondaryUpdateIpsecIkeV2SiteTunnelsPayload() *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels_SecondaryUpdateIpsecIkeV2SiteTunnelsPayload {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels{}
	}
	return t.SecondaryUpdateIpsecIkeV2SiteTunnelsPayload
}
func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels) GetSiteID() string {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels{}
	}
	return t.SiteID
}

type SiteUpdateIpsecIkeV2SiteTunnels_Site struct {
	UpdateIpsecIkeV2SiteTunnels *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels "json:\"updateIpsecIkeV2SiteTunnels,omitempty\" graphql:\"updateIpsecIkeV2SiteTunnels\""
}

func (t *SiteUpdateIpsecIkeV2SiteTunnels_Site) GetUpdateIpsecIkeV2SiteTunnels() *SiteUpdateIpsecIkeV2SiteTunnels_Site_UpdateIpsecIkeV2SiteTunnels {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels_Site{}
	}
	return t.UpdateIpsecIkeV2SiteTunnels
}

type SiteUpdateNetworkRange_Site_UpdateNetworkRange struct {
	NetworkRangeID string "json:\"networkRangeId\" graphql:\"networkRangeId\""
}

func (t *SiteUpdateNetworkRange_Site_UpdateNetworkRange) GetNetworkRangeID() string {
	if t == nil {
		t = &SiteUpdateNetworkRange_Site_UpdateNetworkRange{}
	}
	return t.NetworkRangeID
}

type SiteUpdateNetworkRange_Site struct {
	UpdateNetworkRange *SiteUpdateNetworkRange_Site_UpdateNetworkRange "json:\"updateNetworkRange,omitempty\" graphql:\"updateNetworkRange\""
}

func (t *SiteUpdateNetworkRange_Site) GetUpdateNetworkRange() *SiteUpdateNetworkRange_Site_UpdateNetworkRange {
	if t == nil {
		t = &SiteUpdateNetworkRange_Site{}
	}
	return t.UpdateNetworkRange
}

type SiteUpdateSiteGeneralDetails_Site_UpdateSiteGeneralDetails struct {
	SiteID string "json:\"siteId\" graphql:\"siteId\""
}

func (t *SiteUpdateSiteGeneralDetails_Site_UpdateSiteGeneralDetails) GetSiteID() string {
	if t == nil {
		t = &SiteUpdateSiteGeneralDetails_Site_UpdateSiteGeneralDetails{}
	}
	return t.SiteID
}

type SiteUpdateSiteGeneralDetails_Site struct {
	UpdateSiteGeneralDetails *SiteUpdateSiteGeneralDetails_Site_UpdateSiteGeneralDetails "json:\"updateSiteGeneralDetails,omitempty\" graphql:\"updateSiteGeneralDetails\""
}

func (t *SiteUpdateSiteGeneralDetails_Site) GetUpdateSiteGeneralDetails() *SiteUpdateSiteGeneralDetails_Site_UpdateSiteGeneralDetails {
	if t == nil {
		t = &SiteUpdateSiteGeneralDetails_Site{}
	}
	return t.UpdateSiteGeneralDetails
}

type SiteUpdateSocketInterface_Site_UpdateSocketInterface struct {
	SiteID            string                            "json:\"siteId\" graphql:\"siteId\""
	SocketInterfaceID cato_models.SocketInterfaceIDEnum "json:\"socketInterfaceId\" graphql:\"socketInterfaceId\""
}

func (t *SiteUpdateSocketInterface_Site_UpdateSocketInterface) GetSiteID() string {
	if t == nil {
		t = &SiteUpdateSocketInterface_Site_UpdateSocketInterface{}
	}
	return t.SiteID
}
func (t *SiteUpdateSocketInterface_Site_UpdateSocketInterface) GetSocketInterfaceID() *cato_models.SocketInterfaceIDEnum {
	if t == nil {
		t = &SiteUpdateSocketInterface_Site_UpdateSocketInterface{}
	}
	return &t.SocketInterfaceID
}

type SiteUpdateSocketInterface_Site struct {
	UpdateSocketInterface *SiteUpdateSocketInterface_Site_UpdateSocketInterface "json:\"updateSocketInterface,omitempty\" graphql:\"updateSocketInterface\""
}

func (t *SiteUpdateSocketInterface_Site) GetUpdateSocketInterface() *SiteUpdateSocketInterface_Site_UpdateSocketInterface {
	if t == nil {
		t = &SiteUpdateSocketInterface_Site{}
	}
	return t.UpdateSocketInterface
}

type SiteUpdateStaticHost_Site_UpdateStaticHost struct {
	HostID string "json:\"hostId\" graphql:\"hostId\""
}

func (t *SiteUpdateStaticHost_Site_UpdateStaticHost) GetHostID() string {
	if t == nil {
		t = &SiteUpdateStaticHost_Site_UpdateStaticHost{}
	}
	return t.HostID
}

type SiteUpdateStaticHost_Site struct {
	UpdateStaticHost *SiteUpdateStaticHost_Site_UpdateStaticHost "json:\"updateStaticHost,omitempty\" graphql:\"updateStaticHost\""
}

func (t *SiteUpdateStaticHost_Site) GetUpdateStaticHost() *SiteUpdateStaticHost_Site_UpdateStaticHost {
	if t == nil {
		t = &SiteUpdateStaticHost_Site{}
	}
	return t.UpdateStaticHost
}

type SubDomains_SubDomains struct {
	AccountID   string "json:\"accountId\" graphql:\"accountId\""
	AccountName string "json:\"accountName\" graphql:\"accountName\""
	AccountType string "json:\"accountType\" graphql:\"accountType\""
	SubDomain   string "json:\"subDomain\" graphql:\"subDomain\""
}

func (t *SubDomains_SubDomains) GetAccountID() string {
	if t == nil {
		t = &SubDomains_SubDomains{}
	}
	return t.AccountID
}
func (t *SubDomains_SubDomains) GetAccountName() string {
	if t == nil {
		t = &SubDomains_SubDomains{}
	}
	return t.AccountName
}
func (t *SubDomains_SubDomains) GetAccountType() string {
	if t == nil {
		t = &SubDomains_SubDomains{}
	}
	return t.AccountType
}
func (t *SubDomains_SubDomains) GetSubDomain() string {
	if t == nil {
		t = &SubDomains_SubDomains{}
	}
	return t.SubDomain
}

type Xdr_Xdr_Stories_Paging struct {
	From  int64 "json:\"from\" graphql:\"from\""
	Limit int64 "json:\"limit\" graphql:\"limit\""
	Total int64 "json:\"total\" graphql:\"total\""
}

func (t *Xdr_Xdr_Stories_Paging) GetFrom() int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Paging{}
	}
	return t.From
}
func (t *Xdr_Xdr_Stories_Paging) GetLimit() int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Paging{}
	}
	return t.Limit
}
func (t *Xdr_Xdr_Stories_Paging) GetTotal() int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Paging{}
	}
	return t.Total
}

type Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident_ThreatType struct {
	Details           *string "json:\"details,omitempty\" graphql:\"details\""
	Name              *string "json:\"name,omitempty\" graphql:\"name\""
	RecommendedAction *string "json:\"recommendedAction,omitempty\" graphql:\"recommendedAction\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident_ThreatType) GetDetails() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident_ThreatType{}
	}
	return t.Details
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident_ThreatType) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident_ThreatType{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident_ThreatType) GetRecommendedAction() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident_ThreatType{}
	}
	return t.RecommendedAction
}

type Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident struct {
	AdditionalInfo       *string                                                                  "json:\"additionalInfo,omitempty\" graphql:\"additionalInfo\""
	Severity             *cato_models.SeverityEnum                                                "json:\"severity,omitempty\" graphql:\"severity\""
	ThreatClassification *string                                                                  "json:\"threatClassification,omitempty\" graphql:\"threatClassification\""
	ThreatType           *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident_ThreatType "json:\"threatType,omitempty\" graphql:\"threatType\""
	Verdict              *cato_models.StoryVerdictEnum                                            "json:\"verdict,omitempty\" graphql:\"verdict\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident) GetAdditionalInfo() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident{}
	}
	return t.AdditionalInfo
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident) GetSeverity() *cato_models.SeverityEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident{}
	}
	return t.Severity
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident) GetThreatClassification() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident{}
	}
	return t.ThreatClassification
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident) GetThreatType() *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident_ThreatType {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident{}
	}
	return t.ThreatType
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident) GetVerdict() *cato_models.StoryVerdictEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident{}
	}
	return t.Verdict
}

type Xdr_Xdr_Stories_Items_Incident_SiteMergedIncident struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_SiteMergedIncident) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_SiteMergedIncident{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_SiteMergedIncident) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_SiteMergedIncident{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_UserMergedIncident struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_UserMergedIncident) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_UserMergedIncident{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_UserMergedIncident) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_UserMergedIncident{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData struct {
	Indication           *string  "json:\"indication,omitempty\" graphql:\"indication\""
	SimilarityPercentage *float64 "json:\"similarityPercentage,omitempty\" graphql:\"similarityPercentage\""
	StoryID              *string  "json:\"storyId,omitempty\" graphql:\"storyId\""
	ThreatClassification *string  "json:\"threatClassification,omitempty\" graphql:\"threatClassification\""
	ThreatTypeName       *string  "json:\"threatTypeName,omitempty\" graphql:\"threatTypeName\""
	Verdict              *string  "json:\"verdict,omitempty\" graphql:\"verdict\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData) GetIndication() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData{}
	}
	return t.Indication
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData) GetSimilarityPercentage() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData{}
	}
	return t.SimilarityPercentage
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData) GetStoryID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData{}
	}
	return t.StoryID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData) GetThreatClassification() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData{}
	}
	return t.ThreatClassification
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData) GetThreatTypeName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData{}
	}
	return t.ThreatTypeName
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData) GetVerdict() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData{}
	}
	return t.Verdict
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_OsDetailsMicrosoftDeviceDetails struct {
	OsBuild   *int64  "json:\"osBuild,omitempty\" graphql:\"osBuild\""
	OsType    string  "json:\"osType\" graphql:\"osType\""
	OsVersion *string "json:\"osVersion,omitempty\" graphql:\"osVersion\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_OsDetailsMicrosoftDeviceDetails) GetOsBuild() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_OsDetailsMicrosoftDeviceDetails{}
	}
	return t.OsBuild
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_OsDetailsMicrosoftDeviceDetails) GetOsType() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_OsDetailsMicrosoftDeviceDetails{}
	}
	return t.OsType
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_OsDetailsMicrosoftDeviceDetails) GetOsVersion() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_OsDetailsMicrosoftDeviceDetails{}
	}
	return t.OsVersion
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_MicrosoftEndpointUser struct {
	UserSid       *string "json:\"userSid,omitempty\" graphql:\"userSid\""
	AccountName   *string "json:\"accountName,omitempty\" graphql:\"accountName\""
	DomainName    *string "json:\"domainName,omitempty\" graphql:\"domainName\""
	PrincipalName *string "json:\"principalName,omitempty\" graphql:\"principalName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_MicrosoftEndpointUser) GetUserSid() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_MicrosoftEndpointUser{}
	}
	return t.UserSid
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_MicrosoftEndpointUser) GetAccountName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_MicrosoftEndpointUser{}
	}
	return t.AccountName
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_MicrosoftEndpointUser) GetDomainName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_MicrosoftEndpointUser{}
	}
	return t.DomainName
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_MicrosoftEndpointUser) GetPrincipalName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_MicrosoftEndpointUser{}
	}
	return t.PrincipalName
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_CatoEndpointUser struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_CatoEndpointUser) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_CatoEndpointUser{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_CatoEndpointUser) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_CatoEndpointUser{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails struct {
	CatoEndpointUser      Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_CatoEndpointUser      "graphql:\"... on CatoEndpointUser\""
	MicrosoftEndpointUser Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_MicrosoftEndpointUser "graphql:\"... on MicrosoftEndpointUser\""
	ID                    string                                                                                                            "json:\"id\" graphql:\"id\""
	Name                  string                                                                                                            "json:\"name\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails) GetCatoEndpointUser() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_CatoEndpointUser {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails{}
	}
	return &t.CatoEndpointUser
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails) GetMicrosoftEndpointUser() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails_MicrosoftEndpointUser {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails{}
	}
	return &t.MicrosoftEndpointUser
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_RbacGroupMicrosoftDeviceDetails struct {
	ID   string  "json:\"id\" graphql:\"id\""
	Name *string "json:\"name,omitempty\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_RbacGroupMicrosoftDeviceDetails) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_RbacGroupMicrosoftDeviceDetails{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_RbacGroupMicrosoftDeviceDetails) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_RbacGroupMicrosoftDeviceDetails{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device struct {
	AvStatusMicrosoftDeviceDetails         *cato_models.DeviceAvStatusEnum                                                                "json:\"avStatusMicrosoftDeviceDetails,omitempty\" graphql:\"avStatusMicrosoftDeviceDetails\""
	AzureAdDeviceID                        *string                                                                                        "json:\"azureAdDeviceId,omitempty\" graphql:\"azureAdDeviceId\""
	DeviceName                             *string                                                                                        "json:\"deviceName,omitempty\" graphql:\"deviceName\""
	FirstSeenDateTime                      *string                                                                                        "json:\"firstSeenDateTime,omitempty\" graphql:\"firstSeenDateTime\""
	HealthStatusMicrosoftDeviceDetails     *cato_models.DeviceHealthStatusEnum                                                            "json:\"healthStatusMicrosoftDeviceDetails,omitempty\" graphql:\"healthStatusMicrosoftDeviceDetails\""
	ID                                     string                                                                                         "json:\"id\" graphql:\"id\""
	IPInterfaces                           []string                                                                                       "json:\"ipInterfaces\" graphql:\"ipInterfaces\""
	LoggedOnUsersMicrosoftDeviceDetails    []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails "json:\"loggedOnUsersMicrosoftDeviceDetails\" graphql:\"loggedOnUsersMicrosoftDeviceDetails\""
	OnboardingStatusMicrosoftDeviceDetails *cato_models.OnboardingStatusEnum                                                              "json:\"onboardingStatusMicrosoftDeviceDetails,omitempty\" graphql:\"onboardingStatusMicrosoftDeviceDetails\""
	OsDetailsMicrosoftDeviceDetails        *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_OsDetailsMicrosoftDeviceDetails       "json:\"osDetailsMicrosoftDeviceDetails,omitempty\" graphql:\"osDetailsMicrosoftDeviceDetails\""
	RbacGroupMicrosoftDeviceDetails        *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_RbacGroupMicrosoftDeviceDetails       "json:\"rbacGroupMicrosoftDeviceDetails,omitempty\" graphql:\"rbacGroupMicrosoftDeviceDetails\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device) GetAvStatusMicrosoftDeviceDetails() *cato_models.DeviceAvStatusEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device{}
	}
	return t.AvStatusMicrosoftDeviceDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device) GetAzureAdDeviceID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device{}
	}
	return t.AzureAdDeviceID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device) GetDeviceName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device{}
	}
	return t.DeviceName
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device) GetFirstSeenDateTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device{}
	}
	return t.FirstSeenDateTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device) GetHealthStatusMicrosoftDeviceDetails() *cato_models.DeviceHealthStatusEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device{}
	}
	return t.HealthStatusMicrosoftDeviceDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device) GetIPInterfaces() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device{}
	}
	return t.IPInterfaces
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device) GetLoggedOnUsersMicrosoftDeviceDetails() []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_LoggedOnUsersMicrosoftDeviceDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device{}
	}
	return t.LoggedOnUsersMicrosoftDeviceDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device) GetOnboardingStatusMicrosoftDeviceDetails() *cato_models.OnboardingStatusEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device{}
	}
	return t.OnboardingStatusMicrosoftDeviceDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device) GetOsDetailsMicrosoftDeviceDetails() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_OsDetailsMicrosoftDeviceDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device{}
	}
	return t.OsDetailsMicrosoftDeviceDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device) GetRbacGroupMicrosoftDeviceDetails() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device_RbacGroupMicrosoftDeviceDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device{}
	}
	return t.RbacGroupMicrosoftDeviceDetails
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreTechnique struct {
	ID   *string "json:\"id,omitempty\" graphql:\"id\""
	Name *string "json:\"name,omitempty\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreTechnique) GetID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreTechnique{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreTechnique) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreTechnique{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreSubTechnique struct {
	ID   *string "json:\"id,omitempty\" graphql:\"id\""
	Name *string "json:\"name,omitempty\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreSubTechnique) GetID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreSubTechnique{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreSubTechnique) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreSubTechnique{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile struct {
	Issuer    *string "json:\"issuer,omitempty\" graphql:\"issuer\""
	Md5       *string "json:\"md5,omitempty\" graphql:\"md5\""
	Name      *string "json:\"name,omitempty\" graphql:\"name\""
	Path      *string "json:\"path,omitempty\" graphql:\"path\""
	Publisher *string "json:\"publisher,omitempty\" graphql:\"publisher\""
	Sha1      *string "json:\"sha1,omitempty\" graphql:\"sha1\""
	Sha256    *string "json:\"sha256,omitempty\" graphql:\"sha256\""
	Signer    *string "json:\"signer,omitempty\" graphql:\"signer\""
	Size      *int64  "json:\"size,omitempty\" graphql:\"size\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile) GetIssuer() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile{}
	}
	return t.Issuer
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile) GetMd5() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile{}
	}
	return t.Md5
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile) GetPath() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile{}
	}
	return t.Path
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile) GetPublisher() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile{}
	}
	return t.Publisher
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile) GetSha1() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile{}
	}
	return t.Sha1
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile) GetSha256() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile{}
	}
	return t.Sha256
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile) GetSigner() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile{}
	}
	return t.Signer
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile) GetSize() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile{}
	}
	return t.Size
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_MicrosoftEndpointUser struct {
	UserSid       *string "json:\"userSid,omitempty\" graphql:\"userSid\""
	AccountName   *string "json:\"accountName,omitempty\" graphql:\"accountName\""
	DomainName    *string "json:\"domainName,omitempty\" graphql:\"domainName\""
	PrincipalName *string "json:\"principalName,omitempty\" graphql:\"principalName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_MicrosoftEndpointUser) GetUserSid() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_MicrosoftEndpointUser{}
	}
	return t.UserSid
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_MicrosoftEndpointUser) GetAccountName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_MicrosoftEndpointUser{}
	}
	return t.AccountName
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_MicrosoftEndpointUser) GetDomainName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_MicrosoftEndpointUser{}
	}
	return t.DomainName
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_MicrosoftEndpointUser) GetPrincipalName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_MicrosoftEndpointUser{}
	}
	return t.PrincipalName
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_CatoEndpointUser struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_CatoEndpointUser) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_CatoEndpointUser{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_CatoEndpointUser) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_CatoEndpointUser{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount struct {
	CatoEndpointUser      Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_CatoEndpointUser      "graphql:\"... on CatoEndpointUser\""
	MicrosoftEndpointUser Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_MicrosoftEndpointUser "graphql:\"... on MicrosoftEndpointUser\""
	ID                    string                                                                                                                       "json:\"id\" graphql:\"id\""
	Name                  string                                                                                                                       "json:\"name\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount) GetCatoEndpointUser() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_CatoEndpointUser {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount{}
	}
	return &t.CatoEndpointUser
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount) GetMicrosoftEndpointUser() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount_MicrosoftEndpointUser {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount{}
	}
	return &t.MicrosoftEndpointUser
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource struct {
	ProcessID          int64                                                                                                   "json:\"processId\" graphql:\"processId\""
	ProcessCommandLine *string                                                                                                 "json:\"processCommandLine,omitempty\" graphql:\"processCommandLine\""
	ImageFile          *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile   "json:\"imageFile,omitempty\" graphql:\"imageFile\""
	UserAccount        *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount "json:\"userAccount,omitempty\" graphql:\"userAccount\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource) GetProcessID() int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource{}
	}
	return t.ProcessID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource) GetProcessCommandLine() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource{}
	}
	return t.ProcessCommandLine
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource) GetImageFile() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_ImageFile {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource{}
	}
	return t.ImageFile
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource) GetUserAccount() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource_UserAccount {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource{}
	}
	return t.UserAccount
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails struct {
	Issuer    *string "json:\"issuer,omitempty\" graphql:\"issuer\""
	Md5       *string "json:\"md5,omitempty\" graphql:\"md5\""
	Name      *string "json:\"name,omitempty\" graphql:\"name\""
	Path      *string "json:\"path,omitempty\" graphql:\"path\""
	Publisher *string "json:\"publisher,omitempty\" graphql:\"publisher\""
	Sha1      *string "json:\"sha1,omitempty\" graphql:\"sha1\""
	Sha256    *string "json:\"sha256,omitempty\" graphql:\"sha256\""
	Signer    *string "json:\"signer,omitempty\" graphql:\"signer\""
	Size      *int64  "json:\"size,omitempty\" graphql:\"size\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails) GetIssuer() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails{}
	}
	return t.Issuer
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails) GetMd5() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails{}
	}
	return t.Md5
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails) GetPath() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails{}
	}
	return t.Path
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails) GetPublisher() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails{}
	}
	return t.Publisher
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails) GetSha1() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails{}
	}
	return t.Sha1
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails) GetSha256() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails{}
	}
	return t.Sha256
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails) GetSigner() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails{}
	}
	return t.Signer
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails) GetSize() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails{}
	}
	return t.Size
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource struct {
	FileDetails     *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails "json:\"fileDetails,omitempty\" graphql:\"fileDetails\""
	DetectionStatus *cato_models.DetectionStatusEnum                                                                     "json:\"detectionStatus,omitempty\" graphql:\"detectionStatus\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource) GetFileDetails() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource_FileDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource{}
	}
	return t.FileDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource) GetDetectionStatus() *cato_models.DetectionStatusEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource{}
	}
	return t.DetectionStatus
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource struct {
	Hive      *string "json:\"hive,omitempty\" graphql:\"hive\""
	Key       *string "json:\"key,omitempty\" graphql:\"key\""
	Value     *string "json:\"value,omitempty\" graphql:\"value\""
	ValueName *string "json:\"valueName,omitempty\" graphql:\"valueName\""
	ValueType *string "json:\"valueType,omitempty\" graphql:\"valueType\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource) GetHive() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource{}
	}
	return t.Hive
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource) GetKey() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource{}
	}
	return t.Key
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource) GetValue() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource{}
	}
	return t.Value
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource) GetValueName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource{}
	}
	return t.ValueName
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource) GetValueType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource{}
	}
	return t.ValueType
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources struct {
	MicrosoftFileResource     Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource     "graphql:\"... on MicrosoftFileResource\""
	MicrosoftProcessResource  Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource  "graphql:\"... on MicrosoftProcessResource\""
	MicrosoftRegistryResource Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource "graphql:\"... on MicrosoftRegistryResource\""
	CreatedDateTime           *string                                                                                     "json:\"createdDateTime,omitempty\" graphql:\"createdDateTime\""
	ID                        string                                                                                      "json:\"id\" graphql:\"id\""
	RemediationStatus         *cato_models.RemediationStatusEnum                                                          "json:\"remediationStatus,omitempty\" graphql:\"remediationStatus\""
	RemediationStatusDetails  *string                                                                                     "json:\"remediationStatusDetails,omitempty\" graphql:\"remediationStatusDetails\""
	Roles                     []cato_models.ResourceRoleEnum                                                              "json:\"roles\" graphql:\"roles\""
	Tags                      []string                                                                                    "json:\"tags\" graphql:\"tags\""
	Verdict                   *cato_models.MsResourceVerdictEnum                                                          "json:\"verdict,omitempty\" graphql:\"verdict\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources) GetMicrosoftFileResource() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftFileResource {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources{}
	}
	return &t.MicrosoftFileResource
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources) GetMicrosoftProcessResource() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftProcessResource {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources{}
	}
	return &t.MicrosoftProcessResource
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources) GetMicrosoftRegistryResource() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources_MicrosoftRegistryResource {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources{}
	}
	return &t.MicrosoftRegistryResource
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources) GetCreatedDateTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources{}
	}
	return t.CreatedDateTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources) GetRemediationStatus() *cato_models.RemediationStatusEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources{}
	}
	return t.RemediationStatus
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources) GetRemediationStatusDetails() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources{}
	}
	return t.RemediationStatusDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources) GetRoles() []cato_models.ResourceRoleEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources{}
	}
	return t.Roles
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources) GetTags() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources{}
	}
	return t.Tags
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources) GetVerdict() *cato_models.MsResourceVerdictEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources{}
	}
	return t.Verdict
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities struct {
	Action                *string "json:\"action,omitempty\" graphql:\"action\""
	FirstActivityDateTime *string "json:\"firstActivityDateTime,omitempty\" graphql:\"firstActivityDateTime\""
	ID                    string  "json:\"id\" graphql:\"id\""
	LastActivityDateTime  *string "json:\"lastActivityDateTime,omitempty\" graphql:\"lastActivityDateTime\""
	ParentResourceID      string  "json:\"parentResourceId\" graphql:\"parentResourceId\""
	ResourceID            string  "json:\"resourceId\" graphql:\"resourceId\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities) GetAction() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities{}
	}
	return t.Action
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities) GetFirstActivityDateTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities{}
	}
	return t.FirstActivityDateTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities) GetLastActivityDateTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities{}
	}
	return t.LastActivityDateTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities) GetParentResourceID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities{}
	}
	return t.ParentResourceID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities) GetResourceID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities{}
	}
	return t.ResourceID
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts struct {
	Activities                                    []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities        "json:\"activities\" graphql:\"activities\""
	AlertWebURL                                   *string                                                                      "json:\"alertWebUrl,omitempty\" graphql:\"alertWebUrl\""
	Category                                      *string                                                                      "json:\"category,omitempty\" graphql:\"category\""
	ClassificationMicrosoftDefenderEndpointAlert  *cato_models.AlertClassificationEnum                                         "json:\"classificationMicrosoftDefenderEndpointAlert,omitempty\" graphql:\"classificationMicrosoftDefenderEndpointAlert\""
	Comments                                      []string                                                                     "json:\"comments\" graphql:\"comments\""
	CreatedDateTime                               *string                                                                      "json:\"createdDateTime,omitempty\" graphql:\"createdDateTime\""
	Criticality                                   *int64                                                                       "json:\"criticality,omitempty\" graphql:\"criticality\""
	Description                                   *string                                                                      "json:\"description,omitempty\" graphql:\"description\""
	DestinationIP                                 *string                                                                      "json:\"destinationIp,omitempty\" graphql:\"destinationIp\""
	DestinationURL                                *string                                                                      "json:\"destinationUrl,omitempty\" graphql:\"destinationUrl\""
	DetectionSourceMicrosoftDefenderEndpointAlert *cato_models.DetectionSourceEnum                                             "json:\"detectionSourceMicrosoftDefenderEndpointAlert,omitempty\" graphql:\"detectionSourceMicrosoftDefenderEndpointAlert\""
	DeterminationMicrosoftDefenderEndpointAlert   *cato_models.AlertDeterminationEnum                                          "json:\"determinationMicrosoftDefenderEndpointAlert,omitempty\" graphql:\"determinationMicrosoftDefenderEndpointAlert\""
	FirstActivityDateTime                         *string                                                                      "json:\"firstActivityDateTime,omitempty\" graphql:\"firstActivityDateTime\""
	ID                                            string                                                                       "json:\"id\" graphql:\"id\""
	LastActivityDateTime                          *string                                                                      "json:\"lastActivityDateTime,omitempty\" graphql:\"lastActivityDateTime\""
	LastUpdateDateTime                            *string                                                                      "json:\"lastUpdateDateTime,omitempty\" graphql:\"lastUpdateDateTime\""
	LocalIP                                       *string                                                                      "json:\"localIp,omitempty\" graphql:\"localIp\""
	MitreSubTechnique                             []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreSubTechnique "json:\"mitreSubTechnique\" graphql:\"mitreSubTechnique\""
	MitreTechnique                                []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreTechnique    "json:\"mitreTechnique\" graphql:\"mitreTechnique\""
	OwnerName                                     *string                                                                      "json:\"ownerName,omitempty\" graphql:\"ownerName\""
	ProviderAlertID                               *string                                                                      "json:\"providerAlertId,omitempty\" graphql:\"providerAlertId\""
	RecommendedActions                            *string                                                                      "json:\"recommendedActions,omitempty\" graphql:\"recommendedActions\""
	ResolvedDateTime                              *string                                                                      "json:\"resolvedDateTime,omitempty\" graphql:\"resolvedDateTime\""
	Resources                                     []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources         "json:\"resources\" graphql:\"resources\""
	StatusMicrosoftDefenderEndpointAlert          *cato_models.MsAlertStatus                                                   "json:\"statusMicrosoftDefenderEndpointAlert,omitempty\" graphql:\"statusMicrosoftDefenderEndpointAlert\""
	ThreatFamilyName                              *string                                                                      "json:\"threatFamilyName,omitempty\" graphql:\"threatFamilyName\""
	ThreatName                                    *string                                                                      "json:\"threatName,omitempty\" graphql:\"threatName\""
	ThreatType                                    *string                                                                      "json:\"threatType,omitempty\" graphql:\"threatType\""
	Title                                         *string                                                                      "json:\"title,omitempty\" graphql:\"title\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetActivities() []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Activities {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.Activities
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetAlertWebURL() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.AlertWebURL
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetCategory() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.Category
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetClassificationMicrosoftDefenderEndpointAlert() *cato_models.AlertClassificationEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.ClassificationMicrosoftDefenderEndpointAlert
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetComments() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.Comments
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetCreatedDateTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.CreatedDateTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetCriticality() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.Criticality
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetDescription() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.Description
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetDestinationIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.DestinationIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetDestinationURL() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.DestinationURL
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetDetectionSourceMicrosoftDefenderEndpointAlert() *cato_models.DetectionSourceEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.DetectionSourceMicrosoftDefenderEndpointAlert
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetDeterminationMicrosoftDefenderEndpointAlert() *cato_models.AlertDeterminationEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.DeterminationMicrosoftDefenderEndpointAlert
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetFirstActivityDateTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.FirstActivityDateTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetLastActivityDateTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.LastActivityDateTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetLastUpdateDateTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.LastUpdateDateTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetLocalIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.LocalIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetMitreSubTechnique() []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreSubTechnique {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.MitreSubTechnique
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetMitreTechnique() []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_MitreTechnique {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.MitreTechnique
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetOwnerName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.OwnerName
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetProviderAlertID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.ProviderAlertID
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetRecommendedActions() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.RecommendedActions
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetResolvedDateTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.ResolvedDateTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetResources() []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts_Resources {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.Resources
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetStatusMicrosoftDefenderEndpointAlert() *cato_models.MsAlertStatus {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.StatusMicrosoftDefenderEndpointAlert
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetThreatFamilyName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.ThreatFamilyName
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetThreatName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.ThreatName
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetThreatType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.ThreatType
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts) GetTitle() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts{}
	}
	return t.Title
}

type Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint struct {
	SimilarStoriesData []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData "json:\"similarStoriesData\" graphql:\"similarStoriesData\""
	Device             *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device               "json:\"device,omitempty\" graphql:\"device\""
	Alerts             []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts             "json:\"alerts\" graphql:\"alerts\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint) GetSimilarStoriesData() []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_SimilarStoriesData {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint{}
	}
	return t.SimilarStoriesData
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint) GetDevice() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Device {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint{}
	}
	return t.Device
}
func (t *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint) GetAlerts() []*Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint_Alerts {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint{}
	}
	return t.Alerts
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData struct {
	Indication           *string  "json:\"indication,omitempty\" graphql:\"indication\""
	SimilarityPercentage *float64 "json:\"similarityPercentage,omitempty\" graphql:\"similarityPercentage\""
	StoryID              *string  "json:\"storyId,omitempty\" graphql:\"storyId\""
	ThreatClassification *string  "json:\"threatClassification,omitempty\" graphql:\"threatClassification\""
	ThreatTypeName       *string  "json:\"threatTypeName,omitempty\" graphql:\"threatTypeName\""
	Verdict              *string  "json:\"verdict,omitempty\" graphql:\"verdict\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData) GetIndication() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData{}
	}
	return t.Indication
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData) GetSimilarityPercentage() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData{}
	}
	return t.SimilarityPercentage
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData) GetStoryID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData{}
	}
	return t.StoryID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData) GetThreatClassification() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData{}
	}
	return t.ThreatClassification
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData) GetThreatTypeName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData{}
	}
	return t.ThreatTypeName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData) GetVerdict() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData{}
	}
	return t.Verdict
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_DrillDownFilter struct {
	Name  string "json:\"name\" graphql:\"name\""
	Value string "json:\"value\" graphql:\"value\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_DrillDownFilter) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_DrillDownFilter{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_DrillDownFilter) GetValue() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_DrillDownFilter{}
	}
	return t.Value
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Extra struct {
	Name  string "json:\"name\" graphql:\"name\""
	Type  string "json:\"type\" graphql:\"type\""
	Value string "json:\"value\" graphql:\"value\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Extra) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Extra{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Extra) GetType() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Extra{}
	}
	return t.Type
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Extra) GetValue() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Extra{}
	}
	return t.Value
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian struct {
	Avg    *float64 "json:\"avg,omitempty\" graphql:\"avg\""
	N      *float64 "json:\"n,omitempty\" graphql:\"n\""
	Ss     *float64 "json:\"ss,omitempty\" graphql:\"ss\""
	Std    *float64 "json:\"std,omitempty\" graphql:\"std\""
	ZScore *float64 "json:\"z_score,omitempty\" graphql:\"z_score\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian) GetAvg() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian{}
	}
	return t.Avg
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian) GetN() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian{}
	}
	return t.N
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian) GetSs() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian{}
	}
	return t.Ss
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian) GetStd() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian{}
	}
	return t.Std
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian) GetZScore() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian{}
	}
	return t.ZScore
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Metric struct {
	Name  string  "json:\"name\" graphql:\"name\""
	Value float64 "json:\"value\" graphql:\"value\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Metric) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Metric{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Metric) GetValue() float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Metric{}
	}
	return t.Value
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_MetricDetails struct {
	Name  string "json:\"name\" graphql:\"name\""
	Units string "json:\"units\" graphql:\"units\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_MetricDetails) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_MetricDetails{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_MetricDetails) GetUnits() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_MetricDetails{}
	}
	return t.Units
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Mitres struct {
	ID   *string "json:\"id,omitempty\" graphql:\"id\""
	Name *string "json:\"name,omitempty\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Mitres) GetID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Mitres{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Mitres) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Mitres{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries_Dimensions struct {
	FieldName string  "json:\"fieldName\" graphql:\"fieldName\""
	Value     *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries_Dimensions) GetFieldName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries_Dimensions{}
	}
	return t.FieldName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries_Dimensions) GetValue() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries_Dimensions{}
	}
	return t.Value
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries struct {
	Dimensions       []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	MeasureFieldName string                                                                                     "json:\"measureFieldName\" graphql:\"measureFieldName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries) GetDimensions() []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries_Dimensions {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries{}
	}
	return t.Dimensions
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries) GetMeasureFieldName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries{}
	}
	return t.MeasureFieldName
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries struct {
	Data                    [][]float64                                                                   "json:\"data,omitempty\" graphql:\"data\""
	Info                    []string                                                                      "json:\"info,omitempty\" graphql:\"info\""
	KeyIncidentTimeseries   *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries "json:\"keyIncidentTimeseries,omitempty\" graphql:\"keyIncidentTimeseries\""
	Label                   string                                                                        "json:\"label\" graphql:\"label\""
	Sum                     *float64                                                                      "json:\"sum,omitempty\" graphql:\"sum\""
	UnitsIncidentTimeseries *cato_models.UnitType                                                         "json:\"unitsIncidentTimeseries,omitempty\" graphql:\"unitsIncidentTimeseries\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries) GetData() [][]float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries{}
	}
	return t.Data
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries) GetInfo() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries{}
	}
	return t.Info
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries) GetKeyIncidentTimeseries() *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries_KeyIncidentTimeseries {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries{}
	}
	return t.KeyIncidentTimeseries
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries) GetLabel() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries{}
	}
	return t.Label
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries) GetSum() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries{}
	}
	return t.Sum
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries) GetUnitsIncidentTimeseries() *cato_models.UnitType {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries{}
	}
	return t.UnitsIncidentTimeseries
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData struct {
	Action                *string                 "json:\"action,omitempty\" graphql:\"action\""
	AppID                 *string                 "json:\"appId,omitempty\" graphql:\"appId\""
	AppName               *string                 "json:\"appName,omitempty\" graphql:\"appName\""
	DNSProtectionCategory *string                 "json:\"dnsProtectionCategory,omitempty\" graphql:\"dnsProtectionCategory\""
	EventType             *string                 "json:\"eventType,omitempty\" graphql:\"eventType\""
	RuleID                *string                 "json:\"ruleId,omitempty\" graphql:\"ruleId\""
	ScanResult            *cato_models.ScanResult "json:\"scanResult,omitempty\" graphql:\"scanResult\""
	Severity              *string                 "json:\"severity,omitempty\" graphql:\"severity\""
	SignatureID           *string                 "json:\"signatureId,omitempty\" graphql:\"signatureId\""
	ThreatName            *string                 "json:\"threatName,omitempty\" graphql:\"threatName\""
	ThreatType            *string                 "json:\"threatType,omitempty\" graphql:\"threatType\""
	VirusName             *string                 "json:\"virusName,omitempty\" graphql:\"virusName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetAction() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.Action
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetAppID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.AppID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetAppName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.AppName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetDNSProtectionCategory() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.DNSProtectionCategory
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetEventType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.EventType
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetRuleID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.RuleID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetScanResult() *cato_models.ScanResult {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.ScanResult
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetSeverity() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.Severity
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetSignatureID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.SignatureID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetThreatName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.ThreatName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetThreatType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.ThreatType
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData) GetVirusName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData{}
	}
	return t.VirusName
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets struct {
	AnalysisScore         *float64                                                         "json:\"analysisScore,omitempty\" graphql:\"analysisScore\""
	Categories            *string                                                          "json:\"categories,omitempty\" graphql:\"categories\""
	CatoPopularity        *int64                                                           "json:\"catoPopularity,omitempty\" graphql:\"catoPopularity\""
	CountryOfRegistration *string                                                          "json:\"countryOfRegistration,omitempty\" graphql:\"countryOfRegistration\""
	CreationTime          *string                                                          "json:\"creationTime,omitempty\" graphql:\"creationTime\""
	Engines               *int64                                                           "json:\"engines,omitempty\" graphql:\"engines\""
	EventData             []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData "json:\"eventData\" graphql:\"eventData\""
	InfectionSource       *bool                                                            "json:\"infectionSource,omitempty\" graphql:\"infectionSource\""
	Name                  *string                                                          "json:\"name,omitempty\" graphql:\"name\""
	SearchHits            *string                                                          "json:\"searchHits,omitempty\" graphql:\"searchHits\""
	ThreatFeeds           *int64                                                           "json:\"threatFeeds,omitempty\" graphql:\"threatFeeds\""
	ThreatReference       *string                                                          "json:\"threatReference,omitempty\" graphql:\"threatReference\""
	TypeIncidentTargetRep *cato_models.TargetType                                          "json:\"typeIncidentTargetRep,omitempty\" graphql:\"typeIncidentTargetRep\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetAnalysisScore() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.AnalysisScore
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetCategories() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.Categories
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetCatoPopularity() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.CatoPopularity
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetCountryOfRegistration() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.CountryOfRegistration
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetCreationTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.CreationTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetEngines() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.Engines
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetEventData() []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets_EventData {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.EventData
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetInfectionSource() *bool {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.InfectionSource
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetSearchHits() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.SearchHits
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetThreatFeeds() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.ThreatFeeds
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetThreatReference() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.ThreatReference
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets) GetTypeIncidentTargetRep() *cato_models.TargetType {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets{}
	}
	return t.TypeIncidentTargetRep
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyStats struct {
	SimilarStoriesData []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData "json:\"similarStoriesData\" graphql:\"similarStoriesData\""
	SrcSiteID          *string                                                           "json:\"srcSiteId,omitempty\" graphql:\"srcSiteId\""
	Os                 *string                                                           "json:\"os,omitempty\" graphql:\"os\""
	DeviceName         *string                                                           "json:\"deviceName,omitempty\" graphql:\"deviceName\""
	MacAddress         *string                                                           "json:\"macAddress,omitempty\" graphql:\"macAddress\""
	LogonName          *string                                                           "json:\"logonName,omitempty\" graphql:\"logonName\""
	ClientClass        []string                                                          "json:\"clientClass\" graphql:\"clientClass\""
	DrillDownFilter    []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_DrillDownFilter    "json:\"drillDownFilter,omitempty\" graphql:\"drillDownFilter\""
	BreakdownField     *string                                                           "json:\"breakdownField,omitempty\" graphql:\"breakdownField\""
	SubjectType        *string                                                           "json:\"subjectType,omitempty\" graphql:\"subjectType\""
	Extra              []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Extra              "json:\"extra,omitempty\" graphql:\"extra\""
	Gaussian           *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian             "json:\"gaussian,omitempty\" graphql:\"gaussian\""
	Metric             *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Metric               "json:\"metric,omitempty\" graphql:\"metric\""
	MetricDetails      *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_MetricDetails        "json:\"metricDetails,omitempty\" graphql:\"metricDetails\""
	Mitres             []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Mitres             "json:\"mitres,omitempty\" graphql:\"mitres\""
	Rules              []string                                                          "json:\"rules,omitempty\" graphql:\"rules\""
	TimeSeries         []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries         "json:\"timeSeries,omitempty\" graphql:\"timeSeries\""
	Targets            []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets            "json:\"targets\" graphql:\"targets\""
	Direction          *string                                                           "json:\"direction,omitempty\" graphql:\"direction\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetSimilarStoriesData() []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_SimilarStoriesData {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.SimilarStoriesData
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetSrcSiteID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.SrcSiteID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetOs() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.Os
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetDeviceName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.DeviceName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetMacAddress() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.MacAddress
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetLogonName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.LogonName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetClientClass() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.ClientClass
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetDrillDownFilter() []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_DrillDownFilter {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.DrillDownFilter
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetBreakdownField() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.BreakdownField
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetSubjectType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.SubjectType
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetExtra() []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Extra {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.Extra
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetGaussian() *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Gaussian {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.Gaussian
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetMetric() *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Metric {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.Metric
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetMetricDetails() *Xdr_Xdr_Stories_Items_Incident_AnomalyStats_MetricDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.MetricDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetMitres() []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Mitres {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.Mitres
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetRules() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.Rules
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetTimeSeries() []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_TimeSeries {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.TimeSeries
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetTargets() []*Xdr_Xdr_Stories_Items_Incident_AnomalyStats_Targets {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.Targets
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyStats) GetDirection() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyStats{}
	}
	return t.Direction
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData struct {
	Indication           *string  "json:\"indication,omitempty\" graphql:\"indication\""
	SimilarityPercentage *float64 "json:\"similarityPercentage,omitempty\" graphql:\"similarityPercentage\""
	StoryID              *string  "json:\"storyId,omitempty\" graphql:\"storyId\""
	ThreatClassification *string  "json:\"threatClassification,omitempty\" graphql:\"threatClassification\""
	ThreatTypeName       *string  "json:\"threatTypeName,omitempty\" graphql:\"threatTypeName\""
	Verdict              *string  "json:\"verdict,omitempty\" graphql:\"verdict\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData) GetIndication() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData{}
	}
	return t.Indication
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData) GetSimilarityPercentage() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData{}
	}
	return t.SimilarityPercentage
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData) GetStoryID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData{}
	}
	return t.StoryID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData) GetThreatClassification() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData{}
	}
	return t.ThreatClassification
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData) GetThreatTypeName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData{}
	}
	return t.ThreatTypeName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData) GetVerdict() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData{}
	}
	return t.Verdict
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_DrillDownFilter struct {
	Name  string "json:\"name\" graphql:\"name\""
	Value string "json:\"value\" graphql:\"value\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_DrillDownFilter) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_DrillDownFilter{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_DrillDownFilter) GetValue() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_DrillDownFilter{}
	}
	return t.Value
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Extra struct {
	Name  string "json:\"name\" graphql:\"name\""
	Type  string "json:\"type\" graphql:\"type\""
	Value string "json:\"value\" graphql:\"value\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Extra) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Extra{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Extra) GetType() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Extra{}
	}
	return t.Type
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Extra) GetValue() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Extra{}
	}
	return t.Value
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian struct {
	Avg    *float64 "json:\"avg,omitempty\" graphql:\"avg\""
	N      *float64 "json:\"n,omitempty\" graphql:\"n\""
	Ss     *float64 "json:\"ss,omitempty\" graphql:\"ss\""
	Std    *float64 "json:\"std,omitempty\" graphql:\"std\""
	ZScore *float64 "json:\"z_score,omitempty\" graphql:\"z_score\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian) GetAvg() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian{}
	}
	return t.Avg
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian) GetN() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian{}
	}
	return t.N
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian) GetSs() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian{}
	}
	return t.Ss
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian) GetStd() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian{}
	}
	return t.Std
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian) GetZScore() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian{}
	}
	return t.ZScore
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Metric struct {
	Name  string  "json:\"name\" graphql:\"name\""
	Value float64 "json:\"value\" graphql:\"value\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Metric) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Metric{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Metric) GetValue() float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Metric{}
	}
	return t.Value
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_MetricDetails struct {
	Name  string "json:\"name\" graphql:\"name\""
	Units string "json:\"units\" graphql:\"units\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_MetricDetails) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_MetricDetails{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_MetricDetails) GetUnits() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_MetricDetails{}
	}
	return t.Units
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Mitres struct {
	ID   *string "json:\"id,omitempty\" graphql:\"id\""
	Name *string "json:\"name,omitempty\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Mitres) GetID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Mitres{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Mitres) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Mitres{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries_Dimensions struct {
	FieldName string  "json:\"fieldName\" graphql:\"fieldName\""
	Value     *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries_Dimensions) GetFieldName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries_Dimensions{}
	}
	return t.FieldName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries_Dimensions) GetValue() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries_Dimensions{}
	}
	return t.Value
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries struct {
	Dimensions       []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	MeasureFieldName string                                                                                      "json:\"measureFieldName\" graphql:\"measureFieldName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries) GetDimensions() []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries_Dimensions {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries{}
	}
	return t.Dimensions
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries) GetMeasureFieldName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries{}
	}
	return t.MeasureFieldName
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries struct {
	Data                    [][]float64                                                                    "json:\"data,omitempty\" graphql:\"data\""
	Info                    []string                                                                       "json:\"info,omitempty\" graphql:\"info\""
	KeyIncidentTimeseries   *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries "json:\"keyIncidentTimeseries,omitempty\" graphql:\"keyIncidentTimeseries\""
	Label                   string                                                                         "json:\"label\" graphql:\"label\""
	Sum                     *float64                                                                       "json:\"sum,omitempty\" graphql:\"sum\""
	UnitsIncidentTimeseries *cato_models.UnitType                                                          "json:\"unitsIncidentTimeseries,omitempty\" graphql:\"unitsIncidentTimeseries\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries) GetData() [][]float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries{}
	}
	return t.Data
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries) GetInfo() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries{}
	}
	return t.Info
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries) GetKeyIncidentTimeseries() *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries_KeyIncidentTimeseries {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries{}
	}
	return t.KeyIncidentTimeseries
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries) GetLabel() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries{}
	}
	return t.Label
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries) GetSum() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries{}
	}
	return t.Sum
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries) GetUnitsIncidentTimeseries() *cato_models.UnitType {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries{}
	}
	return t.UnitsIncidentTimeseries
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData struct {
	Action                *string                 "json:\"action,omitempty\" graphql:\"action\""
	AppID                 *string                 "json:\"appId,omitempty\" graphql:\"appId\""
	AppName               *string                 "json:\"appName,omitempty\" graphql:\"appName\""
	DNSProtectionCategory *string                 "json:\"dnsProtectionCategory,omitempty\" graphql:\"dnsProtectionCategory\""
	EventType             *string                 "json:\"eventType,omitempty\" graphql:\"eventType\""
	RuleID                *string                 "json:\"ruleId,omitempty\" graphql:\"ruleId\""
	ScanResult            *cato_models.ScanResult "json:\"scanResult,omitempty\" graphql:\"scanResult\""
	Severity              *string                 "json:\"severity,omitempty\" graphql:\"severity\""
	SignatureID           *string                 "json:\"signatureId,omitempty\" graphql:\"signatureId\""
	ThreatName            *string                 "json:\"threatName,omitempty\" graphql:\"threatName\""
	ThreatType            *string                 "json:\"threatType,omitempty\" graphql:\"threatType\""
	VirusName             *string                 "json:\"virusName,omitempty\" graphql:\"virusName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetAction() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.Action
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetAppID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.AppID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetAppName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.AppName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetDNSProtectionCategory() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.DNSProtectionCategory
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetEventType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.EventType
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetRuleID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.RuleID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetScanResult() *cato_models.ScanResult {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.ScanResult
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetSeverity() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.Severity
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetSignatureID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.SignatureID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetThreatName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.ThreatName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetThreatType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.ThreatType
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData) GetVirusName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData{}
	}
	return t.VirusName
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets struct {
	AnalysisScore         *float64                                                          "json:\"analysisScore,omitempty\" graphql:\"analysisScore\""
	Categories            *string                                                           "json:\"categories,omitempty\" graphql:\"categories\""
	CatoPopularity        *int64                                                            "json:\"catoPopularity,omitempty\" graphql:\"catoPopularity\""
	CountryOfRegistration *string                                                           "json:\"countryOfRegistration,omitempty\" graphql:\"countryOfRegistration\""
	CreationTime          *string                                                           "json:\"creationTime,omitempty\" graphql:\"creationTime\""
	Engines               *int64                                                            "json:\"engines,omitempty\" graphql:\"engines\""
	EventData             []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData "json:\"eventData\" graphql:\"eventData\""
	InfectionSource       *bool                                                             "json:\"infectionSource,omitempty\" graphql:\"infectionSource\""
	Name                  *string                                                           "json:\"name,omitempty\" graphql:\"name\""
	SearchHits            *string                                                           "json:\"searchHits,omitempty\" graphql:\"searchHits\""
	ThreatFeeds           *int64                                                            "json:\"threatFeeds,omitempty\" graphql:\"threatFeeds\""
	ThreatReference       *string                                                           "json:\"threatReference,omitempty\" graphql:\"threatReference\""
	TypeIncidentTargetRep *cato_models.TargetType                                           "json:\"typeIncidentTargetRep,omitempty\" graphql:\"typeIncidentTargetRep\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetAnalysisScore() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.AnalysisScore
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetCategories() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.Categories
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetCatoPopularity() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.CatoPopularity
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetCountryOfRegistration() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.CountryOfRegistration
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetCreationTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.CreationTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetEngines() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.Engines
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetEventData() []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets_EventData {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.EventData
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetInfectionSource() *bool {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.InfectionSource
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetSearchHits() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.SearchHits
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetThreatFeeds() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.ThreatFeeds
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetThreatReference() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.ThreatReference
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets) GetTypeIncidentTargetRep() *cato_models.TargetType {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets{}
	}
	return t.TypeIncidentTargetRep
}

type Xdr_Xdr_Stories_Items_Incident_AnomalyEvents struct {
	SimilarStoriesData []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData "json:\"similarStoriesData\" graphql:\"similarStoriesData\""
	SrcSiteID          *string                                                            "json:\"srcSiteId,omitempty\" graphql:\"srcSiteId\""
	Os                 *string                                                            "json:\"os,omitempty\" graphql:\"os\""
	DeviceName         *string                                                            "json:\"deviceName,omitempty\" graphql:\"deviceName\""
	MacAddress         *string                                                            "json:\"macAddress,omitempty\" graphql:\"macAddress\""
	LogonName          *string                                                            "json:\"logonName,omitempty\" graphql:\"logonName\""
	ClientClass        []string                                                           "json:\"clientClass\" graphql:\"clientClass\""
	DrillDownFilter    []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_DrillDownFilter    "json:\"drillDownFilter,omitempty\" graphql:\"drillDownFilter\""
	BreakdownField     *string                                                            "json:\"breakdownField,omitempty\" graphql:\"breakdownField\""
	SubjectType        *string                                                            "json:\"subjectType,omitempty\" graphql:\"subjectType\""
	Extra              []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Extra              "json:\"extra,omitempty\" graphql:\"extra\""
	Gaussian           *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian             "json:\"gaussian,omitempty\" graphql:\"gaussian\""
	Metric             *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Metric               "json:\"metric,omitempty\" graphql:\"metric\""
	MetricDetails      *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_MetricDetails        "json:\"metricDetails,omitempty\" graphql:\"metricDetails\""
	Mitres             []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Mitres             "json:\"mitres,omitempty\" graphql:\"mitres\""
	Rules              []string                                                           "json:\"rules,omitempty\" graphql:\"rules\""
	TimeSeries         []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries         "json:\"timeSeries,omitempty\" graphql:\"timeSeries\""
	Targets            []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets            "json:\"targets\" graphql:\"targets\""
	Direction          *string                                                            "json:\"direction,omitempty\" graphql:\"direction\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetSimilarStoriesData() []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_SimilarStoriesData {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.SimilarStoriesData
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetSrcSiteID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.SrcSiteID
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetOs() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.Os
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetDeviceName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.DeviceName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetMacAddress() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.MacAddress
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetLogonName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.LogonName
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetClientClass() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.ClientClass
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetDrillDownFilter() []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_DrillDownFilter {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.DrillDownFilter
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetBreakdownField() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.BreakdownField
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetSubjectType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.SubjectType
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetExtra() []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Extra {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.Extra
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetGaussian() *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Gaussian {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.Gaussian
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetMetric() *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Metric {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.Metric
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetMetricDetails() *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_MetricDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.MetricDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetMitres() []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Mitres {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.Mitres
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetRules() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.Rules
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetTimeSeries() []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_TimeSeries {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.TimeSeries
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetTargets() []*Xdr_Xdr_Stories_Items_Incident_AnomalyEvents_Targets {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.Targets
}
func (t *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents) GetDirection() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_AnomalyEvents{}
	}
	return t.Direction
}

type Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData struct {
	Indication           *string  "json:\"indication,omitempty\" graphql:\"indication\""
	SimilarityPercentage *float64 "json:\"similarityPercentage,omitempty\" graphql:\"similarityPercentage\""
	StoryID              *string  "json:\"storyId,omitempty\" graphql:\"storyId\""
	ThreatClassification *string  "json:\"threatClassification,omitempty\" graphql:\"threatClassification\""
	ThreatTypeName       *string  "json:\"threatTypeName,omitempty\" graphql:\"threatTypeName\""
	Verdict              *string  "json:\"verdict,omitempty\" graphql:\"verdict\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData) GetIndication() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData{}
	}
	return t.Indication
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData) GetSimilarityPercentage() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData{}
	}
	return t.SimilarityPercentage
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData) GetStoryID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData{}
	}
	return t.StoryID
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData) GetThreatClassification() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData{}
	}
	return t.ThreatClassification
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData) GetThreatTypeName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData{}
	}
	return t.ThreatTypeName
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData) GetVerdict() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData{}
	}
	return t.Verdict
}

type Xdr_Xdr_Stories_Items_Incident_Threat_Events struct {
	Action                *string                 "json:\"action,omitempty\" graphql:\"action\""
	AppID                 *string                 "json:\"appId,omitempty\" graphql:\"appId\""
	AppName               *string                 "json:\"appName,omitempty\" graphql:\"appName\""
	DNSProtectionCategory *string                 "json:\"dnsProtectionCategory,omitempty\" graphql:\"dnsProtectionCategory\""
	EventType             *string                 "json:\"eventType,omitempty\" graphql:\"eventType\""
	RuleID                *string                 "json:\"ruleId,omitempty\" graphql:\"ruleId\""
	ScanResultEvent       *cato_models.ScanResult "json:\"scanResultEvent,omitempty\" graphql:\"scanResultEvent\""
	Severity              *string                 "json:\"severity,omitempty\" graphql:\"severity\""
	SignatureID           *string                 "json:\"signatureId,omitempty\" graphql:\"signatureId\""
	ThreatName            *string                 "json:\"threatName,omitempty\" graphql:\"threatName\""
	ThreatType            *string                 "json:\"threatType,omitempty\" graphql:\"threatType\""
	VirusName             *string                 "json:\"virusName,omitempty\" graphql:\"virusName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetAction() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.Action
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetAppID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.AppID
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetAppName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.AppName
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetDNSProtectionCategory() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.DNSProtectionCategory
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetEventType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.EventType
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetRuleID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.RuleID
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetScanResultEvent() *cato_models.ScanResult {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.ScanResultEvent
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetSeverity() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.Severity
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetSignatureID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.SignatureID
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetThreatName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.ThreatName
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetThreatType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.ThreatType
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Events) GetVirusName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Events{}
	}
	return t.VirusName
}

type Xdr_Xdr_Stories_Items_Incident_Threat_Mitres struct {
	ID   *string "json:\"id,omitempty\" graphql:\"id\""
	Name *string "json:\"name,omitempty\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Mitres) GetID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Mitres{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Mitres) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Mitres{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries_Dimensions struct {
	FieldName string  "json:\"fieldName\" graphql:\"fieldName\""
	Value     *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries_Dimensions) GetFieldName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries_Dimensions{}
	}
	return t.FieldName
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries_Dimensions) GetValue() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries_Dimensions{}
	}
	return t.Value
}

type Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries struct {
	Dimensions       []*Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	MeasureFieldName string                                                                               "json:\"measureFieldName\" graphql:\"measureFieldName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries) GetDimensions() []*Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries_Dimensions {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries{}
	}
	return t.Dimensions
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries) GetMeasureFieldName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries{}
	}
	return t.MeasureFieldName
}

type Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries struct {
	Data                    [][]float64                                                             "json:\"data,omitempty\" graphql:\"data\""
	Info                    []string                                                                "json:\"info,omitempty\" graphql:\"info\""
	KeyIncidentTimeseries   *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries "json:\"keyIncidentTimeseries,omitempty\" graphql:\"keyIncidentTimeseries\""
	Label                   string                                                                  "json:\"label\" graphql:\"label\""
	Sum                     *float64                                                                "json:\"sum,omitempty\" graphql:\"sum\""
	UnitsIncidentTimeseries *cato_models.UnitType                                                   "json:\"unitsIncidentTimeseries,omitempty\" graphql:\"unitsIncidentTimeseries\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries) GetData() [][]float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries{}
	}
	return t.Data
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries) GetInfo() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries{}
	}
	return t.Info
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries) GetKeyIncidentTimeseries() *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries_KeyIncidentTimeseries {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries{}
	}
	return t.KeyIncidentTimeseries
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries) GetLabel() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries{}
	}
	return t.Label
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries) GetSum() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries{}
	}
	return t.Sum
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries) GetUnitsIncidentTimeseries() *cato_models.UnitType {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries{}
	}
	return t.UnitsIncidentTimeseries
}

type Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData struct {
	Action                *string                 "json:\"action,omitempty\" graphql:\"action\""
	AppID                 *string                 "json:\"appId,omitempty\" graphql:\"appId\""
	AppName               *string                 "json:\"appName,omitempty\" graphql:\"appName\""
	DNSProtectionCategory *string                 "json:\"dnsProtectionCategory,omitempty\" graphql:\"dnsProtectionCategory\""
	EventType             *string                 "json:\"eventType,omitempty\" graphql:\"eventType\""
	RuleID                *string                 "json:\"ruleId,omitempty\" graphql:\"ruleId\""
	ScanResult            *cato_models.ScanResult "json:\"scanResult,omitempty\" graphql:\"scanResult\""
	Severity              *string                 "json:\"severity,omitempty\" graphql:\"severity\""
	SignatureID           *string                 "json:\"signatureId,omitempty\" graphql:\"signatureId\""
	ThreatName            *string                 "json:\"threatName,omitempty\" graphql:\"threatName\""
	ThreatType            *string                 "json:\"threatType,omitempty\" graphql:\"threatType\""
	VirusName             *string                 "json:\"virusName,omitempty\" graphql:\"virusName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetAction() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.Action
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetAppID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.AppID
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetAppName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.AppName
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetDNSProtectionCategory() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.DNSProtectionCategory
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetEventType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.EventType
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetRuleID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.RuleID
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetScanResult() *cato_models.ScanResult {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.ScanResult
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetSeverity() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.Severity
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetSignatureID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.SignatureID
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetThreatName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.ThreatName
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetThreatType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.ThreatType
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData) GetVirusName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData{}
	}
	return t.VirusName
}

type Xdr_Xdr_Stories_Items_Incident_Threat_Targets struct {
	AnalysisScore         *float64                                                   "json:\"analysisScore,omitempty\" graphql:\"analysisScore\""
	Categories            *string                                                    "json:\"categories,omitempty\" graphql:\"categories\""
	CatoPopularity        *int64                                                     "json:\"catoPopularity,omitempty\" graphql:\"catoPopularity\""
	CountryOfRegistration *string                                                    "json:\"countryOfRegistration,omitempty\" graphql:\"countryOfRegistration\""
	CreationTime          *string                                                    "json:\"creationTime,omitempty\" graphql:\"creationTime\""
	Engines               *int64                                                     "json:\"engines,omitempty\" graphql:\"engines\""
	EventData             []*Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData "json:\"eventData\" graphql:\"eventData\""
	InfectionSource       *bool                                                      "json:\"infectionSource,omitempty\" graphql:\"infectionSource\""
	Name                  *string                                                    "json:\"name,omitempty\" graphql:\"name\""
	SearchHits            *string                                                    "json:\"searchHits,omitempty\" graphql:\"searchHits\""
	ThreatFeeds           *int64                                                     "json:\"threatFeeds,omitempty\" graphql:\"threatFeeds\""
	ThreatReference       *string                                                    "json:\"threatReference,omitempty\" graphql:\"threatReference\""
	TypeIncidentTargetRep *cato_models.TargetType                                    "json:\"typeIncidentTargetRep,omitempty\" graphql:\"typeIncidentTargetRep\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetAnalysisScore() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.AnalysisScore
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetCategories() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.Categories
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetCatoPopularity() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.CatoPopularity
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetCountryOfRegistration() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.CountryOfRegistration
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetCreationTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.CreationTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetEngines() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.Engines
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetEventData() []*Xdr_Xdr_Stories_Items_Incident_Threat_Targets_EventData {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.EventData
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetInfectionSource() *bool {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.InfectionSource
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetSearchHits() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.SearchHits
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetThreatFeeds() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.ThreatFeeds
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetThreatReference() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.ThreatReference
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Targets) GetTypeIncidentTargetRep() *cato_models.TargetType {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Targets{}
	}
	return t.TypeIncidentTargetRep
}

type Xdr_Xdr_Stories_Items_Incident_Threat_Flows struct {
	AppName                *string "json:\"appName,omitempty\" graphql:\"appName\""
	ClientClass            *string "json:\"clientClass,omitempty\" graphql:\"clientClass\""
	CreatedAt              *string "json:\"createdAt,omitempty\" graphql:\"createdAt\""
	DestinationCountry     *string "json:\"destinationCountry,omitempty\" graphql:\"destinationCountry\""
	DestinationGeolocation *string "json:\"destinationGeolocation,omitempty\" graphql:\"destinationGeolocation\""
	DestinationIP          *string "json:\"destinationIp,omitempty\" graphql:\"destinationIp\""
	DestinationPort        *int64  "json:\"destinationPort,omitempty\" graphql:\"destinationPort\""
	Direction              *string "json:\"direction,omitempty\" graphql:\"direction\""
	DNSResponseIP          *string "json:\"dnsResponseIP,omitempty\" graphql:\"dnsResponseIP\""
	Domain                 *string "json:\"domain,omitempty\" graphql:\"domain\""
	FileHash               *string "json:\"fileHash,omitempty\" graphql:\"fileHash\""
	HTTPResponseCode       *int64  "json:\"httpResponseCode,omitempty\" graphql:\"httpResponseCode\""
	Ja3                    *string "json:\"ja3,omitempty\" graphql:\"ja3\""
	Method                 *string "json:\"method,omitempty\" graphql:\"method\""
	Referer                *string "json:\"referer,omitempty\" graphql:\"referer\""
	SmbFileName            *string "json:\"smbFileName,omitempty\" graphql:\"smbFileName\""
	SourceGeolocation      *string "json:\"sourceGeolocation,omitempty\" graphql:\"sourceGeolocation\""
	SourceIP               *string "json:\"sourceIp,omitempty\" graphql:\"sourceIp\""
	SourcePort             *int64  "json:\"sourcePort,omitempty\" graphql:\"sourcePort\""
	Target                 *string "json:\"target,omitempty\" graphql:\"target\""
	TunnelGeolocation      *string "json:\"tunnelGeolocation,omitempty\" graphql:\"tunnelGeolocation\""
	URL                    *string "json:\"url,omitempty\" graphql:\"url\""
	User                   *string "json:\"user,omitempty\" graphql:\"user\""
	UserAgent              *string "json:\"userAgent,omitempty\" graphql:\"userAgent\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetAppName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.AppName
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetClientClass() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.ClientClass
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetCreatedAt() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.CreatedAt
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetDestinationCountry() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.DestinationCountry
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetDestinationGeolocation() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.DestinationGeolocation
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetDestinationIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.DestinationIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetDestinationPort() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.DestinationPort
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetDirection() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.Direction
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetDNSResponseIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.DNSResponseIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetDomain() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.Domain
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetFileHash() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.FileHash
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetHTTPResponseCode() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.HTTPResponseCode
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetJa3() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.Ja3
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetMethod() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.Method
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetReferer() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.Referer
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetSmbFileName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.SmbFileName
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetSourceGeolocation() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.SourceGeolocation
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetSourceIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.SourceIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetSourcePort() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.SourcePort
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetTarget() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.Target
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetTunnelGeolocation() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.TunnelGeolocation
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetURL() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.URL
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetUser() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.User
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat_Flows) GetUserAgent() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat_Flows{}
	}
	return t.UserAgent
}

type Xdr_Xdr_Stories_Items_Incident_Threat struct {
	SimilarStoriesData []*Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData "json:\"similarStoriesData\" graphql:\"similarStoriesData\""
	SrcSiteID          *string                                                     "json:\"srcSiteId,omitempty\" graphql:\"srcSiteId\""
	FlowsCardinality   *int64                                                      "json:\"flowsCardinality,omitempty\" graphql:\"flowsCardinality\""
	RiskLevel          *cato_models.RiskLevelEnum                                  "json:\"riskLevel,omitempty\" graphql:\"riskLevel\""
	Os                 *string                                                     "json:\"os,omitempty\" graphql:\"os\""
	DeviceName         *string                                                     "json:\"deviceName,omitempty\" graphql:\"deviceName\""
	MacAddress         *string                                                     "json:\"macAddress,omitempty\" graphql:\"macAddress\""
	LogonName          *string                                                     "json:\"logonName,omitempty\" graphql:\"logonName\""
	Direction          *string                                                     "json:\"direction,omitempty\" graphql:\"direction\""
	ClientClass        []string                                                    "json:\"clientClass\" graphql:\"clientClass\""
	Events             []*Xdr_Xdr_Stories_Items_Incident_Threat_Events             "json:\"events,omitempty\" graphql:\"events\""
	Mitres             []*Xdr_Xdr_Stories_Items_Incident_Threat_Mitres             "json:\"mitres,omitempty\" graphql:\"mitres\""
	TimeSeries         []*Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries         "json:\"timeSeries,omitempty\" graphql:\"timeSeries\""
	Targets            []*Xdr_Xdr_Stories_Items_Incident_Threat_Targets            "json:\"targets\" graphql:\"targets\""
	Flows              []*Xdr_Xdr_Stories_Items_Incident_Threat_Flows              "json:\"flows,omitempty\" graphql:\"flows\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetSimilarStoriesData() []*Xdr_Xdr_Stories_Items_Incident_Threat_SimilarStoriesData {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.SimilarStoriesData
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetSrcSiteID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.SrcSiteID
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetFlowsCardinality() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.FlowsCardinality
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetRiskLevel() *cato_models.RiskLevelEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.RiskLevel
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetOs() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.Os
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetDeviceName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.DeviceName
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetMacAddress() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.MacAddress
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetLogonName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.LogonName
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetDirection() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.Direction
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetClientClass() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.ClientClass
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetEvents() []*Xdr_Xdr_Stories_Items_Incident_Threat_Events {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.Events
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetMitres() []*Xdr_Xdr_Stories_Items_Incident_Threat_Mitres {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.Mitres
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetTimeSeries() []*Xdr_Xdr_Stories_Items_Incident_Threat_TimeSeries {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.TimeSeries
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetTargets() []*Xdr_Xdr_Stories_Items_Incident_Threat_Targets {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.Targets
}
func (t *Xdr_Xdr_Stories_Items_Incident_Threat) GetFlows() []*Xdr_Xdr_Stories_Items_Incident_Threat_Flows {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_Threat{}
	}
	return t.Flows
}

type Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData struct {
	Indication           *string  "json:\"indication,omitempty\" graphql:\"indication\""
	SimilarityPercentage *float64 "json:\"similarityPercentage,omitempty\" graphql:\"similarityPercentage\""
	StoryID              *string  "json:\"storyId,omitempty\" graphql:\"storyId\""
	ThreatClassification *string  "json:\"threatClassification,omitempty\" graphql:\"threatClassification\""
	ThreatTypeName       *string  "json:\"threatTypeName,omitempty\" graphql:\"threatTypeName\""
	Verdict              *string  "json:\"verdict,omitempty\" graphql:\"verdict\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData) GetIndication() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData{}
	}
	return t.Indication
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData) GetSimilarityPercentage() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData{}
	}
	return t.SimilarityPercentage
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData) GetStoryID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData{}
	}
	return t.StoryID
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData) GetThreatClassification() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData{}
	}
	return t.ThreatClassification
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData) GetThreatTypeName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData{}
	}
	return t.ThreatTypeName
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData) GetVerdict() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData{}
	}
	return t.Verdict
}

type Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events struct {
	Action                *string                 "json:\"action,omitempty\" graphql:\"action\""
	AppID                 *string                 "json:\"appId,omitempty\" graphql:\"appId\""
	AppName               *string                 "json:\"appName,omitempty\" graphql:\"appName\""
	DNSProtectionCategory *string                 "json:\"dnsProtectionCategory,omitempty\" graphql:\"dnsProtectionCategory\""
	EventType             *string                 "json:\"eventType,omitempty\" graphql:\"eventType\""
	RuleID                *string                 "json:\"ruleId,omitempty\" graphql:\"ruleId\""
	ScanResultEvent       *cato_models.ScanResult "json:\"scanResultEvent,omitempty\" graphql:\"scanResultEvent\""
	Severity              *string                 "json:\"severity,omitempty\" graphql:\"severity\""
	SignatureID           *string                 "json:\"signatureId,omitempty\" graphql:\"signatureId\""
	ThreatName            *string                 "json:\"threatName,omitempty\" graphql:\"threatName\""
	ThreatType            *string                 "json:\"threatType,omitempty\" graphql:\"threatType\""
	VirusName             *string                 "json:\"virusName,omitempty\" graphql:\"virusName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetAction() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.Action
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetAppID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.AppID
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetAppName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.AppName
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetDNSProtectionCategory() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.DNSProtectionCategory
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetEventType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.EventType
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetRuleID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.RuleID
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetScanResultEvent() *cato_models.ScanResult {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.ScanResultEvent
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetSeverity() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.Severity
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetSignatureID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.SignatureID
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetThreatName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.ThreatName
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetThreatType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.ThreatType
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events) GetVirusName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events{}
	}
	return t.VirusName
}

type Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Mitres struct {
	ID   *string "json:\"id,omitempty\" graphql:\"id\""
	Name *string "json:\"name,omitempty\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Mitres) GetID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Mitres{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Mitres) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Mitres{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries_Dimensions struct {
	FieldName string  "json:\"fieldName\" graphql:\"fieldName\""
	Value     *string "json:\"value,omitempty\" graphql:\"value\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries_Dimensions) GetFieldName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries_Dimensions{}
	}
	return t.FieldName
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries_Dimensions) GetValue() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries_Dimensions{}
	}
	return t.Value
}

type Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries struct {
	Dimensions       []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries_Dimensions "json:\"dimensions,omitempty\" graphql:\"dimensions\""
	MeasureFieldName string                                                                                         "json:\"measureFieldName\" graphql:\"measureFieldName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries) GetDimensions() []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries_Dimensions {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries{}
	}
	return t.Dimensions
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries) GetMeasureFieldName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries{}
	}
	return t.MeasureFieldName
}

type Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries struct {
	Data                    [][]float64                                                                       "json:\"data,omitempty\" graphql:\"data\""
	Info                    []string                                                                          "json:\"info,omitempty\" graphql:\"info\""
	KeyIncidentTimeseries   *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries "json:\"keyIncidentTimeseries,omitempty\" graphql:\"keyIncidentTimeseries\""
	Label                   string                                                                            "json:\"label\" graphql:\"label\""
	Sum                     *float64                                                                          "json:\"sum,omitempty\" graphql:\"sum\""
	UnitsIncidentTimeseries *cato_models.UnitType                                                             "json:\"unitsIncidentTimeseries,omitempty\" graphql:\"unitsIncidentTimeseries\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries) GetData() [][]float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries{}
	}
	return t.Data
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries) GetInfo() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries{}
	}
	return t.Info
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries) GetKeyIncidentTimeseries() *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries_KeyIncidentTimeseries {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries{}
	}
	return t.KeyIncidentTimeseries
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries) GetLabel() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries{}
	}
	return t.Label
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries) GetSum() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries{}
	}
	return t.Sum
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries) GetUnitsIncidentTimeseries() *cato_models.UnitType {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries{}
	}
	return t.UnitsIncidentTimeseries
}

type Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData struct {
	Action                *string                 "json:\"action,omitempty\" graphql:\"action\""
	AppID                 *string                 "json:\"appId,omitempty\" graphql:\"appId\""
	AppName               *string                 "json:\"appName,omitempty\" graphql:\"appName\""
	DNSProtectionCategory *string                 "json:\"dnsProtectionCategory,omitempty\" graphql:\"dnsProtectionCategory\""
	EventType             *string                 "json:\"eventType,omitempty\" graphql:\"eventType\""
	RuleID                *string                 "json:\"ruleId,omitempty\" graphql:\"ruleId\""
	ScanResult            *cato_models.ScanResult "json:\"scanResult,omitempty\" graphql:\"scanResult\""
	Severity              *string                 "json:\"severity,omitempty\" graphql:\"severity\""
	SignatureID           *string                 "json:\"signatureId,omitempty\" graphql:\"signatureId\""
	ThreatName            *string                 "json:\"threatName,omitempty\" graphql:\"threatName\""
	ThreatType            *string                 "json:\"threatType,omitempty\" graphql:\"threatType\""
	VirusName             *string                 "json:\"virusName,omitempty\" graphql:\"virusName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetAction() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.Action
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetAppID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.AppID
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetAppName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.AppName
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetDNSProtectionCategory() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.DNSProtectionCategory
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetEventType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.EventType
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetRuleID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.RuleID
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetScanResult() *cato_models.ScanResult {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.ScanResult
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetSeverity() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.Severity
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetSignatureID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.SignatureID
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetThreatName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.ThreatName
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetThreatType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.ThreatType
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData) GetVirusName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData{}
	}
	return t.VirusName
}

type Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets struct {
	AnalysisScore         *float64                                                             "json:\"analysisScore,omitempty\" graphql:\"analysisScore\""
	Categories            *string                                                              "json:\"categories,omitempty\" graphql:\"categories\""
	CatoPopularity        *int64                                                               "json:\"catoPopularity,omitempty\" graphql:\"catoPopularity\""
	CountryOfRegistration *string                                                              "json:\"countryOfRegistration,omitempty\" graphql:\"countryOfRegistration\""
	CreationTime          *string                                                              "json:\"creationTime,omitempty\" graphql:\"creationTime\""
	Engines               *int64                                                               "json:\"engines,omitempty\" graphql:\"engines\""
	EventData             []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData "json:\"eventData\" graphql:\"eventData\""
	InfectionSource       *bool                                                                "json:\"infectionSource,omitempty\" graphql:\"infectionSource\""
	Name                  *string                                                              "json:\"name,omitempty\" graphql:\"name\""
	SearchHits            *string                                                              "json:\"searchHits,omitempty\" graphql:\"searchHits\""
	ThreatFeeds           *int64                                                               "json:\"threatFeeds,omitempty\" graphql:\"threatFeeds\""
	ThreatReference       *string                                                              "json:\"threatReference,omitempty\" graphql:\"threatReference\""
	TypeIncidentTargetRep *cato_models.TargetType                                              "json:\"typeIncidentTargetRep,omitempty\" graphql:\"typeIncidentTargetRep\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetAnalysisScore() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.AnalysisScore
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetCategories() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.Categories
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetCatoPopularity() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.CatoPopularity
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetCountryOfRegistration() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.CountryOfRegistration
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetCreationTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.CreationTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetEngines() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.Engines
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetEventData() []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets_EventData {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.EventData
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetInfectionSource() *bool {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.InfectionSource
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetSearchHits() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.SearchHits
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetThreatFeeds() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.ThreatFeeds
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetThreatReference() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.ThreatReference
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets) GetTypeIncidentTargetRep() *cato_models.TargetType {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets{}
	}
	return t.TypeIncidentTargetRep
}

type Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents struct {
	AppName                *string "json:\"appName,omitempty\" graphql:\"appName\""
	ClientClass            *string "json:\"clientClass,omitempty\" graphql:\"clientClass\""
	CreatedAt              *string "json:\"createdAt,omitempty\" graphql:\"createdAt\""
	DestinationCountry     *string "json:\"destinationCountry,omitempty\" graphql:\"destinationCountry\""
	DestinationGeolocation *string "json:\"destinationGeolocation,omitempty\" graphql:\"destinationGeolocation\""
	DestinationIP          *string "json:\"destinationIp,omitempty\" graphql:\"destinationIp\""
	DestinationPort        *int64  "json:\"destinationPort,omitempty\" graphql:\"destinationPort\""
	Direction              *string "json:\"direction,omitempty\" graphql:\"direction\""
	DNSResponseIP          *string "json:\"dnsResponseIP,omitempty\" graphql:\"dnsResponseIP\""
	Domain                 *string "json:\"domain,omitempty\" graphql:\"domain\""
	FileHash               *string "json:\"fileHash,omitempty\" graphql:\"fileHash\""
	HTTPResponseCode       *int64  "json:\"httpResponseCode,omitempty\" graphql:\"httpResponseCode\""
	Ja3                    *string "json:\"ja3,omitempty\" graphql:\"ja3\""
	Method                 *string "json:\"method,omitempty\" graphql:\"method\""
	Referrer               *string "json:\"referrer,omitempty\" graphql:\"referrer\""
	SmbFileName            *string "json:\"smbFileName,omitempty\" graphql:\"smbFileName\""
	SourceGeolocation      *string "json:\"sourceGeolocation,omitempty\" graphql:\"sourceGeolocation\""
	SourceIP               *string "json:\"sourceIp,omitempty\" graphql:\"sourceIp\""
	SourcePort             *int64  "json:\"sourcePort,omitempty\" graphql:\"sourcePort\""
	Target                 *string "json:\"target,omitempty\" graphql:\"target\""
	TunnelGeolocation      *string "json:\"tunnelGeolocation,omitempty\" graphql:\"tunnelGeolocation\""
	URL                    *string "json:\"url,omitempty\" graphql:\"url\""
	User                   *string "json:\"user,omitempty\" graphql:\"user\""
	UserAgent              *string "json:\"userAgent,omitempty\" graphql:\"userAgent\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetAppName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.AppName
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetClientClass() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.ClientClass
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetCreatedAt() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.CreatedAt
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetDestinationCountry() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.DestinationCountry
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetDestinationGeolocation() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.DestinationGeolocation
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetDestinationIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.DestinationIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetDestinationPort() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.DestinationPort
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetDirection() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.Direction
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetDNSResponseIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.DNSResponseIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetDomain() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.Domain
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetFileHash() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.FileHash
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetHTTPResponseCode() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.HTTPResponseCode
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetJa3() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.Ja3
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetMethod() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.Method
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetReferrer() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.Referrer
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetSmbFileName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.SmbFileName
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetSourceGeolocation() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.SourceGeolocation
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetSourceIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.SourceIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetSourcePort() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.SourcePort
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetTarget() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.Target
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetTunnelGeolocation() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.TunnelGeolocation
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetURL() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.URL
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetUser() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.User
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents) GetUserAgent() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents{}
	}
	return t.UserAgent
}

type Xdr_Xdr_Stories_Items_Incident_ThreatPrevention struct {
	SimilarStoriesData      []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData      "json:\"similarStoriesData\" graphql:\"similarStoriesData\""
	SrcSiteID               *string                                                                    "json:\"srcSiteId,omitempty\" graphql:\"srcSiteId\""
	FlowsCardinality        *int64                                                                     "json:\"flowsCardinality,omitempty\" graphql:\"flowsCardinality\""
	RiskLevel               *cato_models.RiskLevelEnum                                                 "json:\"riskLevel,omitempty\" graphql:\"riskLevel\""
	Os                      *string                                                                    "json:\"os,omitempty\" graphql:\"os\""
	DeviceName              *string                                                                    "json:\"deviceName,omitempty\" graphql:\"deviceName\""
	MacAddress              *string                                                                    "json:\"macAddress,omitempty\" graphql:\"macAddress\""
	LogonName               *string                                                                    "json:\"logonName,omitempty\" graphql:\"logonName\""
	Direction               *string                                                                    "json:\"direction,omitempty\" graphql:\"direction\""
	ClientClass             []string                                                                   "json:\"clientClass\" graphql:\"clientClass\""
	Events                  []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events                  "json:\"events,omitempty\" graphql:\"events\""
	Mitres                  []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Mitres                  "json:\"mitres,omitempty\" graphql:\"mitres\""
	TimeSeries              []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries              "json:\"timeSeries,omitempty\" graphql:\"timeSeries\""
	Targets                 []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets                 "json:\"targets\" graphql:\"targets\""
	ThreatPreventionsEvents []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents "json:\"threatPreventionsEvents,omitempty\" graphql:\"threatPreventionsEvents\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetSimilarStoriesData() []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_SimilarStoriesData {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.SimilarStoriesData
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetSrcSiteID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.SrcSiteID
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetFlowsCardinality() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.FlowsCardinality
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetRiskLevel() *cato_models.RiskLevelEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.RiskLevel
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetOs() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.Os
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetDeviceName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.DeviceName
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetMacAddress() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.MacAddress
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetLogonName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.LogonName
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetDirection() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.Direction
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetClientClass() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.ClientClass
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetEvents() []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Events {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.Events
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetMitres() []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Mitres {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.Mitres
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetTimeSeries() []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_TimeSeries {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.TimeSeries
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetTargets() []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_Targets {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.Targets
}
func (t *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention) GetThreatPreventionsEvents() []*Xdr_Xdr_Stories_Items_Incident_ThreatPrevention_ThreatPreventionsEvents {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_ThreatPrevention{}
	}
	return t.ThreatPreventionsEvents
}

type Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData struct {
	Indication           *string  "json:\"indication,omitempty\" graphql:\"indication\""
	SimilarityPercentage *float64 "json:\"similarityPercentage,omitempty\" graphql:\"similarityPercentage\""
	StoryID              *string  "json:\"storyId,omitempty\" graphql:\"storyId\""
	ThreatClassification *string  "json:\"threatClassification,omitempty\" graphql:\"threatClassification\""
	ThreatTypeName       *string  "json:\"threatTypeName,omitempty\" graphql:\"threatTypeName\""
	Verdict              *string  "json:\"verdict,omitempty\" graphql:\"verdict\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData) GetIndication() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData{}
	}
	return t.Indication
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData) GetSimilarityPercentage() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData{}
	}
	return t.SimilarityPercentage
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData) GetStoryID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData{}
	}
	return t.StoryID
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData) GetThreatClassification() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData{}
	}
	return t.ThreatClassification
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData) GetThreatTypeName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData{}
	}
	return t.ThreatTypeName
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData) GetVerdict() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData{}
	}
	return t.Verdict
}

type Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent struct {
	CatoAsn        *scalars.Asn16 "json:\"catoAsn,omitempty\" graphql:\"catoAsn\""
	CatoIP         *string        "json:\"catoIp,omitempty\" graphql:\"catoIp\""
	ConnectionName *string        "json:\"connectionName,omitempty\" graphql:\"connectionName\""
	PeerAsn        *scalars.Asn32 "json:\"peerAsn,omitempty\" graphql:\"peerAsn\""
	PeerIP         *string        "json:\"peerIp,omitempty\" graphql:\"peerIp\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent) GetCatoAsn() *scalars.Asn16 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent{}
	}
	return t.CatoAsn
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent) GetCatoIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent{}
	}
	return t.CatoIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent) GetConnectionName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent{}
	}
	return t.ConnectionName
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent) GetPeerAsn() *scalars.Asn32 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent{}
	}
	return t.PeerAsn
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent) GetPeerIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent{}
	}
	return t.PeerIP
}

type Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_LinkQualityIssueNetworkTimelineEvent struct {
	Current   *int64                                "json:\"current,omitempty\" graphql:\"current\""
	Direction *cato_models.TrafficDirectionEnum     "json:\"direction,omitempty\" graphql:\"direction\""
	IssueType *cato_models.LinkQualityIssueTypeEnum "json:\"issueType,omitempty\" graphql:\"issueType\""
	Threshold *int64                                "json:\"threshold,omitempty\" graphql:\"threshold\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_LinkQualityIssueNetworkTimelineEvent) GetCurrent() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_LinkQualityIssueNetworkTimelineEvent{}
	}
	return t.Current
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_LinkQualityIssueNetworkTimelineEvent) GetDirection() *cato_models.TrafficDirectionEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_LinkQualityIssueNetworkTimelineEvent{}
	}
	return t.Direction
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_LinkQualityIssueNetworkTimelineEvent) GetIssueType() *cato_models.LinkQualityIssueTypeEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_LinkQualityIssueNetworkTimelineEvent{}
	}
	return t.IssueType
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_LinkQualityIssueNetworkTimelineEvent) GetThreshold() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_LinkQualityIssueNetworkTimelineEvent{}
	}
	return t.Threshold
}

type Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline struct {
	Acknowledged                             *bool                                                                                                           "json:\"acknowledged,omitempty\" graphql:\"acknowledged\""
	BgpConnectionNetworkTimelineEvent        *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent    "json:\"bgpConnectionNetworkTimelineEvent,omitempty\" graphql:\"bgpConnectionNetworkTimelineEvent\""
	Created                                  string                                                                                                          "json:\"created\" graphql:\"created\""
	Description                              *string                                                                                                         "json:\"description,omitempty\" graphql:\"description\""
	DeviceConfigHaRoleNetworkTimelineEvent   *cato_models.DeviceConfigHaRoleEnum                                                                             "json:\"deviceConfigHaRoleNetworkTimelineEvent,omitempty\" graphql:\"deviceConfigHaRoleNetworkTimelineEvent\""
	DeviceHaRoleStateNetworkTimelineEvent    *cato_models.DeviceHaRoleStateEnum                                                                              "json:\"deviceHaRoleStateNetworkTimelineEvent,omitempty\" graphql:\"deviceHaRoleStateNetworkTimelineEvent\""
	EventIds                                 []string                                                                                                        "json:\"eventIds\" graphql:\"eventIds\""
	EventTypeNetworkTimelineEvent            *cato_models.NetworkXDREventTypeEnum                                                                            "json:\"eventTypeNetworkTimelineEvent,omitempty\" graphql:\"eventTypeNetworkTimelineEvent\""
	HostIP                                   *string                                                                                                         "json:\"hostIp,omitempty\" graphql:\"hostIp\""
	IncidentID                               *string                                                                                                         "json:\"incidentId,omitempty\" graphql:\"incidentId\""
	Isp                                      *string                                                                                                         "json:\"isp,omitempty\" graphql:\"isp\""
	LinkConfigBandwidth                      *string                                                                                                         "json:\"linkConfigBandwidth,omitempty\" graphql:\"linkConfigBandwidth\""
	LinkConfigPrecedenceNetworkTimelineEvent *cato_models.LinkConfigPrecedenceEnum                                                                           "json:\"linkConfigPrecedenceNetworkTimelineEvent,omitempty\" graphql:\"linkConfigPrecedenceNetworkTimelineEvent\""
	LinkID                                   *string                                                                                                         "json:\"linkId,omitempty\" graphql:\"linkId\""
	LinkName                                 *string                                                                                                         "json:\"linkName,omitempty\" graphql:\"linkName\""
	LinkQualityIssueNetworkTimelineEvent     *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_LinkQualityIssueNetworkTimelineEvent "json:\"linkQualityIssueNetworkTimelineEvent,omitempty\" graphql:\"linkQualityIssueNetworkTimelineEvent\""
	LinkStatusNetworkTimelineEvent           *cato_models.LinkStatusEnum                                                                                     "json:\"linkStatusNetworkTimelineEvent,omitempty\" graphql:\"linkStatusNetworkTimelineEvent\""
	Muted                                    *bool                                                                                                           "json:\"muted,omitempty\" graphql:\"muted\""
	NetworkEventSourceNetworkTimelineEvent   *cato_models.NetworkEventSourceEnum                                                                             "json:\"networkEventSourceNetworkTimelineEvent,omitempty\" graphql:\"networkEventSourceNetworkTimelineEvent\""
	Pop                                      *string                                                                                                         "json:\"pop,omitempty\" graphql:\"pop\""
	RuleName                                 *string                                                                                                         "json:\"ruleName,omitempty\" graphql:\"ruleName\""
	SocketSerialID                           *string                                                                                                         "json:\"socketSerialId,omitempty\" graphql:\"socketSerialId\""
	TunnelResetCount                         *int64                                                                                                          "json:\"tunnelResetCount,omitempty\" graphql:\"tunnelResetCount\""
	Validated                                string                                                                                                          "json:\"validated\" graphql:\"validated\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetAcknowledged() *bool {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.Acknowledged
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetBgpConnectionNetworkTimelineEvent() *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_BgpConnectionNetworkTimelineEvent {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.BgpConnectionNetworkTimelineEvent
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetCreated() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.Created
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetDescription() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.Description
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetDeviceConfigHaRoleNetworkTimelineEvent() *cato_models.DeviceConfigHaRoleEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.DeviceConfigHaRoleNetworkTimelineEvent
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetDeviceHaRoleStateNetworkTimelineEvent() *cato_models.DeviceHaRoleStateEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.DeviceHaRoleStateNetworkTimelineEvent
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetEventIds() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.EventIds
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetEventTypeNetworkTimelineEvent() *cato_models.NetworkXDREventTypeEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.EventTypeNetworkTimelineEvent
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetHostIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.HostIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetIncidentID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.IncidentID
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetIsp() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.Isp
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetLinkConfigBandwidth() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.LinkConfigBandwidth
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetLinkConfigPrecedenceNetworkTimelineEvent() *cato_models.LinkConfigPrecedenceEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.LinkConfigPrecedenceNetworkTimelineEvent
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetLinkID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.LinkID
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetLinkName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.LinkName
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetLinkQualityIssueNetworkTimelineEvent() *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline_LinkQualityIssueNetworkTimelineEvent {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.LinkQualityIssueNetworkTimelineEvent
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetLinkStatusNetworkTimelineEvent() *cato_models.LinkStatusEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.LinkStatusNetworkTimelineEvent
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetMuted() *bool {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.Muted
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetNetworkEventSourceNetworkTimelineEvent() *cato_models.NetworkEventSourceEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.NetworkEventSourceNetworkTimelineEvent
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetPop() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.Pop
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetRuleName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.RuleName
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetSocketSerialID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.SocketSerialID
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetTunnelResetCount() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.TunnelResetCount
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline) GetValidated() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline{}
	}
	return t.Validated
}

type Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection struct {
	CatoAsn        *scalars.Asn16 "json:\"catoAsn,omitempty\" graphql:\"catoAsn\""
	CatoIP         *string        "json:\"catoIp,omitempty\" graphql:\"catoIp\""
	ConnectionName *string        "json:\"connectionName,omitempty\" graphql:\"connectionName\""
	PeerAsn        *scalars.Asn32 "json:\"peerAsn,omitempty\" graphql:\"peerAsn\""
	PeerIP         *string        "json:\"peerIp,omitempty\" graphql:\"peerIp\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection) GetCatoAsn() *scalars.Asn16 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection{}
	}
	return t.CatoAsn
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection) GetCatoIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection{}
	}
	return t.CatoIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection) GetConnectionName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection{}
	}
	return t.ConnectionName
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection) GetPeerAsn() *scalars.Asn32 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection{}
	}
	return t.PeerAsn
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection) GetPeerIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection{}
	}
	return t.PeerIP
}

type Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails struct {
	ActiveLicense    *bool                             "json:\"activeLicense,omitempty\" graphql:\"activeLicense\""
	Comments         *string                           "json:\"comments,omitempty\" graphql:\"comments\""
	Description      *string                           "json:\"description,omitempty\" graphql:\"description\""
	IspLinkID        *string                           "json:\"ispLinkId,omitempty\" graphql:\"ispLinkId\""
	LinkID           *string                           "json:\"linkId,omitempty\" graphql:\"linkId\""
	OnboardingStatus *cato_models.IlmmOnboardingStatus "json:\"onboardingStatus,omitempty\" graphql:\"onboardingStatus\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails) GetActiveLicense() *bool {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails{}
	}
	return t.ActiveLicense
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails) GetComments() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails{}
	}
	return t.Comments
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails) GetDescription() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails{}
	}
	return t.Description
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails) GetIspLinkID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails{}
	}
	return t.IspLinkID
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails) GetLinkID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails{}
	}
	return t.LinkID
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails) GetOnboardingStatus() *cato_models.IlmmOnboardingStatus {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails{}
	}
	return t.OnboardingStatus
}

type Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails_LoaFile struct {
	FileHash   *string       "json:\"fileHash,omitempty\" graphql:\"fileHash\""
	FileName   *string       "json:\"fileName,omitempty\" graphql:\"fileName\""
	UploadedAt *scalars.Time "json:\"uploadedAt,omitempty\" graphql:\"uploadedAt\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails_LoaFile) GetFileHash() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails_LoaFile{}
	}
	return t.FileHash
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails_LoaFile) GetFileName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails_LoaFile{}
	}
	return t.FileName
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails_LoaFile) GetUploadedAt() *scalars.Time {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails_LoaFile{}
	}
	return t.UploadedAt
}

type Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails struct {
	CountryCode  *string                                                                                      "json:\"countryCode,omitempty\" graphql:\"countryCode\""
	Description  *string                                                                                      "json:\"description,omitempty\" graphql:\"description\""
	IspAccountID *string                                                                                      "json:\"ispAccountId,omitempty\" graphql:\"ispAccountId\""
	LoaFile      *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails_LoaFile "json:\"loaFile,omitempty\" graphql:\"loaFile\""
	Name         *string                                                                                      "json:\"name,omitempty\" graphql:\"name\""
	SupportEmail *string                                                                                      "json:\"supportEmail,omitempty\" graphql:\"supportEmail\""
	SupportPhone *string                                                                                      "json:\"supportPhone,omitempty\" graphql:\"supportPhone\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails) GetCountryCode() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails{}
	}
	return t.CountryCode
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails) GetDescription() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails{}
	}
	return t.Description
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails) GetIspAccountID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails{}
	}
	return t.IspAccountID
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails) GetLoaFile() *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails_LoaFile {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails{}
	}
	return t.LoaFile
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails) GetSupportEmail() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails{}
	}
	return t.SupportEmail
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails) GetSupportPhone() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails{}
	}
	return t.SupportPhone
}

type Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_Contacts struct {
	Email *string "json:\"email,omitempty\" graphql:\"email\""
	Name  *string "json:\"name,omitempty\" graphql:\"name\""
	Phone *string "json:\"phone,omitempty\" graphql:\"phone\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_Contacts) GetEmail() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_Contacts{}
	}
	return t.Email
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_Contacts) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_Contacts{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_Contacts) GetPhone() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_Contacts{}
	}
	return t.Phone
}

type Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails struct {
	Contacts               []*Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_Contacts             "json:\"contacts,omitempty\" graphql:\"contacts\""
	IspDetailsIlmmDetails  *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails  "json:\"ispDetailsIlmmDetails,omitempty\" graphql:\"ispDetailsIlmmDetails\""
	LinkDetailsIlmmDetails *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails "json:\"linkDetailsIlmmDetails,omitempty\" graphql:\"linkDetailsIlmmDetails\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails) GetContacts() []*Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_Contacts {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails{}
	}
	return t.Contacts
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails) GetIspDetailsIlmmDetails() *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_IspDetailsIlmmDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails{}
	}
	return t.IspDetailsIlmmDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails) GetLinkDetailsIlmmDetails() *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails_LinkDetailsIlmmDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails{}
	}
	return t.LinkDetailsIlmmDetails
}

type Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident struct {
	SimilarStoriesData      []*Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData      "json:\"similarStoriesData\" graphql:\"similarStoriesData\""
	NetworkIncidentTimeline []*Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline "json:\"networkIncidentTimeline\" graphql:\"networkIncidentTimeline\""
	StoryType               string                                                                       "json:\"storyType\" graphql:\"storyType\""
	Occurrences             *int64                                                                       "json:\"occurrences,omitempty\" graphql:\"occurrences\""
	SiteConnectionType      *string                                                                      "json:\"siteConnectionType,omitempty\" graphql:\"siteConnectionType\""
	SiteConfigLocation      *string                                                                      "json:\"siteConfigLocation,omitempty\" graphql:\"siteConfigLocation\""
	Acknowledged            *bool                                                                        "json:\"acknowledged,omitempty\" graphql:\"acknowledged\""
	LinkID                  *string                                                                      "json:\"linkId,omitempty\" graphql:\"linkId\""
	LinkName                *string                                                                      "json:\"linkName,omitempty\" graphql:\"linkName\""
	LinkConfigPrecedence    *cato_models.LinkConfigPrecedenceEnum                                        "json:\"linkConfigPrecedence,omitempty\" graphql:\"linkConfigPrecedence\""
	DeviceConfigHaRole      *cato_models.DeviceConfigHaRoleEnum                                          "json:\"deviceConfigHaRole,omitempty\" graphql:\"deviceConfigHaRole\""
	LicenseRegion           *string                                                                      "json:\"licenseRegion,omitempty\" graphql:\"licenseRegion\""
	LicenseBandwidth        *string                                                                      "json:\"licenseBandwidth,omitempty\" graphql:\"licenseBandwidth\""
	Pop                     *string                                                                      "json:\"pop,omitempty\" graphql:\"pop\""
	Isp                     *string                                                                      "json:\"isp,omitempty\" graphql:\"isp\""
	BgpConnection           *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection             "json:\"bgpConnection,omitempty\" graphql:\"bgpConnection\""
	HostIP                  *string                                                                      "json:\"hostIp,omitempty\" graphql:\"hostIp\""
	RuleName                *string                                                                      "json:\"ruleName,omitempty\" graphql:\"ruleName\""
	Muted                   *bool                                                                        "json:\"muted,omitempty\" graphql:\"muted\""
	IlmmDetails             *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails               "json:\"ilmmDetails,omitempty\" graphql:\"ilmmDetails\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetSimilarStoriesData() []*Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_SimilarStoriesData {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.SimilarStoriesData
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetNetworkIncidentTimeline() []*Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_NetworkIncidentTimeline {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.NetworkIncidentTimeline
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetStoryType() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.StoryType
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetOccurrences() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.Occurrences
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetSiteConnectionType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.SiteConnectionType
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetSiteConfigLocation() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.SiteConfigLocation
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetAcknowledged() *bool {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.Acknowledged
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetLinkID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.LinkID
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetLinkName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.LinkName
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetLinkConfigPrecedence() *cato_models.LinkConfigPrecedenceEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.LinkConfigPrecedence
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetDeviceConfigHaRole() *cato_models.DeviceConfigHaRoleEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.DeviceConfigHaRole
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetLicenseRegion() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.LicenseRegion
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetLicenseBandwidth() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.LicenseBandwidth
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetPop() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.Pop
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetIsp() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.Isp
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetBgpConnection() *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_BgpConnection {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.BgpConnection
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetHostIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.HostIP
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetRuleName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.RuleName
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetMuted() *bool {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.Muted
}
func (t *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident) GetIlmmDetails() *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident_IlmmDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident{}
	}
	return t.IlmmDetails
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData struct {
	Indication           *string  "json:\"indication,omitempty\" graphql:\"indication\""
	SimilarityPercentage *float64 "json:\"similarityPercentage,omitempty\" graphql:\"similarityPercentage\""
	StoryID              *string  "json:\"storyId,omitempty\" graphql:\"storyId\""
	ThreatClassification *string  "json:\"threatClassification,omitempty\" graphql:\"threatClassification\""
	ThreatTypeName       *string  "json:\"threatTypeName,omitempty\" graphql:\"threatTypeName\""
	Verdict              *string  "json:\"verdict,omitempty\" graphql:\"verdict\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData) GetIndication() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData{}
	}
	return t.Indication
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData) GetSimilarityPercentage() *float64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData{}
	}
	return t.SimilarityPercentage
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData) GetStoryID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData{}
	}
	return t.StoryID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData) GetThreatClassification() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData{}
	}
	return t.ThreatClassification
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData) GetThreatTypeName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData{}
	}
	return t.ThreatTypeName
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData) GetVerdict() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData{}
	}
	return t.Verdict
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_OsDetailsCatoEndpointDeviceDetails struct {
	OsBuild   *int64  "json:\"osBuild,omitempty\" graphql:\"osBuild\""
	OsType    string  "json:\"osType\" graphql:\"osType\""
	OsVersion *string "json:\"osVersion,omitempty\" graphql:\"osVersion\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_OsDetailsCatoEndpointDeviceDetails) GetOsBuild() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_OsDetailsCatoEndpointDeviceDetails{}
	}
	return t.OsBuild
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_OsDetailsCatoEndpointDeviceDetails) GetOsType() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_OsDetailsCatoEndpointDeviceDetails{}
	}
	return t.OsType
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_OsDetailsCatoEndpointDeviceDetails) GetOsVersion() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_OsDetailsCatoEndpointDeviceDetails{}
	}
	return t.OsVersion
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_MicrosoftEndpointUser struct {
	UserSid       *string "json:\"userSid,omitempty\" graphql:\"userSid\""
	AccountName   *string "json:\"accountName,omitempty\" graphql:\"accountName\""
	DomainName    *string "json:\"domainName,omitempty\" graphql:\"domainName\""
	PrincipalName *string "json:\"principalName,omitempty\" graphql:\"principalName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_MicrosoftEndpointUser) GetUserSid() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_MicrosoftEndpointUser{}
	}
	return t.UserSid
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_MicrosoftEndpointUser) GetAccountName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_MicrosoftEndpointUser{}
	}
	return t.AccountName
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_MicrosoftEndpointUser) GetDomainName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_MicrosoftEndpointUser{}
	}
	return t.DomainName
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_MicrosoftEndpointUser) GetPrincipalName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_MicrosoftEndpointUser{}
	}
	return t.PrincipalName
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_CatoEndpointUser struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_CatoEndpointUser) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_CatoEndpointUser{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_CatoEndpointUser) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_CatoEndpointUser{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails struct {
	CatoEndpointUser      Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_CatoEndpointUser      "graphql:\"... on CatoEndpointUser\""
	MicrosoftEndpointUser Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_MicrosoftEndpointUser "graphql:\"... on MicrosoftEndpointUser\""
	ID                    string                                                                                                          "json:\"id\" graphql:\"id\""
	Name                  string                                                                                                          "json:\"name\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails) GetCatoEndpointUser() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_CatoEndpointUser {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails{}
	}
	return &t.CatoEndpointUser
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails) GetMicrosoftEndpointUser() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails_MicrosoftEndpointUser {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails{}
	}
	return &t.MicrosoftEndpointUser
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device struct {
	DeviceName                             *string                                                                                      "json:\"deviceName,omitempty\" graphql:\"deviceName\""
	ID                                     string                                                                                       "json:\"id\" graphql:\"id\""
	LoggedOnUsersCatoEndpointDeviceDetails []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails "json:\"loggedOnUsersCatoEndpointDeviceDetails\" graphql:\"loggedOnUsersCatoEndpointDeviceDetails\""
	MacAddress                             *string                                                                                      "json:\"macAddress,omitempty\" graphql:\"macAddress\""
	OsDetailsCatoEndpointDeviceDetails     *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_OsDetailsCatoEndpointDeviceDetails       "json:\"osDetailsCatoEndpointDeviceDetails,omitempty\" graphql:\"osDetailsCatoEndpointDeviceDetails\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device) GetDeviceName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device{}
	}
	return t.DeviceName
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device) GetLoggedOnUsersCatoEndpointDeviceDetails() []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_LoggedOnUsersCatoEndpointDeviceDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device{}
	}
	return t.LoggedOnUsersCatoEndpointDeviceDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device) GetMacAddress() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device{}
	}
	return t.MacAddress
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device) GetOsDetailsCatoEndpointDeviceDetails() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device_OsDetailsCatoEndpointDeviceDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device{}
	}
	return t.OsDetailsCatoEndpointDeviceDetails
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreTechnique struct {
	ID   *string "json:\"id,omitempty\" graphql:\"id\""
	Name *string "json:\"name,omitempty\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreTechnique) GetID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreTechnique{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreTechnique) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreTechnique{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreSubTechnique struct {
	ID   *string "json:\"id,omitempty\" graphql:\"id\""
	Name *string "json:\"name,omitempty\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreSubTechnique) GetID() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreSubTechnique{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreSubTechnique) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreSubTechnique{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile struct {
	Issuer    *string "json:\"issuer,omitempty\" graphql:\"issuer\""
	Md5       *string "json:\"md5,omitempty\" graphql:\"md5\""
	Name      *string "json:\"name,omitempty\" graphql:\"name\""
	Path      *string "json:\"path,omitempty\" graphql:\"path\""
	Publisher *string "json:\"publisher,omitempty\" graphql:\"publisher\""
	Sha1      *string "json:\"sha1,omitempty\" graphql:\"sha1\""
	Sha256    *string "json:\"sha256,omitempty\" graphql:\"sha256\""
	Signer    *string "json:\"signer,omitempty\" graphql:\"signer\""
	Size      *int64  "json:\"size,omitempty\" graphql:\"size\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile) GetIssuer() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile{}
	}
	return t.Issuer
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile) GetMd5() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile{}
	}
	return t.Md5
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile) GetPath() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile{}
	}
	return t.Path
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile) GetPublisher() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile{}
	}
	return t.Publisher
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile) GetSha1() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile{}
	}
	return t.Sha1
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile) GetSha256() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile{}
	}
	return t.Sha256
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile) GetSigner() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile{}
	}
	return t.Signer
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile) GetSize() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile{}
	}
	return t.Size
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_MicrosoftEndpointUser struct {
	UserSid       *string "json:\"userSid,omitempty\" graphql:\"userSid\""
	AccountName   *string "json:\"accountName,omitempty\" graphql:\"accountName\""
	DomainName    *string "json:\"domainName,omitempty\" graphql:\"domainName\""
	PrincipalName *string "json:\"principalName,omitempty\" graphql:\"principalName\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_MicrosoftEndpointUser) GetUserSid() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_MicrosoftEndpointUser{}
	}
	return t.UserSid
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_MicrosoftEndpointUser) GetAccountName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_MicrosoftEndpointUser{}
	}
	return t.AccountName
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_MicrosoftEndpointUser) GetDomainName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_MicrosoftEndpointUser{}
	}
	return t.DomainName
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_MicrosoftEndpointUser) GetPrincipalName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_MicrosoftEndpointUser{}
	}
	return t.PrincipalName
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_CatoEndpointUser struct {
	ID   string "json:\"id\" graphql:\"id\""
	Name string "json:\"name\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_CatoEndpointUser) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_CatoEndpointUser{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_CatoEndpointUser) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_CatoEndpointUser{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount struct {
	CatoEndpointUser      Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_CatoEndpointUser      "graphql:\"... on CatoEndpointUser\""
	MicrosoftEndpointUser Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_MicrosoftEndpointUser "graphql:\"... on MicrosoftEndpointUser\""
	ID                    string                                                                                                             "json:\"id\" graphql:\"id\""
	Name                  string                                                                                                             "json:\"name\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount) GetCatoEndpointUser() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_CatoEndpointUser {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount{}
	}
	return &t.CatoEndpointUser
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount) GetMicrosoftEndpointUser() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount_MicrosoftEndpointUser {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount{}
	}
	return &t.MicrosoftEndpointUser
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount) GetName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource struct {
	ProcessID          int64                                                                                         "json:\"processId\" graphql:\"processId\""
	ProcessCommandLine *string                                                                                       "json:\"processCommandLine,omitempty\" graphql:\"processCommandLine\""
	ImageFile          *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile   "json:\"imageFile,omitempty\" graphql:\"imageFile\""
	UserAccount        *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount "json:\"userAccount,omitempty\" graphql:\"userAccount\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource) GetProcessID() int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource{}
	}
	return t.ProcessID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource) GetProcessCommandLine() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource{}
	}
	return t.ProcessCommandLine
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource) GetImageFile() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_ImageFile {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource{}
	}
	return t.ImageFile
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource) GetUserAccount() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource_UserAccount {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource{}
	}
	return t.UserAccount
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails struct {
	Issuer    *string "json:\"issuer,omitempty\" graphql:\"issuer\""
	Md5       *string "json:\"md5,omitempty\" graphql:\"md5\""
	Name      *string "json:\"name,omitempty\" graphql:\"name\""
	Path      *string "json:\"path,omitempty\" graphql:\"path\""
	Publisher *string "json:\"publisher,omitempty\" graphql:\"publisher\""
	Sha1      *string "json:\"sha1,omitempty\" graphql:\"sha1\""
	Sha256    *string "json:\"sha256,omitempty\" graphql:\"sha256\""
	Signer    *string "json:\"signer,omitempty\" graphql:\"signer\""
	Size      *int64  "json:\"size,omitempty\" graphql:\"size\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails) GetIssuer() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails{}
	}
	return t.Issuer
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails) GetMd5() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails{}
	}
	return t.Md5
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails{}
	}
	return t.Name
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails) GetPath() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails{}
	}
	return t.Path
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails) GetPublisher() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails{}
	}
	return t.Publisher
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails) GetSha1() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails{}
	}
	return t.Sha1
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails) GetSha256() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails{}
	}
	return t.Sha256
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails) GetSigner() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails{}
	}
	return t.Signer
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails) GetSize() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails{}
	}
	return t.Size
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource struct {
	FileDetails     *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails "json:\"fileDetails,omitempty\" graphql:\"fileDetails\""
	DetectionStatus *cato_models.DetectionStatusEnum                                                           "json:\"detectionStatus,omitempty\" graphql:\"detectionStatus\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource) GetFileDetails() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource_FileDetails {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource{}
	}
	return t.FileDetails
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource) GetDetectionStatus() *cato_models.DetectionStatusEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource{}
	}
	return t.DetectionStatus
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources struct {
	CatoFileResource    Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource    "graphql:\"... on CatoFileResource\""
	CatoProcessResource Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource "graphql:\"... on CatoProcessResource\""
	CreatedDateTime     *string                                                                          "json:\"createdDateTime,omitempty\" graphql:\"createdDateTime\""
	ID                  string                                                                           "json:\"id\" graphql:\"id\""
	RemediationStatus   *cato_models.RemediationStatusEnum                                               "json:\"remediationStatus,omitempty\" graphql:\"remediationStatus\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources) GetCatoFileResource() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoFileResource {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources{}
	}
	return &t.CatoFileResource
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources) GetCatoProcessResource() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources_CatoProcessResource {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources{}
	}
	return &t.CatoProcessResource
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources) GetCreatedDateTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources{}
	}
	return t.CreatedDateTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources) GetRemediationStatus() *cato_models.RemediationStatusEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources{}
	}
	return t.RemediationStatus
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Activities struct {
	ID               string "json:\"id\" graphql:\"id\""
	ParentResourceID string "json:\"parentResourceId\" graphql:\"parentResourceId\""
	ResourceID       string "json:\"resourceId\" graphql:\"resourceId\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Activities) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Activities{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Activities) GetParentResourceID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Activities{}
	}
	return t.ParentResourceID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Activities) GetResourceID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Activities{}
	}
	return t.ResourceID
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts struct {
	Activities                  []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Activities        "json:\"activities\" graphql:\"activities\""
	CreatedDateTime             *string                                                                 "json:\"createdDateTime,omitempty\" graphql:\"createdDateTime\""
	Criticality                 *int64                                                                  "json:\"criticality,omitempty\" graphql:\"criticality\""
	Description                 *string                                                                 "json:\"description,omitempty\" graphql:\"description\""
	EndpointProtectionProfile   *string                                                                 "json:\"endpointProtectionProfile,omitempty\" graphql:\"endpointProtectionProfile\""
	EngineTypeCatoEndpointAlert *cato_models.CatoEndpointEngineType                                     "json:\"engineTypeCatoEndpointAlert,omitempty\" graphql:\"engineTypeCatoEndpointAlert\""
	ID                          string                                                                  "json:\"id\" graphql:\"id\""
	MitreSubTechnique           []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreSubTechnique "json:\"mitreSubTechnique\" graphql:\"mitreSubTechnique\""
	MitreTechnique              []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreTechnique    "json:\"mitreTechnique\" graphql:\"mitreTechnique\""
	Resources                   []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources         "json:\"resources\" graphql:\"resources\""
	StatusCatoEndpointAlert     *cato_models.RemediationStatusEnum                                      "json:\"statusCatoEndpointAlert,omitempty\" graphql:\"statusCatoEndpointAlert\""
	ThreatName                  *string                                                                 "json:\"threatName,omitempty\" graphql:\"threatName\""
	Title                       *string                                                                 "json:\"title,omitempty\" graphql:\"title\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetActivities() []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Activities {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.Activities
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetCreatedDateTime() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.CreatedDateTime
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetCriticality() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.Criticality
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetDescription() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.Description
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetEndpointProtectionProfile() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.EndpointProtectionProfile
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetEngineTypeCatoEndpointAlert() *cato_models.CatoEndpointEngineType {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.EngineTypeCatoEndpointAlert
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetMitreSubTechnique() []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreSubTechnique {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.MitreSubTechnique
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetMitreTechnique() []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_MitreTechnique {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.MitreTechnique
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetResources() []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts_Resources {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.Resources
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetStatusCatoEndpointAlert() *cato_models.RemediationStatusEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.StatusCatoEndpointAlert
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetThreatName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.ThreatName
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts) GetTitle() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts{}
	}
	return t.Title
}

type Xdr_Xdr_Stories_Items_Incident_CatoEndpoint struct {
	SimilarStoriesData []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData "json:\"similarStoriesData\" graphql:\"similarStoriesData\""
	Device             *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device               "json:\"device,omitempty\" graphql:\"device\""
	Alerts             []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts             "json:\"alerts\" graphql:\"alerts\""
}

func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint) GetSimilarStoriesData() []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_SimilarStoriesData {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint{}
	}
	return t.SimilarStoriesData
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint) GetDevice() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Device {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint{}
	}
	return t.Device
}
func (t *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint) GetAlerts() []*Xdr_Xdr_Stories_Items_Incident_CatoEndpoint_Alerts {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident_CatoEndpoint{}
	}
	return t.Alerts
}

type Xdr_Xdr_Stories_Items_Incident struct {
	AnomalyEvents                  Xdr_Xdr_Stories_Items_Incident_AnomalyEvents                  "graphql:\"... on AnomalyEvents\""
	AnomalyStats                   Xdr_Xdr_Stories_Items_Incident_AnomalyStats                   "graphql:\"... on AnomalyStats\""
	CatoEndpoint                   Xdr_Xdr_Stories_Items_Incident_CatoEndpoint                   "graphql:\"... on CatoEndpoint\""
	MicrosoftEndpoint              Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint              "graphql:\"... on MicrosoftEndpoint\""
	NetworkXDRIncident             Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident             "graphql:\"... on NetworkXDRIncident\""
	Threat                         Xdr_Xdr_Stories_Items_Incident_Threat                         "graphql:\"... on Threat\""
	ThreatPrevention               Xdr_Xdr_Stories_Items_Incident_ThreatPrevention               "graphql:\"... on ThreatPrevention\""
	AnalystFeedbackMergedIncident  *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident "json:\"analystFeedbackMergedIncident,omitempty\" graphql:\"analystFeedbackMergedIncident\""
	ConnectionTypeMergedIncident   *cato_models.ConnectionTypeEnum                               "json:\"connectionTypeMergedIncident,omitempty\" graphql:\"connectionTypeMergedIncident\""
	Criticality                    *int64                                                        "json:\"criticality,omitempty\" graphql:\"criticality\""
	Description                    *string                                                       "json:\"description,omitempty\" graphql:\"description\""
	EngineTypeMergedIncident       *cato_models.StoryEngineTypeEnum                              "json:\"engineTypeMergedIncident,omitempty\" graphql:\"engineTypeMergedIncident\""
	FirstSignal                    string                                                        "json:\"firstSignal\" graphql:\"firstSignal\""
	ID                             string                                                        "json:\"id\" graphql:\"id\""
	Indication                     string                                                        "json:\"indication\" graphql:\"indication\""
	LastSignal                     string                                                        "json:\"lastSignal\" graphql:\"lastSignal\""
	PredictedThreatType            *string                                                       "json:\"predictedThreatType,omitempty\" graphql:\"predictedThreatType\""
	PredictedVerdictMergedIncident *cato_models.StoryVerdictEnum                                 "json:\"predictedVerdictMergedIncident,omitempty\" graphql:\"predictedVerdictMergedIncident\""
	Producer                       cato_models.StoryProducerEnum                                 "json:\"producer\" graphql:\"producer\""
	ProducerName                   string                                                        "json:\"producerName\" graphql:\"producerName\""
	QueryName                      *string                                                       "json:\"queryName,omitempty\" graphql:\"queryName\""
	Research                       *bool                                                         "json:\"research,omitempty\" graphql:\"research\""
	SiteMergedIncident             *Xdr_Xdr_Stories_Items_Incident_SiteMergedIncident            "json:\"siteMergedIncident,omitempty\" graphql:\"siteMergedIncident\""
	SiteName                       *string                                                       "json:\"siteName,omitempty\" graphql:\"siteName\""
	Source                         *string                                                       "json:\"source,omitempty\" graphql:\"source\""
	SourceIP                       *string                                                       "json:\"sourceIp,omitempty\" graphql:\"sourceIp\""
	StatusMergedIncident           *cato_models.StoryStatusEnum                                  "json:\"statusMergedIncident,omitempty\" graphql:\"statusMergedIncident\""
	StoryDuration                  *int64                                                        "json:\"storyDuration,omitempty\" graphql:\"storyDuration\""
	Ticket                         *string                                                       "json:\"ticket,omitempty\" graphql:\"ticket\""
	UserMergedIncident             *Xdr_Xdr_Stories_Items_Incident_UserMergedIncident            "json:\"userMergedIncident,omitempty\" graphql:\"userMergedIncident\""
	VendorMergedIncident           *cato_models.VendorEnum                                       "json:\"vendorMergedIncident,omitempty\" graphql:\"vendorMergedIncident\""
}

func (t *Xdr_Xdr_Stories_Items_Incident) GetAnomalyEvents() *Xdr_Xdr_Stories_Items_Incident_AnomalyEvents {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return &t.AnomalyEvents
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetAnomalyStats() *Xdr_Xdr_Stories_Items_Incident_AnomalyStats {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return &t.AnomalyStats
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetCatoEndpoint() *Xdr_Xdr_Stories_Items_Incident_CatoEndpoint {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return &t.CatoEndpoint
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetMicrosoftEndpoint() *Xdr_Xdr_Stories_Items_Incident_MicrosoftEndpoint {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return &t.MicrosoftEndpoint
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetNetworkXDRIncident() *Xdr_Xdr_Stories_Items_Incident_NetworkXDRIncident {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return &t.NetworkXDRIncident
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetThreat() *Xdr_Xdr_Stories_Items_Incident_Threat {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return &t.Threat
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetThreatPrevention() *Xdr_Xdr_Stories_Items_Incident_ThreatPrevention {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return &t.ThreatPrevention
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetAnalystFeedbackMergedIncident() *Xdr_Xdr_Stories_Items_Incident_AnalystFeedbackMergedIncident {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.AnalystFeedbackMergedIncident
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetConnectionTypeMergedIncident() *cato_models.ConnectionTypeEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.ConnectionTypeMergedIncident
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetCriticality() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.Criticality
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetDescription() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.Description
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetEngineTypeMergedIncident() *cato_models.StoryEngineTypeEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.EngineTypeMergedIncident
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetFirstSignal() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.FirstSignal
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetIndication() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.Indication
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetLastSignal() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.LastSignal
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetPredictedThreatType() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.PredictedThreatType
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetPredictedVerdictMergedIncident() *cato_models.StoryVerdictEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.PredictedVerdictMergedIncident
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetProducer() *cato_models.StoryProducerEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return &t.Producer
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetProducerName() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.ProducerName
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetQueryName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.QueryName
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetResearch() *bool {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.Research
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetSiteMergedIncident() *Xdr_Xdr_Stories_Items_Incident_SiteMergedIncident {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.SiteMergedIncident
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetSiteName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.SiteName
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetSource() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.Source
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetSourceIP() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.SourceIP
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetStatusMergedIncident() *cato_models.StoryStatusEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.StatusMergedIncident
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetStoryDuration() *int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.StoryDuration
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetTicket() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.Ticket
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetUserMergedIncident() *Xdr_Xdr_Stories_Items_Incident_UserMergedIncident {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.UserMergedIncident
}
func (t *Xdr_Xdr_Stories_Items_Incident) GetVendorMergedIncident() *cato_models.VendorEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Incident{}
	}
	return t.VendorMergedIncident
}

type Xdr_Xdr_Stories_Items_Timeline_AnalystInfoTimelineItem struct {
	Email *string "json:\"email,omitempty\" graphql:\"email\""
	Name  *string "json:\"name,omitempty\" graphql:\"name\""
}

func (t *Xdr_Xdr_Stories_Items_Timeline_AnalystInfoTimelineItem) GetEmail() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Timeline_AnalystInfoTimelineItem{}
	}
	return t.Email
}
func (t *Xdr_Xdr_Stories_Items_Timeline_AnalystInfoTimelineItem) GetName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Timeline_AnalystInfoTimelineItem{}
	}
	return t.Name
}

type Xdr_Xdr_Stories_Items_Timeline struct {
	AdditionalInfo          *string                                                 "json:\"additionalInfo,omitempty\" graphql:\"additionalInfo\""
	AnalystInfoTimelineItem *Xdr_Xdr_Stories_Items_Timeline_AnalystInfoTimelineItem "json:\"analystInfoTimelineItem,omitempty\" graphql:\"analystInfoTimelineItem\""
	CategoryTimelineItem    *cato_models.TimelineItemCategoryEnum                   "json:\"categoryTimelineItem,omitempty\" graphql:\"categoryTimelineItem\""
	Context                 string                                                  "json:\"context\" graphql:\"context\""
	CreatedAt               string                                                  "json:\"createdAt\" graphql:\"createdAt\""
	Description             string                                                  "json:\"description\" graphql:\"description\""
	Descriptions            []string                                                "json:\"descriptions\" graphql:\"descriptions\""
	Type                    cato_models.TimelineTypeEnum                            "json:\"type\" graphql:\"type\""
}

func (t *Xdr_Xdr_Stories_Items_Timeline) GetAdditionalInfo() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Timeline{}
	}
	return t.AdditionalInfo
}
func (t *Xdr_Xdr_Stories_Items_Timeline) GetAnalystInfoTimelineItem() *Xdr_Xdr_Stories_Items_Timeline_AnalystInfoTimelineItem {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Timeline{}
	}
	return t.AnalystInfoTimelineItem
}
func (t *Xdr_Xdr_Stories_Items_Timeline) GetCategoryTimelineItem() *cato_models.TimelineItemCategoryEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Timeline{}
	}
	return t.CategoryTimelineItem
}
func (t *Xdr_Xdr_Stories_Items_Timeline) GetContext() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Timeline{}
	}
	return t.Context
}
func (t *Xdr_Xdr_Stories_Items_Timeline) GetCreatedAt() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Timeline{}
	}
	return t.CreatedAt
}
func (t *Xdr_Xdr_Stories_Items_Timeline) GetDescription() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Timeline{}
	}
	return t.Description
}
func (t *Xdr_Xdr_Stories_Items_Timeline) GetDescriptions() []string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Timeline{}
	}
	return t.Descriptions
}
func (t *Xdr_Xdr_Stories_Items_Timeline) GetType() *cato_models.TimelineTypeEnum {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items_Timeline{}
	}
	return &t.Type
}

type Xdr_Xdr_Stories_Items struct {
	AccountID    int64                             "json:\"accountId\" graphql:\"accountId\""
	AccountName  *string                           "json:\"accountName,omitempty\" graphql:\"accountName\""
	AnalystEmail *string                           "json:\"analystEmail,omitempty\" graphql:\"analystEmail\""
	AnalystName  *string                           "json:\"analystName,omitempty\" graphql:\"analystName\""
	CreatedAt    string                            "json:\"createdAt\" graphql:\"createdAt\""
	ID           string                            "json:\"id\" graphql:\"id\""
	Incident     Xdr_Xdr_Stories_Items_Incident    "json:\"incident\" graphql:\"incident\""
	Playbook     *string                           "json:\"playbook,omitempty\" graphql:\"playbook\""
	Summary      *string                           "json:\"summary,omitempty\" graphql:\"summary\""
	Timeline     []*Xdr_Xdr_Stories_Items_Timeline "json:\"timeline\" graphql:\"timeline\""
	UpdatedAt    string                            "json:\"updatedAt\" graphql:\"updatedAt\""
}

func (t *Xdr_Xdr_Stories_Items) GetAccountID() int64 {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items{}
	}
	return t.AccountID
}
func (t *Xdr_Xdr_Stories_Items) GetAccountName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items{}
	}
	return t.AccountName
}
func (t *Xdr_Xdr_Stories_Items) GetAnalystEmail() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items{}
	}
	return t.AnalystEmail
}
func (t *Xdr_Xdr_Stories_Items) GetAnalystName() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items{}
	}
	return t.AnalystName
}
func (t *Xdr_Xdr_Stories_Items) GetCreatedAt() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items{}
	}
	return t.CreatedAt
}
func (t *Xdr_Xdr_Stories_Items) GetID() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items{}
	}
	return t.ID
}
func (t *Xdr_Xdr_Stories_Items) GetIncident() *Xdr_Xdr_Stories_Items_Incident {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items{}
	}
	return &t.Incident
}
func (t *Xdr_Xdr_Stories_Items) GetPlaybook() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items{}
	}
	return t.Playbook
}
func (t *Xdr_Xdr_Stories_Items) GetSummary() *string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items{}
	}
	return t.Summary
}
func (t *Xdr_Xdr_Stories_Items) GetTimeline() []*Xdr_Xdr_Stories_Items_Timeline {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items{}
	}
	return t.Timeline
}
func (t *Xdr_Xdr_Stories_Items) GetUpdatedAt() string {
	if t == nil {
		t = &Xdr_Xdr_Stories_Items{}
	}
	return t.UpdatedAt
}

type Xdr_Xdr_Stories struct {
	Items  []*Xdr_Xdr_Stories_Items "json:\"items\" graphql:\"items\""
	Paging Xdr_Xdr_Stories_Paging   "json:\"paging\" graphql:\"paging\""
}

func (t *Xdr_Xdr_Stories) GetItems() []*Xdr_Xdr_Stories_Items {
	if t == nil {
		t = &Xdr_Xdr_Stories{}
	}
	return t.Items
}
func (t *Xdr_Xdr_Stories) GetPaging() *Xdr_Xdr_Stories_Paging {
	if t == nil {
		t = &Xdr_Xdr_Stories{}
	}
	return &t.Paging
}

type Xdr_Xdr struct {
	Stories *Xdr_Xdr_Stories "json:\"stories,omitempty\" graphql:\"stories\""
}

func (t *Xdr_Xdr) GetStories() *Xdr_Xdr_Stories {
	if t == nil {
		t = &Xdr_Xdr{}
	}
	return t.Stories
}

type AccountBySubdomain struct {
	AccountBySubdomain []*AccountBySubdomain_AccountBySubdomain "json:\"accountBySubdomain,omitempty\" graphql:\"accountBySubdomain\""
}

func (t *AccountBySubdomain) GetAccountBySubdomain() []*AccountBySubdomain_AccountBySubdomain {
	if t == nil {
		t = &AccountBySubdomain{}
	}
	return t.AccountBySubdomain
}

type AccountMetrics struct {
	AccountMetrics *AccountMetrics_AccountMetrics "json:\"accountMetrics,omitempty\" graphql:\"accountMetrics\""
}

func (t *AccountMetrics) GetAccountMetrics() *AccountMetrics_AccountMetrics {
	if t == nil {
		t = &AccountMetrics{}
	}
	return t.AccountMetrics
}

type AccountRoles struct {
	AccountRoles AccountRoles_AccountRoles "json:\"accountRoles\" graphql:\"accountRoles\""
}

func (t *AccountRoles) GetAccountRoles() *AccountRoles_AccountRoles {
	if t == nil {
		t = &AccountRoles{}
	}
	return &t.AccountRoles
}

type AccountSnapshot struct {
	AccountSnapshot *AccountSnapshot_AccountSnapshot "json:\"accountSnapshot,omitempty\" graphql:\"accountSnapshot\""
}

func (t *AccountSnapshot) GetAccountSnapshot() *AccountSnapshot_AccountSnapshot {
	if t == nil {
		t = &AccountSnapshot{}
	}
	return t.AccountSnapshot
}

type AdminAddAdmin struct {
	Admin AdminAddAdmin_Admin "json:\"admin\" graphql:\"admin\""
}

func (t *AdminAddAdmin) GetAdmin() *AdminAddAdmin_Admin {
	if t == nil {
		t = &AdminAddAdmin{}
	}
	return &t.Admin
}

type AdminRemoveAdmin struct {
	Admin AdminRemoveAdmin_Admin "json:\"admin\" graphql:\"admin\""
}

func (t *AdminRemoveAdmin) GetAdmin() *AdminRemoveAdmin_Admin {
	if t == nil {
		t = &AdminRemoveAdmin{}
	}
	return &t.Admin
}

type AdminUpdateAdmin struct {
	Admin AdminUpdateAdmin_Admin "json:\"admin\" graphql:\"admin\""
}

func (t *AdminUpdateAdmin) GetAdmin() *AdminUpdateAdmin_Admin {
	if t == nil {
		t = &AdminUpdateAdmin{}
	}
	return &t.Admin
}

type Admin struct {
	Admin *Admin_Admin "json:\"admin,omitempty\" graphql:\"admin\""
}

func (t *Admin) GetAdmin() *Admin_Admin {
	if t == nil {
		t = &Admin{}
	}
	return t.Admin
}

type Admins struct {
	Admins *Admins_Admins "json:\"admins,omitempty\" graphql:\"admins\""
}

func (t *Admins) GetAdmins() *Admins_Admins {
	if t == nil {
		t = &Admins{}
	}
	return t.Admins
}

type AppStats struct {
	AppStats *AppStats_AppStats "json:\"appStats,omitempty\" graphql:\"appStats\""
}

func (t *AppStats) GetAppStats() *AppStats_AppStats {
	if t == nil {
		t = &AppStats{}
	}
	return t.AppStats
}

type AppStatsTimeSeries struct {
	AppStatsTimeSeries *AppStatsTimeSeries_AppStatsTimeSeries "json:\"appStatsTimeSeries,omitempty\" graphql:\"appStatsTimeSeries\""
}

func (t *AppStatsTimeSeries) GetAppStatsTimeSeries() *AppStatsTimeSeries_AppStatsTimeSeries {
	if t == nil {
		t = &AppStatsTimeSeries{}
	}
	return t.AppStatsTimeSeries
}

type AuditFeed struct {
	AuditFeed *AuditFeed_AuditFeed "json:\"auditFeed,omitempty\" graphql:\"auditFeed\""
}

func (t *AuditFeed) GetAuditFeed() *AuditFeed_AuditFeed {
	if t == nil {
		t = &AuditFeed{}
	}
	return t.AuditFeed
}

type EntityLookup struct {
	EntityLookup EntityLookup_EntityLookup "json:\"entityLookup\" graphql:\"entityLookup\""
}

func (t *EntityLookup) GetEntityLookup() *EntityLookup_EntityLookup {
	if t == nil {
		t = &EntityLookup{}
	}
	return &t.EntityLookup
}

type Events struct {
	Events *Events_Events "json:\"events,omitempty\" graphql:\"events\""
}

func (t *Events) GetEvents() *Events_Events {
	if t == nil {
		t = &Events{}
	}
	return t.Events
}

type EventsFeed struct {
	EventsFeed *EventsFeed_EventsFeed "json:\"eventsFeed,omitempty\" graphql:\"eventsFeed\""
}

func (t *EventsFeed) GetEventsFeed() *EventsFeed_EventsFeed {
	if t == nil {
		t = &EventsFeed{}
	}
	return t.EventsFeed
}

type EventsTimeSeries struct {
	EventsTimeSeries *EventsTimeSeries_EventsTimeSeries "json:\"eventsTimeSeries,omitempty\" graphql:\"eventsTimeSeries\""
}

func (t *EventsTimeSeries) GetEventsTimeSeries() *EventsTimeSeries_EventsTimeSeries {
	if t == nil {
		t = &EventsTimeSeries{}
	}
	return t.EventsTimeSeries
}

type HardwareManagement struct {
	HardwareManagement *HardwareManagement_HardwareManagement "json:\"hardwareManagement,omitempty\" graphql:\"hardwareManagement\""
}

func (t *HardwareManagement) GetHardwareManagement() *HardwareManagement_HardwareManagement {
	if t == nil {
		t = &HardwareManagement{}
	}
	return t.HardwareManagement
}

type Licensing struct {
	Licensing *Licensing_Licensing "json:\"licensing,omitempty\" graphql:\"licensing\""
}

func (t *Licensing) GetLicensing() *Licensing_Licensing {
	if t == nil {
		t = &Licensing{}
	}
	return t.Licensing
}

type SiteAddBgpPeer struct {
	Site SiteAddBgpPeer_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteAddBgpPeer) GetSite() *SiteAddBgpPeer_Site {
	if t == nil {
		t = &SiteAddBgpPeer{}
	}
	return &t.Site
}

type SiteRemoveBgpPeer struct {
	Site SiteRemoveBgpPeer_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteRemoveBgpPeer) GetSite() *SiteRemoveBgpPeer_Site {
	if t == nil {
		t = &SiteRemoveBgpPeer{}
	}
	return &t.Site
}

type SiteUpdateBgpPeer struct {
	Site SiteUpdateBgpPeer_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteUpdateBgpPeer) GetSite() *SiteUpdateBgpPeer_Site {
	if t == nil {
		t = &SiteUpdateBgpPeer{}
	}
	return &t.Site
}

type SitesAddBgpPeer struct {
	Sites SitesAddBgpPeer_Sites "json:\"sites\" graphql:\"sites\""
}

func (t *SitesAddBgpPeer) GetSites() *SitesAddBgpPeer_Sites {
	if t == nil {
		t = &SitesAddBgpPeer{}
	}
	return &t.Sites
}

type SitesRemoveBgpPeer struct {
	Sites SitesRemoveBgpPeer_Sites "json:\"sites\" graphql:\"sites\""
}

func (t *SitesRemoveBgpPeer) GetSites() *SitesRemoveBgpPeer_Sites {
	if t == nil {
		t = &SitesRemoveBgpPeer{}
	}
	return &t.Sites
}

type SitesUpdateBgpPeer struct {
	Sites SitesUpdateBgpPeer_Sites "json:\"sites\" graphql:\"sites\""
}

func (t *SitesUpdateBgpPeer) GetSites() *SitesUpdateBgpPeer_Sites {
	if t == nil {
		t = &SitesUpdateBgpPeer{}
	}
	return &t.Sites
}

type PolicyInternetFirewallAddSection struct {
	Policy *PolicyInternetFirewallAddSection_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallAddSection) GetPolicy() *PolicyInternetFirewallAddSection_Policy {
	if t == nil {
		t = &PolicyInternetFirewallAddSection{}
	}
	return t.Policy
}

type PolicyInternetFirewallCreatePolicyRevision struct {
	Policy *PolicyInternetFirewallCreatePolicyRevision_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallCreatePolicyRevision) GetPolicy() *PolicyInternetFirewallCreatePolicyRevision_Policy {
	if t == nil {
		t = &PolicyInternetFirewallCreatePolicyRevision{}
	}
	return t.Policy
}

type PolicyInternetFirewallDiscardPolicyRevision struct {
	Policy *PolicyInternetFirewallDiscardPolicyRevision_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallDiscardPolicyRevision) GetPolicy() *PolicyInternetFirewallDiscardPolicyRevision_Policy {
	if t == nil {
		t = &PolicyInternetFirewallDiscardPolicyRevision{}
	}
	return t.Policy
}

type PolicyInternetFirewallMoveRule struct {
	Policy *PolicyInternetFirewallMoveRule_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallMoveRule) GetPolicy() *PolicyInternetFirewallMoveRule_Policy {
	if t == nil {
		t = &PolicyInternetFirewallMoveRule{}
	}
	return t.Policy
}

type PolicyInternetFirewallMoveSection struct {
	Policy *PolicyInternetFirewallMoveSection_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallMoveSection) GetPolicy() *PolicyInternetFirewallMoveSection_Policy {
	if t == nil {
		t = &PolicyInternetFirewallMoveSection{}
	}
	return t.Policy
}

type PolicyInternetFirewallRemoveRule struct {
	Policy *PolicyInternetFirewallRemoveRule_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallRemoveRule) GetPolicy() *PolicyInternetFirewallRemoveRule_Policy {
	if t == nil {
		t = &PolicyInternetFirewallRemoveRule{}
	}
	return t.Policy
}

type PolicyInternetFirewallRemoveSection struct {
	Policy *PolicyInternetFirewallRemoveSection_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallRemoveSection) GetPolicy() *PolicyInternetFirewallRemoveSection_Policy {
	if t == nil {
		t = &PolicyInternetFirewallRemoveSection{}
	}
	return t.Policy
}

type PolicyInternetFirewallPublishPolicyRevision struct {
	Policy *PolicyInternetFirewallPublishPolicyRevision_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallPublishPolicyRevision) GetPolicy() *PolicyInternetFirewallPublishPolicyRevision_Policy {
	if t == nil {
		t = &PolicyInternetFirewallPublishPolicyRevision{}
	}
	return t.Policy
}

type PolicyInternetFirewallUpdateRule struct {
	Policy *PolicyInternetFirewallUpdateRule_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallUpdateRule) GetPolicy() *PolicyInternetFirewallUpdateRule_Policy {
	if t == nil {
		t = &PolicyInternetFirewallUpdateRule{}
	}
	return t.Policy
}

type PolicyInternetFirewallUpdateSection struct {
	Policy *PolicyInternetFirewallUpdateSection_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallUpdateSection) GetPolicy() *PolicyInternetFirewallUpdateSection_Policy {
	if t == nil {
		t = &PolicyInternetFirewallUpdateSection{}
	}
	return t.Policy
}

type PolicyInternetFirewallUpdatePolicy struct {
	Policy *PolicyInternetFirewallUpdatePolicy_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallUpdatePolicy) GetPolicy() *PolicyInternetFirewallUpdatePolicy_Policy {
	if t == nil {
		t = &PolicyInternetFirewallUpdatePolicy{}
	}
	return t.Policy
}

type Policy struct {
	Policy *Policy_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *Policy) GetPolicy() *Policy_Policy {
	if t == nil {
		t = &Policy{}
	}
	return t.Policy
}

type PolicyInternetFirewallAddRule struct {
	Policy *PolicyInternetFirewallAddRule_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyInternetFirewallAddRule) GetPolicy() *PolicyInternetFirewallAddRule_Policy {
	if t == nil {
		t = &PolicyInternetFirewallAddRule{}
	}
	return t.Policy
}

type PolicyWanFirewallAddRule struct {
	Policy *PolicyWanFirewallAddRule_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallAddRule) GetPolicy() *PolicyWanFirewallAddRule_Policy {
	if t == nil {
		t = &PolicyWanFirewallAddRule{}
	}
	return t.Policy
}

type PolicyWanFirewallAddSection struct {
	Policy *PolicyWanFirewallAddSection_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallAddSection) GetPolicy() *PolicyWanFirewallAddSection_Policy {
	if t == nil {
		t = &PolicyWanFirewallAddSection{}
	}
	return t.Policy
}

type PolicyWanFirewallCreatePolicyRevision struct {
	Policy *PolicyWanFirewallCreatePolicyRevision_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallCreatePolicyRevision) GetPolicy() *PolicyWanFirewallCreatePolicyRevision_Policy {
	if t == nil {
		t = &PolicyWanFirewallCreatePolicyRevision{}
	}
	return t.Policy
}

type PolicyWanFirewallDiscardPolicyRevision struct {
	Policy *PolicyWanFirewallDiscardPolicyRevision_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallDiscardPolicyRevision) GetPolicy() *PolicyWanFirewallDiscardPolicyRevision_Policy {
	if t == nil {
		t = &PolicyWanFirewallDiscardPolicyRevision{}
	}
	return t.Policy
}

type PolicyWanFirewallMoveRule struct {
	Policy *PolicyWanFirewallMoveRule_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallMoveRule) GetPolicy() *PolicyWanFirewallMoveRule_Policy {
	if t == nil {
		t = &PolicyWanFirewallMoveRule{}
	}
	return t.Policy
}

type PolicyWanFirewallMoveSection struct {
	Policy *PolicyWanFirewallMoveSection_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallMoveSection) GetPolicy() *PolicyWanFirewallMoveSection_Policy {
	if t == nil {
		t = &PolicyWanFirewallMoveSection{}
	}
	return t.Policy
}

type PolicyWanFirewallPublishPolicyRevision struct {
	Policy *PolicyWanFirewallPublishPolicyRevision_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallPublishPolicyRevision) GetPolicy() *PolicyWanFirewallPublishPolicyRevision_Policy {
	if t == nil {
		t = &PolicyWanFirewallPublishPolicyRevision{}
	}
	return t.Policy
}

type PolicyWanFirewallRemoveRule struct {
	Policy *PolicyWanFirewallRemoveRule_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallRemoveRule) GetPolicy() *PolicyWanFirewallRemoveRule_Policy {
	if t == nil {
		t = &PolicyWanFirewallRemoveRule{}
	}
	return t.Policy
}

type PolicyWanFirewallRemoveSection struct {
	Policy *PolicyWanFirewallRemoveSection_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallRemoveSection) GetPolicy() *PolicyWanFirewallRemoveSection_Policy {
	if t == nil {
		t = &PolicyWanFirewallRemoveSection{}
	}
	return t.Policy
}

type PolicyWanFirewallUpdatePolicy struct {
	Policy *PolicyWanFirewallUpdatePolicy_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallUpdatePolicy) GetPolicy() *PolicyWanFirewallUpdatePolicy_Policy {
	if t == nil {
		t = &PolicyWanFirewallUpdatePolicy{}
	}
	return t.Policy
}

type PolicyWanFirewallUpdateRule struct {
	Policy *PolicyWanFirewallUpdateRule_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallUpdateRule) GetPolicy() *PolicyWanFirewallUpdateRule_Policy {
	if t == nil {
		t = &PolicyWanFirewallUpdateRule{}
	}
	return t.Policy
}

type PolicyWanFirewallUpdateSection struct {
	Policy *PolicyWanFirewallUpdateSection_Policy "json:\"policy,omitempty\" graphql:\"policy\""
}

func (t *PolicyWanFirewallUpdateSection) GetPolicy() *PolicyWanFirewallUpdateSection_Policy {
	if t == nil {
		t = &PolicyWanFirewallUpdateSection{}
	}
	return t.Policy
}

type Site struct {
	Site Site_Site "json:\"site\" graphql:\"site\""
}

func (t *Site) GetSite() *Site_Site {
	if t == nil {
		t = &Site{}
	}
	return &t.Site
}

type SiteAddIpsecIkeV2Site struct {
	Site SiteAddIpsecIkeV2Site_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteAddIpsecIkeV2Site) GetSite() *SiteAddIpsecIkeV2Site_Site {
	if t == nil {
		t = &SiteAddIpsecIkeV2Site{}
	}
	return &t.Site
}

type SiteAddIpsecIkeV2SiteTunnels struct {
	Site SiteAddIpsecIkeV2SiteTunnels_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteAddIpsecIkeV2SiteTunnels) GetSite() *SiteAddIpsecIkeV2SiteTunnels_Site {
	if t == nil {
		t = &SiteAddIpsecIkeV2SiteTunnels{}
	}
	return &t.Site
}

type SiteAddNetworkRange struct {
	Site SiteAddNetworkRange_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteAddNetworkRange) GetSite() *SiteAddNetworkRange_Site {
	if t == nil {
		t = &SiteAddNetworkRange{}
	}
	return &t.Site
}

type SiteAddSocketSite struct {
	Site SiteAddSocketSite_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteAddSocketSite) GetSite() *SiteAddSocketSite_Site {
	if t == nil {
		t = &SiteAddSocketSite{}
	}
	return &t.Site
}

type SiteAddStaticHost struct {
	Site SiteAddStaticHost_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteAddStaticHost) GetSite() *SiteAddStaticHost_Site {
	if t == nil {
		t = &SiteAddStaticHost{}
	}
	return &t.Site
}

type SiteRemoveNetworkRange struct {
	Site SiteRemoveNetworkRange_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteRemoveNetworkRange) GetSite() *SiteRemoveNetworkRange_Site {
	if t == nil {
		t = &SiteRemoveNetworkRange{}
	}
	return &t.Site
}

type SiteRemoveSite struct {
	Site SiteRemoveSite_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteRemoveSite) GetSite() *SiteRemoveSite_Site {
	if t == nil {
		t = &SiteRemoveSite{}
	}
	return &t.Site
}

type SiteRemoveStaticHost struct {
	Site SiteRemoveStaticHost_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteRemoveStaticHost) GetSite() *SiteRemoveStaticHost_Site {
	if t == nil {
		t = &SiteRemoveStaticHost{}
	}
	return &t.Site
}

type SiteUpdateHa struct {
	Site SiteUpdateHa_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteUpdateHa) GetSite() *SiteUpdateHa_Site {
	if t == nil {
		t = &SiteUpdateHa{}
	}
	return &t.Site
}

type SiteUpdateIpsecIkeV2SiteGeneralDetails struct {
	Site SiteUpdateIpsecIkeV2SiteGeneralDetails_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteUpdateIpsecIkeV2SiteGeneralDetails) GetSite() *SiteUpdateIpsecIkeV2SiteGeneralDetails_Site {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteGeneralDetails{}
	}
	return &t.Site
}

type SiteUpdateIpsecIkeV2SiteTunnels struct {
	Site SiteUpdateIpsecIkeV2SiteTunnels_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteUpdateIpsecIkeV2SiteTunnels) GetSite() *SiteUpdateIpsecIkeV2SiteTunnels_Site {
	if t == nil {
		t = &SiteUpdateIpsecIkeV2SiteTunnels{}
	}
	return &t.Site
}

type SiteUpdateNetworkRange struct {
	Site SiteUpdateNetworkRange_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteUpdateNetworkRange) GetSite() *SiteUpdateNetworkRange_Site {
	if t == nil {
		t = &SiteUpdateNetworkRange{}
	}
	return &t.Site
}

type SiteUpdateSiteGeneralDetails struct {
	Site SiteUpdateSiteGeneralDetails_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteUpdateSiteGeneralDetails) GetSite() *SiteUpdateSiteGeneralDetails_Site {
	if t == nil {
		t = &SiteUpdateSiteGeneralDetails{}
	}
	return &t.Site
}

type SiteUpdateSocketInterface struct {
	Site SiteUpdateSocketInterface_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteUpdateSocketInterface) GetSite() *SiteUpdateSocketInterface_Site {
	if t == nil {
		t = &SiteUpdateSocketInterface{}
	}
	return &t.Site
}

type SiteUpdateStaticHost struct {
	Site SiteUpdateStaticHost_Site "json:\"site\" graphql:\"site\""
}

func (t *SiteUpdateStaticHost) GetSite() *SiteUpdateStaticHost_Site {
	if t == nil {
		t = &SiteUpdateStaticHost{}
	}
	return &t.Site
}

type SubDomains struct {
	SubDomains []*SubDomains_SubDomains "json:\"subDomains\" graphql:\"subDomains\""
}

func (t *SubDomains) GetSubDomains() []*SubDomains_SubDomains {
	if t == nil {
		t = &SubDomains{}
	}
	return t.SubDomains
}

type Xdr struct {
	Xdr Xdr_Xdr "json:\"xdr\" graphql:\"xdr\""
}

func (t *Xdr) GetXdr() *Xdr_Xdr {
	if t == nil {
		t = &Xdr{}
	}
	return &t.Xdr
}

const AccountBySubdomainDocument = `query accountBySubdomain ($accountID: ID!, $subdomains: [String!]!) {
	accountBySubdomain(accountID: $accountID, subdomains: $subdomains) {
		id
		name
		subdomain
	}
}
`

func (c *Client) AccountBySubdomain(ctx context.Context, accountID string, subdomains []string, interceptors ...clientv2.RequestInterceptor) (*AccountBySubdomain, error) {
	vars := map[string]any{
		"accountID":  accountID,
		"subdomains": subdomains,
	}

	var res AccountBySubdomain
	if err := c.Client.Post(ctx, "accountBySubdomain", AccountBySubdomainDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const AccountMetricsDocument = `query accountMetrics ($toRate: Boolean, $perSecond: Boolean, $withMissingData: Boolean, $buckets: Int, $labels: [TimeseriesMetricType!], $types: [String!], $toRate1: Boolean, $perSecond1: Boolean, $withMissingData1: Boolean, $perSecond2: Boolean, $withMissingData2: Boolean, $perSecond3: Boolean, $withMissingData3: Boolean, $siteIDs: [ID!], $ids: [String!], $toRate2: Boolean, $perSecond4: Boolean, $withMissingData4: Boolean, $perSecond5: Boolean, $withMissingData5: Boolean, $perSecond6: Boolean, $withMissingData6: Boolean, $userIDs: [ID!], $perSecond7: Boolean, $withMissingData7: Boolean, $labels1: [TimeseriesMetricType!], $buckets1: Int, $accountID: ID, $id: ID, $timeFrame: TimeFrame!, $groupInterfaces: Boolean, $groupDevices: Boolean) {
	accountMetrics(accountID: $accountID, id: $id, timeFrame: $timeFrame, groupInterfaces: $groupInterfaces, groupDevices: $groupDevices) {
		id
		from
		to
		granularity
		sites(siteIDs: $siteIDs, ids: $ids) {
			id
			interfaces {
				metrics(toRate: $toRate) {
					duration
					granularity
					bytesDownstream
					bytesUpstream
					bytesTotal
					lostDownstream
					lostDownstreamPcnt
					lostUpstream
					lostUpstreamPcnt
					packetsDownstream
					packetsUpstream
					jitterUpstream
					jitterDownstream
					packetsDiscardedDownstream
					packetsDiscardedUpstream
					rtt
					hostCount
					hostLimit
					flowCount
				}
				name
				timeseries(buckets: $buckets, labels: $labels) {
					data(perSecond: $perSecond, withMissingData: $withMissingData)
					label
					dimensions {
						label
						value
					}
					key {
						measureFieldName
						dimensions {
							fieldName
							value
						}
					}
					sum
					units
					info
				}
				annotations(types: $types) {
					time
					label
					shortLabel
					type
				}
				periods {
					duration
					title
					type
				}
				remoteIPInfo {
					ip
					countryCode
					countryName
					city
					state
					provider
					latitude
					longitude
				}
				remoteIP
				socketInfo {
					id
					serial
					isPrimary
					platform
					version
					versionUpdateTime
				}
				ipsecInfo {
					isPrimary
					catoIP
					remoteIP
					ikeVersion
				}
				interfaceInfo {
					id
					name
					upstreamBandwidth
					downstreamBandwidth
					destType
				}
			}
			metrics(toRate: $toRate1) {
				duration
				granularity
				bytesDownstream
				bytesUpstream
				bytesTotal
				lostDownstream
				lostDownstreamPcnt
				lostUpstream
				lostUpstreamPcnt
				packetsDownstream
				packetsUpstream
				jitterUpstream
				jitterDownstream
				packetsDiscardedDownstream
				packetsDiscardedUpstream
				rtt
				hostCount
				hostLimit
				flowCount
			}
			name
			info {
				name
				type
				description
				countryCode
				region
				countryName
				isHA
				connType
				creationTime
				interfaces {
					id
					name
					upstreamBandwidth
					downstreamBandwidth
					destType
				}
				sockets {
					id
					serial
					isPrimary
					platform
					version
					versionUpdateTime
				}
				ipsec {
					isPrimary
					catoIP
					remoteIP
					ikeVersion
				}
			}
			hostCount {
				data(perSecond: $perSecond1, withMissingData: $withMissingData1)
				label
				dimensions {
					label
					value
				}
				key {
					measureFieldName
				}
				sum
				units
				info
			}
			flowCount {
				data(perSecond: $perSecond2, withMissingData: $withMissingData2)
				label
				dimensions {
					label
					value
				}
				key {
					measureFieldName
				}
				sum
				units
				info
			}
			hostLimit {
				data(perSecond: $perSecond3, withMissingData: $withMissingData3)
				label
				dimensions {
					label
					value
				}
				key {
					measureFieldName
				}
				sum
				units
				info
			}
		}
		users(userIDs: $userIDs) {
			id
			interfaces {
				name
				remoteIP
			}
			metrics(toRate: $toRate2) {
				duration
				granularity
				bytesDownstream
				bytesUpstream
				bytesTotal
				lostDownstream
				lostDownstreamPcnt
				lostUpstream
				lostUpstreamPcnt
				packetsDownstream
				packetsUpstream
				jitterUpstream
				jitterDownstream
				packetsDiscardedDownstream
				packetsDiscardedUpstream
				rtt
				hostCount
				hostLimit
				flowCount
			}
			name
			info {
				name
				type
				description
				countryCode
				region
				countryName
				isHA
				connType
				creationTime
			}
			hostCount {
				data(perSecond: $perSecond4, withMissingData: $withMissingData4)
				label
				sum
				units
				info
			}
			flowCount {
				data(perSecond: $perSecond5, withMissingData: $withMissingData5)
				label
				sum
				units
				info
			}
			hostLimit {
				data(perSecond: $perSecond6, withMissingData: $withMissingData6)
				label
				sum
				units
				info
			}
		}
		timeseries(labels: $labels1, buckets: $buckets1) {
			data(perSecond: $perSecond7, withMissingData: $withMissingData7)
			label
			sum
			units
			info
		}
	}
}
`

func (c *Client) AccountMetrics(ctx context.Context, toRate *bool, perSecond *bool, withMissingData *bool, buckets *int64, labels []cato_models.TimeseriesMetricType, types []string, toRate1 *bool, perSecond1 *bool, withMissingData1 *bool, perSecond2 *bool, withMissingData2 *bool, perSecond3 *bool, withMissingData3 *bool, siteIDs []string, ids []string, toRate2 *bool, perSecond4 *bool, withMissingData4 *bool, perSecond5 *bool, withMissingData5 *bool, perSecond6 *bool, withMissingData6 *bool, userIDs []string, perSecond7 *bool, withMissingData7 *bool, labels1 []cato_models.TimeseriesMetricType, buckets1 *int64, accountID *string, id *string, timeFrame string, groupInterfaces *bool, groupDevices *bool, interceptors ...clientv2.RequestInterceptor) (*AccountMetrics, error) {
	vars := map[string]any{
		"toRate":           toRate,
		"perSecond":        perSecond,
		"withMissingData":  withMissingData,
		"buckets":          buckets,
		"labels":           labels,
		"types":            types,
		"toRate1":          toRate1,
		"perSecond1":       perSecond1,
		"withMissingData1": withMissingData1,
		"perSecond2":       perSecond2,
		"withMissingData2": withMissingData2,
		"perSecond3":       perSecond3,
		"withMissingData3": withMissingData3,
		"siteIDs":          siteIDs,
		"ids":              ids,
		"toRate2":          toRate2,
		"perSecond4":       perSecond4,
		"withMissingData4": withMissingData4,
		"perSecond5":       perSecond5,
		"withMissingData5": withMissingData5,
		"perSecond6":       perSecond6,
		"withMissingData6": withMissingData6,
		"userIDs":          userIDs,
		"perSecond7":       perSecond7,
		"withMissingData7": withMissingData7,
		"labels1":          labels1,
		"buckets1":         buckets1,
		"accountID":        accountID,
		"id":               id,
		"timeFrame":        timeFrame,
		"groupInterfaces":  groupInterfaces,
		"groupDevices":     groupDevices,
	}

	var res AccountMetrics
	if err := c.Client.Post(ctx, "accountMetrics", AccountMetricsDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const AccountRolesDocument = `query accountRoles ($accountID: ID!, $accountType: AccountType) {
	accountRoles(accountID: $accountID, accountType: $accountType) {
		items {
			id
			name
			description
			isPredefined
		}
		total
	}
}
`

func (c *Client) AccountRoles(ctx context.Context, accountID string, accountType *cato_models.AccountType, interceptors ...clientv2.RequestInterceptor) (*AccountRoles, error) {
	vars := map[string]any{
		"accountID":   accountID,
		"accountType": accountType,
	}

	var res AccountRoles
	if err := c.Client.Post(ctx, "accountRoles", AccountRolesDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const AccountSnapshotDocument = `query accountSnapshot ($siteIDs: [ID!], $userIDs: [ID!], $accountID: ID) {
	accountSnapshot(accountID: $accountID) {
		id
		sites(siteIDs: $siteIDs) {
			id
			protoId
			connectivityStatusSiteSnapshot: connectivityStatus
			haStatusSiteSnapshot: haStatus {
				readiness
				wanConnectivity
				keepalive
				socketVersion
			}
			operationalStatusSiteSnapshot: operationalStatus
			lastConnected
			connectedSince
			popName
			devices {
				id
				name
				identifier
				connected
				haRole
				interfaces {
					connected
					id
					name
					physicalPort
					naturalOrder
					popName
					previousPopID
					previousPopName
					tunnelConnectionReason
					tunnelUptime
					tunnelRemoteIP
					tunnelRemoteIPInfoInterfaceSnapshot: tunnelRemoteIPInfo {
						ip
						countryCode
						countryName
						city
						state
						provider
						latitude
						longitude
					}
					type
					infoInterfaceSnapshot: info {
						id
						name
						upstreamBandwidth
						downstreamBandwidth
						destType
					}
					cellularInterfaceInfoInterfaceSnapshot: cellularInterfaceInfo {
						networkType
						simSlotId
						modemStatus
						isModemConnected
						iccid
						imei
						operatorName
						isModemSuspended
						apn
						apnSelectionMethod
						signalStrength
						isRoamingAllowed
						simNumber
						disconnectionReason
						isSimSlot1Detected
						isSimSlot2Detected
					}
				}
				lastConnected
				lastDuration
				connectedSince
				lastPopID
				lastPopName
				recentConnections {
					duration
					interfaceName
					deviceName
					lastConnected
					popName
					remoteIP
					remoteIPInfoRecentConnection: remoteIPInfo {
						ip
						countryCode
						countryName
						city
						state
						provider
						latitude
						longitude
					}
				}
				type
				socketInfo {
					id
					serial
					isPrimary
					platformSocketInfo: platform
					version
					versionUpdateTime
				}
				interfacesLinkState {
					id
					up
					mediaIn
					linkSpeed
					duplex
				}
				osType
				osVersion
				version
				versionNumber
				releaseGroup
				mfaExpirationTime
				mfaCreationTime
				internalIP
			}
			infoSiteSnapshot: info {
				name
				type
				description
				countryCode
				region
				countryName
				isHA
				connType
				creationTime
				interfaces {
					id
					name
					upstreamBandwidth
					downstreamBandwidth
					destType
				}
				sockets {
					id
					serial
					isPrimary
					platformSocketInfo: platform
					version
					versionUpdateTime
				}
				ipsec {
					isPrimary
					catoIP
					remoteIP
					ikeVersion
				}
			}
			hostCount
			altWanStatus
		}
		users(userIDs: $userIDs) {
			id
			connectivityStatusUserSnapshot: connectivityStatus
			operationalStatusUserSnapshot: operationalStatus
			name
			deviceName
			uptime
			lastConnected
			version
			versionNumber
			popID
			popName
			remoteIP
			remoteIPInfoUserSnapshot: remoteIPInfo {
				ip
				countryCode
				countryName
				city
				state
				provider
				latitude
				longitude
			}
			internalIP
			osType
			osVersion
			devices {
				id
				name
				identifier
				connected
				haRole
				interfaces {
					connected
					id
					name
					physicalPort
					naturalOrder
					popName
					previousPopID
					previousPopName
					tunnelConnectionReason
					tunnelUptime
					tunnelRemoteIP
					tunnelRemoteIPInfoInterfaceSnapshot: tunnelRemoteIPInfo {
						ip
						countryCode
						countryName
						city
						state
						provider
						latitude
						longitude
					}
					type
					infoInterfaceSnapshot: info {
						id
						name
						upstreamBandwidth
						downstreamBandwidth
						destType
					}
					cellularInterfaceInfoInterfaceSnapshot: cellularInterfaceInfo {
						networkType
						simSlotId
						modemStatus
						isModemConnected
						iccid
						imei
						operatorName
						isModemSuspended
						apn
						apnSelectionMethod
						signalStrength
						isRoamingAllowed
						simNumber
						disconnectionReason
						isSimSlot1Detected
						isSimSlot2Detected
					}
				}
				lastConnected
				lastDuration
				connectedSince
				lastPopID
				lastPopName
				recentConnections {
					duration
					interfaceName
					deviceName
					lastConnected
					popName
					remoteIP
					remoteIPInfoRecentConnection: remoteIPInfo {
						ip
						countryCode
						countryName
						city
						state
						provider
						latitude
						longitude
					}
				}
				type
				socketInfo {
					id
					serial
					isPrimary
					platformSocketInfo: platform
					version
					versionUpdateTime
				}
				interfacesLinkState {
					id
					up
					mediaIn
					linkSpeed
					duplex
				}
				osType
				osVersion
				version
				versionNumber
				releaseGroup
				mfaExpirationTime
				mfaCreationTime
				internalIP
			}
			connectedInOffice
			infoUserSnapshot: info {
				name
				status
				email
				creationTime
				phoneNumber
				origin
				authMethod
			}
			recentConnections {
				duration
				interfaceName
				deviceName
				lastConnected
				popName
				remoteIP
				remoteIPInfo {
					ip
					countryCode
					countryName
					city
					state
					provider
					latitude
					longitude
				}
			}
		}
		timestamp
	}
}
`

func (c *Client) AccountSnapshot(ctx context.Context, siteIDs []string, userIDs []string, accountID *string, interceptors ...clientv2.RequestInterceptor) (*AccountSnapshot, error) {
	vars := map[string]any{
		"siteIDs":   siteIDs,
		"userIDs":   userIDs,
		"accountID": accountID,
	}

	var res AccountSnapshot
	if err := c.Client.Post(ctx, "accountSnapshot", AccountSnapshotDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const AdminAddAdminDocument = `mutation adminAddAdmin ($addAdminInput: AddAdminInput!, $accountId: ID!) {
	admin(accountId: $accountId) {
		addAdmin(input: $addAdminInput) {
			adminID
		}
	}
}
`

func (c *Client) AdminAddAdmin(ctx context.Context, addAdminInput cato_models.AddAdminInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*AdminAddAdmin, error) {
	vars := map[string]any{
		"addAdminInput": addAdminInput,
		"accountId":     accountID,
	}

	var res AdminAddAdmin
	if err := c.Client.Post(ctx, "adminAddAdmin", AdminAddAdminDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const AdminRemoveAdminDocument = `mutation adminRemoveAdmin ($adminID: ID!, $accountId: ID!) {
	admin(accountId: $accountId) {
		removeAdmin(adminID: $adminID) {
			adminID
		}
	}
}
`

func (c *Client) AdminRemoveAdmin(ctx context.Context, adminID string, accountID string, interceptors ...clientv2.RequestInterceptor) (*AdminRemoveAdmin, error) {
	vars := map[string]any{
		"adminID":   adminID,
		"accountId": accountID,
	}

	var res AdminRemoveAdmin
	if err := c.Client.Post(ctx, "adminRemoveAdmin", AdminRemoveAdminDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const AdminUpdateAdminDocument = `mutation adminUpdateAdmin ($adminID: ID!, $updateAdminInput: UpdateAdminInput!, $accountId: ID!) {
	admin(accountId: $accountId) {
		updateAdmin(adminID: $adminID, input: $updateAdminInput) {
			adminID
		}
	}
}
`

func (c *Client) AdminUpdateAdmin(ctx context.Context, adminID string, updateAdminInput cato_models.UpdateAdminInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*AdminUpdateAdmin, error) {
	vars := map[string]any{
		"adminID":          adminID,
		"updateAdminInput": updateAdminInput,
		"accountId":        accountID,
	}

	var res AdminUpdateAdmin
	if err := c.Client.Post(ctx, "adminUpdateAdmin", AdminUpdateAdminDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const AdminDocument = `query admin ($accountId: ID!, $adminID: ID!) {
	admin(accountId: $accountId, adminID: $adminID) {
		id
		firstName
		lastName
		email
		creationDate
		passwordNeverExpires
		mfaEnabled
		managedRoles {
			role {
				id
				name
				description
				isPredefined
			}
			allowedEntities {
				id
				name
				type
			}
			allowedAccounts
		}
		resellerRoles {
			role {
				id
				name
				description
				isPredefined
			}
			allowedEntities {
				id
				name
				type
			}
			allowedAccounts
		}
	}
}
`

func (c *Client) Admin(ctx context.Context, accountID string, adminID string, interceptors ...clientv2.RequestInterceptor) (*Admin, error) {
	vars := map[string]any{
		"accountId": accountID,
		"adminID":   adminID,
	}

	var res Admin
	if err := c.Client.Post(ctx, "admin", AdminDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const AdminsDocument = `query admins ($accountID: ID!, $limit: Int, $from: Int, $search: String, $sort: [SortInput], $adminIDs: [ID!]) {
	admins(accountID: $accountID, limit: $limit, from: $from, search: $search, sort: $sort, adminIDs: $adminIDs) {
		items {
			id
			version
			role
			firstName
			lastName
			email
			creationDate
			modifyDate
			status
			passwordNeverExpires
			mfaEnabled
			nativeAccountID
			allowedItems {
				id
				name
				type
			}
			presentUsageAndEvents
			managedRoles {
				role {
					id
					name
					description
					isPredefined
				}
				allowedEntities {
					id
					name
					type
				}
				allowedAccounts
			}
			resellerRoles {
				role {
					id
					name
					description
					isPredefined
				}
				allowedEntities {
					id
					name
					type
				}
				allowedAccounts
			}
		}
		total
	}
}
`

func (c *Client) Admins(ctx context.Context, accountID string, limit *int64, from *int64, search *string, sort []*cato_models.SortInput, adminIDs []string, interceptors ...clientv2.RequestInterceptor) (*Admins, error) {
	vars := map[string]any{
		"accountID": accountID,
		"limit":     limit,
		"from":      from,
		"search":    search,
		"sort":      sort,
		"adminIDs":  adminIDs,
	}

	var res Admins
	if err := c.Client.Post(ctx, "admins", AdminsDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const AppStatsDocument = `query appStats ($limit: Int, $from: Int, $accountID: ID!, $timeFrame: TimeFrame!, $measures: [Measure], $dimensions: [Dimension], $filters: [AppStatsFilter!], $sort: [AppStatsSort!]) {
	appStats(accountID: $accountID, timeFrame: $timeFrame, measures: $measures, dimensions: $dimensions, filters: $filters, sort: $sort) {
		id
		from
		to
		total
		totals
		records(limit: $limit, from: $from) {
			fields {
				name
				value {
					__typename
					... on StringValue {
						string
					}
					... on DateValue {
						date
					}
					... on Entity {
						id
						name
						type
					}
				}
			}
			fieldsUnitTypes
			fieldsMap
			trends
			prevTimeFrame
			flatFields
		}
	}
}
`

func (c *Client) AppStats(ctx context.Context, limit *int64, from *int64, accountID string, timeFrame string, measures []*cato_models.Measure, dimensions []*cato_models.Dimension, filters []*cato_models.AppStatsFilter, sort []*cato_models.AppStatsSort, interceptors ...clientv2.RequestInterceptor) (*AppStats, error) {
	vars := map[string]any{
		"limit":      limit,
		"from":       from,
		"accountID":  accountID,
		"timeFrame":  timeFrame,
		"measures":   measures,
		"dimensions": dimensions,
		"filters":    filters,
		"sort":       sort,
	}

	var res AppStats
	if err := c.Client.Post(ctx, "appStats", AppStatsDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const AppStatsTimeSeriesDocument = `query appStatsTimeSeries ($perSecond: Boolean, $withMissingData: Boolean, $buckets: Int!, $accountID: ID!, $timeFrame: TimeFrame!, $measures: [Measure], $dimensions: [Dimension], $filters: [AppStatsFilter!]) {
	appStatsTimeSeries(accountID: $accountID, timeFrame: $timeFrame, measures: $measures, dimensions: $dimensions, filters: $filters) {
		id
		from
		to
		granularity
		timeseries(buckets: $buckets) {
			data(perSecond: $perSecond, withMissingData: $withMissingData)
			label
			dimensions {
				label
				value
			}
			key {
				measureFieldName
				dimensions {
					fieldName
					value
				}
			}
			sum
			units
			info
		}
	}
}
`

func (c *Client) AppStatsTimeSeries(ctx context.Context, perSecond *bool, withMissingData *bool, buckets int64, accountID string, timeFrame string, measures []*cato_models.Measure, dimensions []*cato_models.Dimension, filters []*cato_models.AppStatsFilter, interceptors ...clientv2.RequestInterceptor) (*AppStatsTimeSeries, error) {
	vars := map[string]any{
		"perSecond":       perSecond,
		"withMissingData": withMissingData,
		"buckets":         buckets,
		"accountID":       accountID,
		"timeFrame":       timeFrame,
		"measures":        measures,
		"dimensions":      dimensions,
		"filters":         filters,
	}

	var res AppStatsTimeSeries
	if err := c.Client.Post(ctx, "appStatsTimeSeries", AppStatsTimeSeriesDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const AuditFeedDocument = `query auditFeed ($fieldNames: [AuditFieldName!], $accountIDs: [ID!], $ids: [ID!], $timeFrame: TimeFrame!, $filters: [AuditFieldFilterInput!], $marker: String) {
	auditFeed(accountIDs: $accountIDs, ids: $ids, timeFrame: $timeFrame, filters: $filters, marker: $marker) {
		from
		to
		marker
		fetchedCount
		hasMore
		accounts {
			id
			records(fieldNames: $fieldNames) {
				admin {
					id
					name
					type
				}
				apiKey {
					id
					name
					type
				}
				object {
					id
					name
					type
				}
				account {
					entity {
						id
						name
						type
					}
					description
					helperFields
				}
				time
				fields {
					name
					value {
						__typename
						... on StringValue {
							string
						}
						... on DateValue {
							date
						}
						... on Entity {
							id
							name
							type
						}
					}
				}
				fieldsMap
				flatFields
			}
		}
	}
}
`

func (c *Client) AuditFeed(ctx context.Context, fieldNames []cato_models.AuditFieldName, accountIDs []string, ids []string, timeFrame string, filters []*cato_models.AuditFieldFilterInput, marker *string, interceptors ...clientv2.RequestInterceptor) (*AuditFeed, error) {
	vars := map[string]any{
		"fieldNames": fieldNames,
		"accountIDs": accountIDs,
		"ids":        ids,
		"timeFrame":  timeFrame,
		"filters":    filters,
		"marker":     marker,
	}

	var res AuditFeed
	if err := c.Client.Post(ctx, "auditFeed", AuditFeedDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const EntityLookupDocument = `query entityLookup ($accountID: ID!, $type: EntityType!, $limit: Int, $from: Int, $parent: EntityInput, $search: String, $entityIDs: [ID!], $sort: [SortInput], $filters: [LookupFilterInput], $helperFields: [String!]) {
	entityLookup(accountID: $accountID, type: $type, limit: $limit, from: $from, parent: $parent, search: $search, entityIDs: $entityIDs, sort: $sort, filters: $filters, helperFields: $helperFields) {
		items {
			entity {
				id
				name
				type
			}
			description
			helperFields
		}
		total
	}
}
`

func (c *Client) EntityLookup(ctx context.Context, accountID string, typeArg cato_models.EntityType, limit *int64, from *int64, parent *cato_models.EntityInput, search *string, entityIDs []string, sort []*cato_models.SortInput, filters []*cato_models.LookupFilterInput, helperFields []string, interceptors ...clientv2.RequestInterceptor) (*EntityLookup, error) {
	vars := map[string]any{
		"accountID":    accountID,
		"type":         typeArg,
		"limit":        limit,
		"from":         from,
		"parent":       parent,
		"search":       search,
		"entityIDs":    entityIDs,
		"sort":         sort,
		"filters":      filters,
		"helperFields": helperFields,
	}

	var res EntityLookup
	if err := c.Client.Post(ctx, "entityLookup", EntityLookupDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const EventsDocument = `query events ($limit: Int, $from: Int, $accountID: ID!, $timeFrame: TimeFrame!, $measures: [EventsMeasure], $dimensions: [EventsDimension], $filters: [EventsFilter!], $sort: [EventsSort!]) {
	events(accountID: $accountID, timeFrame: $timeFrame, measures: $measures, dimensions: $dimensions, filters: $filters, sort: $sort) {
		id
		from
		to
		total
		totals
		records(limit: $limit, from: $from) {
			fields {
				name
				value {
					__typename
					... on StringValue {
						string
					}
					... on DateValue {
						date
					}
					... on Entity {
						id
						name
						type
					}
				}
			}
			fieldsUnitTypes
			fieldsMap
			trends
			prevTimeFrame
			flatFields
		}
	}
}
`

func (c *Client) Events(ctx context.Context, limit *int64, from *int64, accountID string, timeFrame string, measures []*cato_models.EventsMeasure, dimensions []*cato_models.EventsDimension, filters []*cato_models.EventsFilter, sort []*cato_models.EventsSort, interceptors ...clientv2.RequestInterceptor) (*Events, error) {
	vars := map[string]any{
		"limit":      limit,
		"from":       from,
		"accountID":  accountID,
		"timeFrame":  timeFrame,
		"measures":   measures,
		"dimensions": dimensions,
		"filters":    filters,
		"sort":       sort,
	}

	var res Events
	if err := c.Client.Post(ctx, "events", EventsDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const EventsFeedDocument = `query eventsFeed ($fieldNames: [EventFieldName!], $accountIDs: [ID!], $filters: [EventFeedFieldFilterInput!], $marker: String) {
	eventsFeed(accountIDs: $accountIDs, filters: $filters, marker: $marker) {
		marker
		fetchedCount
		accounts {
			id
			errorString
			records(fieldNames: $fieldNames) {
				time
				fieldsMap
				flatFields
			}
		}
	}
}
`

func (c *Client) EventsFeed(ctx context.Context, fieldNames []cato_models.EventFieldName, accountIDs []string, filters []*cato_models.EventFeedFieldFilterInput, marker *string, interceptors ...clientv2.RequestInterceptor) (*EventsFeed, error) {
	vars := map[string]any{
		"fieldNames": fieldNames,
		"accountIDs": accountIDs,
		"filters":    filters,
		"marker":     marker,
	}

	var res EventsFeed
	if err := c.Client.Post(ctx, "eventsFeed", EventsFeedDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const EventsTimeSeriesDocument = `query eventsTimeSeries ($perSecond: Boolean, $withMissingData: Boolean, $buckets: Int!, $accountID: ID!, $timeFrame: TimeFrame!, $measures: [EventsMeasure], $dimensions: [EventsDimension], $filters: [EventsFilter!]) {
	eventsTimeSeries(accountID: $accountID, timeFrame: $timeFrame, measures: $measures, dimensions: $dimensions, filters: $filters) {
		id
		from
		to
		granularity
		timeseries(buckets: $buckets) {
			data(perSecond: $perSecond, withMissingData: $withMissingData)
			label
			dimensions {
				label
				value
			}
			key {
				measureFieldName
				dimensions {
					fieldName
					value
				}
			}
			sum
			units
			info
		}
	}
}
`

func (c *Client) EventsTimeSeries(ctx context.Context, perSecond *bool, withMissingData *bool, buckets int64, accountID string, timeFrame string, measures []*cato_models.EventsMeasure, dimensions []*cato_models.EventsDimension, filters []*cato_models.EventsFilter, interceptors ...clientv2.RequestInterceptor) (*EventsTimeSeries, error) {
	vars := map[string]any{
		"perSecond":       perSecond,
		"withMissingData": withMissingData,
		"buckets":         buckets,
		"accountID":       accountID,
		"timeFrame":       timeFrame,
		"measures":        measures,
		"dimensions":      dimensions,
		"filters":         filters,
	}

	var res EventsTimeSeries
	if err := c.Client.Post(ctx, "eventsTimeSeries", EventsTimeSeriesDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const HardwareManagementDocument = `query hardwareManagement ($input: SocketInventoryInput, $accountId: ID!) {
	hardwareManagement(accountId: $accountId) {
		socketInventory(input: $input) {
			items {
				id
				status
				serialNumber
				socketMac
				socketVersion
				site {
					id
					name
				}
				account {
					id
					name
				}
				shippingDate
				socketType
				trackingUrl
				trackingNumber
				shippingCompany
				deliverySiteName
				description
			}
			pageInfo {
				total
			}
		}
	}
}
`

func (c *Client) HardwareManagement(ctx context.Context, input *cato_models.SocketInventoryInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*HardwareManagement, error) {
	vars := map[string]any{
		"input":     input,
		"accountId": accountID,
	}

	var res HardwareManagement
	if err := c.Client.Post(ctx, "hardwareManagement", HardwareManagementDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const LicensingDocument = `query licensing ($accountId: ID!) {
	licensing(accountId: $accountId) {
		licensingInfo {
			licenses {
				description
				plan
				sku
				status
				startDate
				expirationDate
				lastUpdated
			}
			globalLicenseAllocations {
				publicIps {
					total
					allocated
					available
				}
				ztnaUsers {
					total
					allocated
					available
				}
			}
		}
	}
}
`

func (c *Client) Licensing(ctx context.Context, accountID string, interceptors ...clientv2.RequestInterceptor) (*Licensing, error) {
	vars := map[string]any{
		"accountId": accountID,
	}

	var res Licensing
	if err := c.Client.Post(ctx, "licensing", LicensingDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteAddBgpPeerDocument = `mutation siteAddBgpPeer ($addBgpPeerInput: AddBgpPeerInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		addBgpPeer(input: $addBgpPeerInput) {
			bgpPeer {
				siteRefSite: site {
					id
					name
				}
				id
				name
				peerAsn
				catoAsn
				peerIp
				catoIp
				advertiseDefaultRoute
				advertiseAllRoutes
				advertiseSummaryRoutes
				bgpSummaryRouteSummaryRoute: summaryRoute {
					id
					route
					bgpCommunityCommunity: community {
						from
						to
					}
				}
				bgpDefaultActionDefaultAction: defaultAction
				performNat
				md5AuthKey
				metric
				holdTime
				keepaliveInterval
				bfdEnabled
				bfdSettingsBfdSettings: bfdSettings {
					transmitInterval
					receiveInterval
					multiplier
				}
				bgpTrackingTracking: tracking {
					id
					enabled
					alertFrequency
					subscriptionId
				}
			}
		}
	}
}
`

func (c *Client) SiteAddBgpPeer(ctx context.Context, addBgpPeerInput cato_models.AddBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddBgpPeer, error) {
	vars := map[string]any{
		"addBgpPeerInput": addBgpPeerInput,
		"accountId":       accountID,
	}

	var res SiteAddBgpPeer
	if err := c.Client.Post(ctx, "siteAddBgpPeer", SiteAddBgpPeerDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteRemoveBgpPeerDocument = `mutation siteRemoveBgpPeer ($removeBgpPeerInput: RemoveBgpPeerInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		removeBgpPeer(input: $removeBgpPeerInput) {
			bgpPeer {
				siteRefSite: site {
					id
					name
				}
				id
				name
				peerAsn
				catoAsn
				peerIp
				catoIp
				advertiseDefaultRoute
				advertiseAllRoutes
				advertiseSummaryRoutes
				bgpSummaryRouteSummaryRoute: summaryRoute {
					id
					route
					bgpCommunityCommunity: community {
						from
						to
					}
				}
				bgpDefaultActionDefaultAction: defaultAction
				performNat
				md5AuthKey
				metric
				holdTime
				keepaliveInterval
				bfdEnabled
				bfdSettingsBfdSettings: bfdSettings {
					transmitInterval
					receiveInterval
					multiplier
				}
				bgpTrackingTracking: tracking {
					id
					enabled
					alertFrequency
					subscriptionId
				}
			}
		}
	}
}
`

func (c *Client) SiteRemoveBgpPeer(ctx context.Context, removeBgpPeerInput cato_models.RemoveBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteRemoveBgpPeer, error) {
	vars := map[string]any{
		"removeBgpPeerInput": removeBgpPeerInput,
		"accountId":          accountID,
	}

	var res SiteRemoveBgpPeer
	if err := c.Client.Post(ctx, "siteRemoveBgpPeer", SiteRemoveBgpPeerDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteUpdateBgpPeerDocument = `mutation siteUpdateBgpPeer ($updateBgpPeerInput: UpdateBgpPeerInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		updateBgpPeer(input: $updateBgpPeerInput) {
			bgpPeer {
				siteRefSite: site {
					id
					name
				}
				id
				name
				peerAsn
				catoAsn
				peerIp
				catoIp
				advertiseDefaultRoute
				advertiseAllRoutes
				advertiseSummaryRoutes
				bgpSummaryRouteSummaryRoute: summaryRoute {
					id
					route
					bgpCommunityCommunity: community {
						from
						to
					}
				}
				bgpDefaultActionDefaultAction: defaultAction
				performNat
				md5AuthKey
				metric
				holdTime
				keepaliveInterval
				bfdEnabled
				bfdSettingsBfdSettings: bfdSettings {
					transmitInterval
					receiveInterval
					multiplier
				}
				bgpTrackingTracking: tracking {
					id
					enabled
					alertFrequency
					subscriptionId
				}
			}
		}
	}
}
`

func (c *Client) SiteUpdateBgpPeer(ctx context.Context, updateBgpPeerInput cato_models.UpdateBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateBgpPeer, error) {
	vars := map[string]any{
		"updateBgpPeerInput": updateBgpPeerInput,
		"accountId":          accountID,
	}

	var res SiteUpdateBgpPeer
	if err := c.Client.Post(ctx, "siteUpdateBgpPeer", SiteUpdateBgpPeerDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SitesAddBgpPeerDocument = `mutation sitesAddBgpPeer ($addBgpPeerInput: AddBgpPeerInput!, $accountId: ID!) {
	sites(accountId: $accountId) {
		addBgpPeer(input: $addBgpPeerInput) {
			bgpPeer {
				siteRefSite: site {
					id
					name
				}
				id
				name
				peerAsn
				catoAsn
				peerIp
				catoIp
				advertiseDefaultRoute
				advertiseAllRoutes
				advertiseSummaryRoutes
				bgpSummaryRouteSummaryRoute: summaryRoute {
					id
					route
					bgpCommunityCommunity: community {
						from
						to
					}
				}
				bgpDefaultActionDefaultAction: defaultAction
				performNat
				md5AuthKey
				metric
				holdTime
				keepaliveInterval
				bfdEnabled
				bfdSettingsBfdSettings: bfdSettings {
					transmitInterval
					receiveInterval
					multiplier
				}
				bgpTrackingTracking: tracking {
					id
					enabled
					alertFrequency
					subscriptionId
				}
			}
		}
	}
}
`

func (c *Client) SitesAddBgpPeer(ctx context.Context, addBgpPeerInput cato_models.AddBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SitesAddBgpPeer, error) {
	vars := map[string]any{
		"addBgpPeerInput": addBgpPeerInput,
		"accountId":       accountID,
	}

	var res SitesAddBgpPeer
	if err := c.Client.Post(ctx, "sitesAddBgpPeer", SitesAddBgpPeerDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SitesRemoveBgpPeerDocument = `mutation sitesRemoveBgpPeer ($removeBgpPeerInput: RemoveBgpPeerInput!, $accountId: ID!) {
	sites(accountId: $accountId) {
		removeBgpPeer(input: $removeBgpPeerInput) {
			bgpPeer {
				siteRefSite: site {
					id
					name
				}
				id
				name
				peerAsn
				catoAsn
				peerIp
				catoIp
				advertiseDefaultRoute
				advertiseAllRoutes
				advertiseSummaryRoutes
				bgpSummaryRouteSummaryRoute: summaryRoute {
					id
					route
					bgpCommunityCommunity: community {
						from
						to
					}
				}
				bgpDefaultActionDefaultAction: defaultAction
				performNat
				md5AuthKey
				metric
				holdTime
				keepaliveInterval
				bfdEnabled
				bfdSettingsBfdSettings: bfdSettings {
					transmitInterval
					receiveInterval
					multiplier
				}
				bgpTrackingTracking: tracking {
					id
					enabled
					alertFrequency
					subscriptionId
				}
			}
		}
	}
}
`

func (c *Client) SitesRemoveBgpPeer(ctx context.Context, removeBgpPeerInput cato_models.RemoveBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SitesRemoveBgpPeer, error) {
	vars := map[string]any{
		"removeBgpPeerInput": removeBgpPeerInput,
		"accountId":          accountID,
	}

	var res SitesRemoveBgpPeer
	if err := c.Client.Post(ctx, "sitesRemoveBgpPeer", SitesRemoveBgpPeerDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SitesUpdateBgpPeerDocument = `mutation sitesUpdateBgpPeer ($updateBgpPeerInput: UpdateBgpPeerInput!, $accountId: ID!) {
	sites(accountId: $accountId) {
		updateBgpPeer(input: $updateBgpPeerInput) {
			bgpPeer {
				siteRefSite: site {
					id
					name
				}
				id
				name
				peerAsn
				catoAsn
				peerIp
				catoIp
				advertiseDefaultRoute
				advertiseAllRoutes
				advertiseSummaryRoutes
				bgpSummaryRouteSummaryRoute: summaryRoute {
					id
					route
					bgpCommunityCommunity: community {
						from
						to
					}
				}
				bgpDefaultActionDefaultAction: defaultAction
				performNat
				md5AuthKey
				metric
				holdTime
				keepaliveInterval
				bfdEnabled
				bfdSettingsBfdSettings: bfdSettings {
					transmitInterval
					receiveInterval
					multiplier
				}
				bgpTrackingTracking: tracking {
					id
					enabled
					alertFrequency
					subscriptionId
				}
			}
		}
	}
}
`

func (c *Client) SitesUpdateBgpPeer(ctx context.Context, updateBgpPeerInput cato_models.UpdateBgpPeerInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SitesUpdateBgpPeer, error) {
	vars := map[string]any{
		"updateBgpPeerInput": updateBgpPeerInput,
		"accountId":          accountID,
	}

	var res SitesUpdateBgpPeer
	if err := c.Client.Post(ctx, "sitesUpdateBgpPeer", SitesUpdateBgpPeerDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallAddSectionDocument = `mutation policyInternetFirewallAddSection ($internetFirewallPolicyMutationInput: InternetFirewallPolicyMutationInput, $policyAddSectionInput: PolicyAddSectionInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall(input: $internetFirewallPolicyMutationInput) {
			addSection(input: $policyAddSectionInput) {
				section {
					audit {
						updatedTime
						updatedBy
					}
					section {
						id
						name
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallAddSection(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyAddSectionInput cato_models.PolicyAddSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallAddSection, error) {
	vars := map[string]any{
		"internetFirewallPolicyMutationInput": internetFirewallPolicyMutationInput,
		"policyAddSectionInput":               policyAddSectionInput,
		"accountId":                           accountID,
	}

	var res PolicyInternetFirewallAddSection
	if err := c.Client.Post(ctx, "policyInternetFirewallAddSection", PolicyInternetFirewallAddSectionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallCreatePolicyRevisionDocument = `mutation policyInternetFirewallCreatePolicyRevision ($internetFirewallPolicyMutationInput: InternetFirewallPolicyMutationInput, $policyCreateRevisionInput: PolicyCreateRevisionInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall(input: $internetFirewallPolicyMutationInput) {
			createPolicyRevision(input: $policyCreateRevisionInput) {
				policy {
					enabled
					rules {
						audit {
							updatedTime
							updatedBy
						}
						rule {
							id
							name
							description
							index
							section {
								id
								name
							}
							enabled
							source {
								ip
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							connectionOrigin
							country {
								id
								name
							}
							device {
								id
								name
							}
							deviceOS
							destination {
								application {
									id
									name
								}
								customApp {
									id
									name
								}
								appCategory {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								country {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								remoteAsn
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							action
							tracking {
								event {
									enabled
								}
								alert {
									enabled
									frequency
									subscriptionGroup {
										id
										name
									}
									webhook {
										id
										name
									}
									mailingList {
										id
										name
									}
								}
							}
							schedule {
								activeOn
								customTimeframe {
									from
									to
								}
								customRecurring {
									from
									to
									days
								}
							}
							exceptions {
								name
								source {
									ip
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								deviceOS
								country {
									id
									name
								}
								device {
									id
									name
								}
								destination {
									application {
										id
										name
									}
									customApp {
										id
										name
									}
									appCategory {
										id
										name
									}
									customCategory {
										id
										name
									}
									sanctionedAppsCategory {
										id
										name
									}
									country {
										id
										name
									}
									domain
									fqdn
									ip
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									remoteAsn
								}
								service {
									standard {
										id
										name
									}
									custom {
										port
										portRange {
											from
											to
										}
										protocol
									}
								}
								connectionOrigin
							}
						}
						properties
					}
					sections {
						audit {
							updatedTime
							updatedBy
						}
						section {
							id
							name
						}
						properties
					}
					auditInternetFirewallPolicy: audit {
						publishedTime
						publishedBy
					}
					revisionInternetFirewallPolicy: revision {
						id
						name
						description
						changes
						createdTime
						updatedTime
					}
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallCreatePolicyRevision(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyCreateRevisionInput cato_models.PolicyCreateRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallCreatePolicyRevision, error) {
	vars := map[string]any{
		"internetFirewallPolicyMutationInput": internetFirewallPolicyMutationInput,
		"policyCreateRevisionInput":           policyCreateRevisionInput,
		"accountId":                           accountID,
	}

	var res PolicyInternetFirewallCreatePolicyRevision
	if err := c.Client.Post(ctx, "policyInternetFirewallCreatePolicyRevision", PolicyInternetFirewallCreatePolicyRevisionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallDiscardPolicyRevisionDocument = `mutation policyInternetFirewallDiscardPolicyRevision ($internetFirewallPolicyMutationInput: InternetFirewallPolicyMutationInput, $policyDiscardRevisionInput: PolicyDiscardRevisionInput, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall(input: $internetFirewallPolicyMutationInput) {
			discardPolicyRevision(input: $policyDiscardRevisionInput) {
				policy {
					enabled
					rules {
						audit {
							updatedTime
							updatedBy
						}
						rule {
							id
							name
							description
							index
							section {
								id
								name
							}
							enabled
							source {
								ip
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							connectionOrigin
							country {
								id
								name
							}
							device {
								id
								name
							}
							deviceOS
							destination {
								application {
									id
									name
								}
								customApp {
									id
									name
								}
								appCategory {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								country {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								remoteAsn
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							action
							tracking {
								event {
									enabled
								}
								alert {
									enabled
									frequency
									subscriptionGroup {
										id
										name
									}
									webhook {
										id
										name
									}
									mailingList {
										id
										name
									}
								}
							}
							schedule {
								activeOn
								customTimeframe {
									from
									to
								}
								customRecurring {
									from
									to
									days
								}
							}
							exceptions {
								name
								source {
									ip
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								deviceOS
								country {
									id
									name
								}
								device {
									id
									name
								}
								destination {
									application {
										id
										name
									}
									customApp {
										id
										name
									}
									appCategory {
										id
										name
									}
									customCategory {
										id
										name
									}
									sanctionedAppsCategory {
										id
										name
									}
									country {
										id
										name
									}
									domain
									fqdn
									ip
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									remoteAsn
								}
								service {
									standard {
										id
										name
									}
									custom {
										port
										portRange {
											from
											to
										}
										protocol
									}
								}
								connectionOrigin
							}
						}
						properties
					}
					sections {
						audit {
							updatedTime
							updatedBy
						}
						section {
							id
							name
						}
						properties
					}
					auditInternetFirewallPolicy: audit {
						publishedTime
						publishedBy
					}
					revisionInternetFirewallPolicy: revision {
						id
						name
						description
						changes
						createdTime
						updatedTime
					}
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallDiscardPolicyRevision(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyDiscardRevisionInput *cato_models.PolicyDiscardRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallDiscardPolicyRevision, error) {
	vars := map[string]any{
		"internetFirewallPolicyMutationInput": internetFirewallPolicyMutationInput,
		"policyDiscardRevisionInput":          policyDiscardRevisionInput,
		"accountId":                           accountID,
	}

	var res PolicyInternetFirewallDiscardPolicyRevision
	if err := c.Client.Post(ctx, "policyInternetFirewallDiscardPolicyRevision", PolicyInternetFirewallDiscardPolicyRevisionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallMoveRuleDocument = `mutation policyInternetFirewallMoveRule ($internetFirewallPolicyMutationInput: InternetFirewallPolicyMutationInput, $policyMoveRuleInput: PolicyMoveRuleInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall(input: $internetFirewallPolicyMutationInput) {
			moveRule(input: $policyMoveRuleInput) {
				rule {
					audit {
						updatedTime
						updatedBy
					}
					rule {
						id
						name
						description
						index
						section {
							id
							name
						}
						enabled
						source {
							ip
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						connectionOrigin
						country {
							id
							name
						}
						device {
							id
							name
						}
						deviceOS
						destination {
							application {
								id
								name
							}
							customApp {
								id
								name
							}
							appCategory {
								id
								name
							}
							customCategory {
								id
								name
							}
							sanctionedAppsCategory {
								id
								name
							}
							country {
								id
								name
							}
							domain
							fqdn
							ip
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							remoteAsn
						}
						service {
							standard {
								id
								name
							}
							custom {
								port
								portRange {
									from
									to
								}
								protocol
							}
						}
						action
						tracking {
							event {
								enabled
							}
							alert {
								enabled
								frequency
								subscriptionGroup {
									id
									name
								}
								webhook {
									id
									name
								}
								mailingList {
									id
									name
								}
							}
						}
						schedule {
							activeOn
							customTimeframePolicySchedule: customTimeframe {
								from
								to
							}
							customRecurringPolicySchedule: customRecurring {
								from
								to
								days
							}
						}
						exceptions {
							name
							source {
								ip
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							deviceOS
							country {
								id
								name
							}
							device {
								id
								name
							}
							destination {
								application {
									id
									name
								}
								customApp {
									id
									name
								}
								appCategory {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								country {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								remoteAsn
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							connectionOrigin
						}
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallMoveRule(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyMoveRuleInput cato_models.PolicyMoveRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallMoveRule, error) {
	vars := map[string]any{
		"internetFirewallPolicyMutationInput": internetFirewallPolicyMutationInput,
		"policyMoveRuleInput":                 policyMoveRuleInput,
		"accountId":                           accountID,
	}

	var res PolicyInternetFirewallMoveRule
	if err := c.Client.Post(ctx, "policyInternetFirewallMoveRule", PolicyInternetFirewallMoveRuleDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallMoveSectionDocument = `mutation policyInternetFirewallMoveSection ($internetFirewallPolicyMutationInput: InternetFirewallPolicyMutationInput, $policyMoveSectionInput: PolicyMoveSectionInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall(input: $internetFirewallPolicyMutationInput) {
			moveSection(input: $policyMoveSectionInput) {
				section {
					audit {
						updatedTime
						updatedBy
					}
					section {
						id
						name
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallMoveSection(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyMoveSectionInput cato_models.PolicyMoveSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallMoveSection, error) {
	vars := map[string]any{
		"internetFirewallPolicyMutationInput": internetFirewallPolicyMutationInput,
		"policyMoveSectionInput":              policyMoveSectionInput,
		"accountId":                           accountID,
	}

	var res PolicyInternetFirewallMoveSection
	if err := c.Client.Post(ctx, "policyInternetFirewallMoveSection", PolicyInternetFirewallMoveSectionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallRemoveRuleDocument = `mutation policyInternetFirewallRemoveRule ($internetFirewallPolicyMutationInput: InternetFirewallPolicyMutationInput, $internetFirewallRemoveRuleInput: InternetFirewallRemoveRuleInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall(input: $internetFirewallPolicyMutationInput) {
			removeRule(input: $internetFirewallRemoveRuleInput) {
				rule {
					audit {
						updatedTime
						updatedBy
					}
					rule {
						id
						name
						description
						index
						section {
							id
							name
						}
						enabled
						source {
							ip
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						connectionOrigin
						country {
							id
							name
						}
						device {
							id
							name
						}
						deviceOS
						destination {
							application {
								id
								name
							}
							customApp {
								id
								name
							}
							appCategory {
								id
								name
							}
							customCategory {
								id
								name
							}
							sanctionedAppsCategory {
								id
								name
							}
							country {
								id
								name
							}
							domain
							fqdn
							ip
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							remoteAsn
						}
						service {
							standard {
								id
								name
							}
							custom {
								port
								portRange {
									from
									to
								}
								protocol
							}
						}
						action
						tracking {
							event {
								enabled
							}
							alert {
								enabled
								frequency
								subscriptionGroup {
									id
									name
								}
								webhook {
									id
									name
								}
								mailingList {
									id
									name
								}
							}
						}
						schedule {
							activeOn
							customTimeframePolicySchedule: customTimeframe {
								from
								to
							}
							customRecurringPolicySchedule: customRecurring {
								from
								to
								days
							}
						}
						exceptions {
							name
							source {
								ip
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							deviceOS
							country {
								id
								name
							}
							device {
								id
								name
							}
							destination {
								application {
									id
									name
								}
								customApp {
									id
									name
								}
								appCategory {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								country {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								remoteAsn
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							connectionOrigin
						}
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallRemoveRule(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, internetFirewallRemoveRuleInput cato_models.InternetFirewallRemoveRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallRemoveRule, error) {
	vars := map[string]any{
		"internetFirewallPolicyMutationInput": internetFirewallPolicyMutationInput,
		"internetFirewallRemoveRuleInput":     internetFirewallRemoveRuleInput,
		"accountId":                           accountID,
	}

	var res PolicyInternetFirewallRemoveRule
	if err := c.Client.Post(ctx, "policyInternetFirewallRemoveRule", PolicyInternetFirewallRemoveRuleDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallRemoveSectionDocument = `mutation policyInternetFirewallRemoveSection ($internetFirewallPolicyMutationInput: InternetFirewallPolicyMutationInput, $policyRemoveSectionInput: PolicyRemoveSectionInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall(input: $internetFirewallPolicyMutationInput) {
			removeSection(input: $policyRemoveSectionInput) {
				section {
					audit {
						updatedTime
						updatedBy
					}
					section {
						id
						name
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallRemoveSection(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyRemoveSectionInput cato_models.PolicyRemoveSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallRemoveSection, error) {
	vars := map[string]any{
		"internetFirewallPolicyMutationInput": internetFirewallPolicyMutationInput,
		"policyRemoveSectionInput":            policyRemoveSectionInput,
		"accountId":                           accountID,
	}

	var res PolicyInternetFirewallRemoveSection
	if err := c.Client.Post(ctx, "policyInternetFirewallRemoveSection", PolicyInternetFirewallRemoveSectionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallPublishPolicyRevisionDocument = `mutation policyInternetFirewallPublishPolicyRevision ($internetFirewallPolicyMutationInput: InternetFirewallPolicyMutationInput, $policyPublishRevisionInput: PolicyPublishRevisionInput, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall(input: $internetFirewallPolicyMutationInput) {
			publishPolicyRevision(input: $policyPublishRevisionInput) {
				policy {
					enabled
					rules {
						audit {
							updatedTime
							updatedBy
						}
						rule {
							id
							name
							description
							index
							section {
								id
								name
							}
							enabled
							source {
								ip
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							connectionOrigin
							country {
								id
								name
							}
							device {
								id
								name
							}
							deviceOS
							destination {
								application {
									id
									name
								}
								customApp {
									id
									name
								}
								appCategory {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								country {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								remoteAsn
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							action
							tracking {
								event {
									enabled
								}
								alert {
									enabled
									frequency
									subscriptionGroup {
										id
										name
									}
									webhook {
										id
										name
									}
									mailingList {
										id
										name
									}
								}
							}
							schedule {
								activeOn
								customTimeframe {
									from
									to
								}
								customRecurring {
									from
									to
									days
								}
							}
							exceptions {
								name
								source {
									ip
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								deviceOS
								country {
									id
									name
								}
								device {
									id
									name
								}
								destination {
									application {
										id
										name
									}
									customApp {
										id
										name
									}
									appCategory {
										id
										name
									}
									customCategory {
										id
										name
									}
									sanctionedAppsCategory {
										id
										name
									}
									country {
										id
										name
									}
									domain
									fqdn
									ip
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									remoteAsn
								}
								service {
									standard {
										id
										name
									}
									custom {
										port
										portRange {
											from
											to
										}
										protocol
									}
								}
								connectionOrigin
							}
						}
						properties
					}
					sections {
						audit {
							updatedTime
							updatedBy
						}
						section {
							id
							name
						}
						properties
					}
					auditInternetFirewallPolicy: audit {
						publishedTime
						publishedBy
					}
					revisionInternetFirewallPolicy: revision {
						id
						name
						description
						changes
						createdTime
						updatedTime
					}
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallPublishPolicyRevision(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyPublishRevisionInput *cato_models.PolicyPublishRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallPublishPolicyRevision, error) {
	vars := map[string]any{
		"internetFirewallPolicyMutationInput": internetFirewallPolicyMutationInput,
		"policyPublishRevisionInput":          policyPublishRevisionInput,
		"accountId":                           accountID,
	}

	var res PolicyInternetFirewallPublishPolicyRevision
	if err := c.Client.Post(ctx, "policyInternetFirewallPublishPolicyRevision", PolicyInternetFirewallPublishPolicyRevisionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallUpdateRuleDocument = `mutation policyInternetFirewallUpdateRule ($internetFirewallPolicyMutationInput: InternetFirewallPolicyMutationInput, $internetFirewallUpdateRuleInput: InternetFirewallUpdateRuleInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall(input: $internetFirewallPolicyMutationInput) {
			updateRule(input: $internetFirewallUpdateRuleInput) {
				rule {
					audit {
						updatedTime
						updatedBy
					}
					rule {
						id
						name
						description
						index
						section {
							id
							name
						}
						enabled
						source {
							ip
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						connectionOrigin
						country {
							id
							name
						}
						device {
							id
							name
						}
						deviceOS
						destination {
							application {
								id
								name
							}
							customApp {
								id
								name
							}
							appCategory {
								id
								name
							}
							customCategory {
								id
								name
							}
							sanctionedAppsCategory {
								id
								name
							}
							country {
								id
								name
							}
							domain
							fqdn
							ip
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							remoteAsn
						}
						service {
							standard {
								id
								name
							}
							custom {
								port
								portRange {
									from
									to
								}
								protocol
							}
						}
						action
						tracking {
							event {
								enabled
							}
							alert {
								enabled
								frequency
								subscriptionGroup {
									id
									name
								}
								webhook {
									id
									name
								}
								mailingList {
									id
									name
								}
							}
						}
						schedule {
							activeOnPolicySchedule: activeOn
							customTimeframePolicySchedule: customTimeframe {
								from
								to
							}
							customRecurringPolicySchedule: customRecurring {
								from
								to
								days
							}
						}
						exceptions {
							name
							source {
								ip
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							deviceOS
							country {
								id
								name
							}
							device {
								id
								name
							}
							destination {
								application {
									id
									name
								}
								customApp {
									id
									name
								}
								appCategory {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								country {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								remoteAsn
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							connectionOriginInternetFirewallRuleException: connectionOrigin
						}
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallUpdateRule(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, internetFirewallUpdateRuleInput cato_models.InternetFirewallUpdateRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallUpdateRule, error) {
	vars := map[string]any{
		"internetFirewallPolicyMutationInput": internetFirewallPolicyMutationInput,
		"internetFirewallUpdateRuleInput":     internetFirewallUpdateRuleInput,
		"accountId":                           accountID,
	}

	var res PolicyInternetFirewallUpdateRule
	if err := c.Client.Post(ctx, "policyInternetFirewallUpdateRule", PolicyInternetFirewallUpdateRuleDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallUpdateSectionDocument = `mutation policyInternetFirewallUpdateSection ($internetFirewallPolicyMutationInput: InternetFirewallPolicyMutationInput, $policyUpdateSectionInput: PolicyUpdateSectionInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall(input: $internetFirewallPolicyMutationInput) {
			updateSection(input: $policyUpdateSectionInput) {
				section {
					audit {
						updatedTime
						updatedBy
					}
					section {
						id
						name
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallUpdateSection(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, policyUpdateSectionInput cato_models.PolicyUpdateSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallUpdateSection, error) {
	vars := map[string]any{
		"internetFirewallPolicyMutationInput": internetFirewallPolicyMutationInput,
		"policyUpdateSectionInput":            policyUpdateSectionInput,
		"accountId":                           accountID,
	}

	var res PolicyInternetFirewallUpdateSection
	if err := c.Client.Post(ctx, "policyInternetFirewallUpdateSection", PolicyInternetFirewallUpdateSectionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallUpdatePolicyDocument = `mutation policyInternetFirewallUpdatePolicy ($internetFirewallPolicyMutationInput: InternetFirewallPolicyMutationInput, $internetFirewallPolicyUpdateInput: InternetFirewallPolicyUpdateInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall(input: $internetFirewallPolicyMutationInput) {
			updatePolicy(input: $internetFirewallPolicyUpdateInput) {
				policy {
					enabled
					rules {
						audit {
							updatedTime
							updatedBy
						}
						rule {
							id
							name
							description
							index
							section {
								id
								name
							}
							enabled
							source {
								ip
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							connectionOrigin
							country {
								id
								name
							}
							device {
								id
								name
							}
							deviceOS
							destination {
								application {
									id
									name
								}
								customApp {
									id
									name
								}
								appCategory {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								country {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								remoteAsn
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							action
							tracking {
								event {
									enabled
								}
								alert {
									enabled
									frequency
									subscriptionGroup {
										id
										name
									}
									webhook {
										id
										name
									}
									mailingList {
										id
										name
									}
								}
							}
							schedule {
								activeOn
								customTimeframe {
									from
									to
								}
								customRecurring {
									from
									to
									days
								}
							}
							exceptions {
								name
								source {
									ip
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								deviceOS
								country {
									id
									name
								}
								device {
									id
									name
								}
								destination {
									application {
										id
										name
									}
									customApp {
										id
										name
									}
									appCategory {
										id
										name
									}
									customCategory {
										id
										name
									}
									sanctionedAppsCategory {
										id
										name
									}
									country {
										id
										name
									}
									domain
									fqdn
									ip
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									remoteAsn
								}
								service {
									standard {
										id
										name
									}
									custom {
										port
										portRange {
											from
											to
										}
										protocol
									}
								}
								connectionOrigin
							}
						}
						properties
					}
					sections {
						audit {
							updatedTime
							updatedBy
						}
						section {
							id
							name
						}
						properties
					}
					auditInternetFirewallPolicy: audit {
						publishedTime
						publishedBy
					}
					revisionInternetFirewallPolicy: revision {
						id
						name
						description
						changes
						createdTime
						updatedTime
					}
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallUpdatePolicy(ctx context.Context, internetFirewallPolicyMutationInput *cato_models.InternetFirewallPolicyMutationInput, internetFirewallPolicyUpdateInput cato_models.InternetFirewallPolicyUpdateInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallUpdatePolicy, error) {
	vars := map[string]any{
		"internetFirewallPolicyMutationInput": internetFirewallPolicyMutationInput,
		"internetFirewallPolicyUpdateInput":   internetFirewallPolicyUpdateInput,
		"accountId":                           accountID,
	}

	var res PolicyInternetFirewallUpdatePolicy
	if err := c.Client.Post(ctx, "policyInternetFirewallUpdatePolicy", PolicyInternetFirewallUpdatePolicyDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyDocument = `query policy ($internetFirewallPolicyInput: InternetFirewallPolicyInput, $wanFirewallPolicyInput: WanFirewallPolicyInput, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall {
			policy(input: $internetFirewallPolicyInput) {
				enabled
				rules {
					audit {
						updatedTime
						updatedBy
					}
					rule {
						id
						name
						description
						index
						section {
							id
							name
						}
						enabled
						source {
							ip
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						connectionOrigin
						country {
							id
							name
						}
						device {
							id
							name
						}
						deviceOS
						destination {
							application {
								id
								name
							}
							customApp {
								id
								name
							}
							appCategory {
								id
								name
							}
							customCategory {
								id
								name
							}
							sanctionedAppsCategory {
								id
								name
							}
							country {
								id
								name
							}
							domain
							fqdn
							ip
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							remoteAsn
						}
						service {
							standard {
								id
								name
							}
							custom {
								port
								portRange {
									from
									to
								}
								protocol
							}
						}
						action
						tracking {
							event {
								enabled
							}
							alert {
								enabled
								frequency
								subscriptionGroup {
									id
									name
								}
								webhook {
									id
									name
								}
								mailingList {
									id
									name
								}
							}
						}
						schedule {
							activeOn
							customTimeframePolicySchedule: customTimeframe {
								from
								to
							}
							customRecurringPolicySchedule: customRecurring {
								from
								to
								days
							}
						}
						exceptions {
							name
							source {
								ip
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							deviceOS
							country {
								id
								name
							}
							device {
								id
								name
							}
							destination {
								application {
									id
									name
								}
								customApp {
									id
									name
								}
								appCategory {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								country {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								remoteAsn
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							connectionOrigin
						}
					}
					properties
				}
				sections {
					audit {
						updatedTime
						updatedBy
					}
					section {
						id
						name
					}
					properties
				}
				audit {
					publishedTime
					publishedBy
				}
				revision {
					id
					name
					description
					changes
					createdTime
					updatedTime
				}
			}
			revisionsInternetFirewallPolicyQueries: revisions {
				revision {
					id
					name
					description
					changes
					createdTime
					updatedTime
				}
			}
		}
		wanFirewall {
			policy(input: $wanFirewallPolicyInput) {
				enabled
				rules {
					audit {
						updatedTime
						updatedBy
					}
					rule {
						id
						name
						description
						index
						section {
							id
							name
						}
						enabled
						source {
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ip
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						connectionOrigin
						country {
							id
							name
						}
						device {
							id
							name
						}
						deviceOS
						destination {
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ip
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						application {
							application {
								id
								name
							}
							appCategory {
								id
								name
							}
							customApp {
								id
								name
							}
							customCategory {
								id
								name
							}
							sanctionedAppsCategory {
								id
								name
							}
							domain
							fqdn
							ip
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
						}
						service {
							standard {
								id
								name
							}
							custom {
								port
								portRange {
									from
									to
								}
								protocol
							}
						}
						action
						tracking {
							event {
								enabled
							}
							alert {
								enabled
								frequency
								subscriptionGroup {
									id
									name
								}
								webhook {
									id
									name
								}
								mailingList {
									id
									name
								}
							}
						}
						schedule {
							activeOn
							customTimeframePolicySchedule: customTimeframe {
								from
								to
							}
							customRecurringPolicySchedule: customRecurring {
								from
								to
								days
							}
						}
						direction
						exceptions {
							name
							source {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							deviceOS
							destination {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							country {
								id
								name
							}
							device {
								id
								name
							}
							application {
								application {
									id
									name
								}
								appCategory {
									id
									name
								}
								customApp {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							connectionOrigin
							direction
						}
					}
					properties
				}
				sections {
					audit {
						updatedTime
						updatedBy
					}
					section {
						id
						name
					}
					properties
				}
				audit {
					publishedTime
					publishedBy
				}
				revision {
					id
					name
					description
					changes
					createdTime
					updatedTime
				}
			}
			revisionsWanFirewallPolicyQueries: revisions {
				revision {
					id
					name
					description
					changes
					createdTime
					updatedTime
				}
			}
		}
	}
}
`

func (c *Client) Policy(ctx context.Context, internetFirewallPolicyInput *cato_models.InternetFirewallPolicyInput, wanFirewallPolicyInput *cato_models.WanFirewallPolicyInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*Policy, error) {
	vars := map[string]any{
		"internetFirewallPolicyInput": internetFirewallPolicyInput,
		"wanFirewallPolicyInput":      wanFirewallPolicyInput,
		"accountId":                   accountID,
	}

	var res Policy
	if err := c.Client.Post(ctx, "policy", PolicyDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyInternetFirewallAddRuleDocument = `mutation policyInternetFirewallAddRule ($internetFirewallAddRuleInput: InternetFirewallAddRuleInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		internetFirewall {
			addRule(input: $internetFirewallAddRuleInput) {
				rule {
					audit {
						updatedTime
						updatedBy
					}
					rule {
						id
						name
						description
						index
						section {
							id
							name
						}
						enabled
						source {
							ip
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						connectionOrigin
						country {
							id
							name
						}
						device {
							id
							name
						}
						deviceOS
						destination {
							application {
								id
								name
							}
							customApp {
								id
								name
							}
							appCategory {
								id
								name
							}
							customCategory {
								id
								name
							}
							sanctionedAppsCategory {
								id
								name
							}
							country {
								id
								name
							}
							domain
							fqdn
							ip
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							remoteAsn
						}
						service {
							standard {
								id
								name
							}
							custom {
								port
								portRange {
									from
									to
								}
								protocol
							}
						}
						action
						tracking {
							event {
								enabled
							}
							alert {
								enabled
								frequency
								subscriptionGroup {
									id
									name
								}
								webhook {
									id
									name
								}
								mailingList {
									id
									name
								}
							}
						}
						schedule {
							activeOn
							customTimeframePolicySchedule: customTimeframe {
								from
								to
							}
							customRecurringPolicySchedule: customRecurring {
								from
								to
								days
							}
						}
						exceptions {
							name
							source {
								ip
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							deviceOS
							country {
								id
								name
							}
							device {
								id
								name
							}
							destination {
								application {
									id
									name
								}
								customApp {
									id
									name
								}
								appCategory {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								country {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								remoteAsn
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							connectionOrigin
						}
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyInternetFirewallAddRule(ctx context.Context, internetFirewallAddRuleInput cato_models.InternetFirewallAddRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyInternetFirewallAddRule, error) {
	vars := map[string]any{
		"internetFirewallAddRuleInput": internetFirewallAddRuleInput,
		"accountId":                    accountID,
	}

	var res PolicyInternetFirewallAddRule
	if err := c.Client.Post(ctx, "policyInternetFirewallAddRule", PolicyInternetFirewallAddRuleDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallAddRuleDocument = `mutation policyWanFirewallAddRule ($wanFirewallAddRuleInput: WanFirewallAddRuleInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			addRule(input: $wanFirewallAddRuleInput) {
				rule {
					audit {
						updatedTime
						updatedBy
					}
					rule {
						id
						name
						description
						index
						section {
							id
							name
						}
						enabled
						source {
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ip
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						connectionOrigin
						country {
							id
							name
						}
						device {
							id
							name
						}
						deviceOS
						destination {
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ip
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						application {
							application {
								id
								name
							}
							appCategory {
								id
								name
							}
							customApp {
								id
								name
							}
							customCategory {
								id
								name
							}
							sanctionedAppsCategory {
								id
								name
							}
							domain
							fqdn
							ip
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
						}
						service {
							standard {
								id
								name
							}
							custom {
								port
								portRange {
									from
									to
								}
								protocol
							}
						}
						action
						tracking {
							event {
								enabled
							}
							alert {
								enabled
								frequency
								subscriptionGroup {
									id
									name
								}
								webhook {
									id
									name
								}
								mailingList {
									id
									name
								}
							}
						}
						schedule {
							activeOn
							customTimeframePolicySchedule: customTimeframe {
								from
								to
							}
							customRecurringPolicySchedule: customRecurring {
								from
								to
								days
							}
						}
						direction
						exceptions {
							name
							source {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							deviceOS
							destination {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							country {
								id
								name
							}
							device {
								id
								name
							}
							application {
								application {
									id
									name
								}
								appCategory {
									id
									name
								}
								customApp {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							connectionOrigin
							direction
						}
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallAddRule(ctx context.Context, wanFirewallAddRuleInput cato_models.WanFirewallAddRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallAddRule, error) {
	vars := map[string]any{
		"wanFirewallAddRuleInput": wanFirewallAddRuleInput,
		"accountId":               accountID,
	}

	var res PolicyWanFirewallAddRule
	if err := c.Client.Post(ctx, "policyWanFirewallAddRule", PolicyWanFirewallAddRuleDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallAddSectionDocument = `mutation policyWanFirewallAddSection ($policyAddSectionInput: PolicyAddSectionInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			addSection(input: $policyAddSectionInput) {
				section {
					audit {
						updatedTime
						updatedBy
					}
					section {
						id
						name
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallAddSection(ctx context.Context, policyAddSectionInput cato_models.PolicyAddSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallAddSection, error) {
	vars := map[string]any{
		"policyAddSectionInput": policyAddSectionInput,
		"accountId":             accountID,
	}

	var res PolicyWanFirewallAddSection
	if err := c.Client.Post(ctx, "policyWanFirewallAddSection", PolicyWanFirewallAddSectionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallCreatePolicyRevisionDocument = `mutation policyWanFirewallCreatePolicyRevision ($policyCreateRevisionInput: PolicyCreateRevisionInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			createPolicyRevision(input: $policyCreateRevisionInput) {
				policy {
					enabled
					rules {
						audit {
							updatedTime
							updatedBy
						}
						rule {
							id
							name
							description
							index
							section {
								id
								name
							}
							enabled
							source {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							connectionOrigin
							country {
								id
								name
							}
							device {
								id
								name
							}
							deviceOS
							destination {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							application {
								application {
									id
									name
								}
								appCategory {
									id
									name
								}
								customApp {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							action
							tracking {
								event {
									enabled
								}
								alert {
									enabled
									frequency
									subscriptionGroup {
										id
										name
									}
									webhook {
										id
										name
									}
									mailingList {
										id
										name
									}
								}
							}
							schedule {
								activeOn
								customTimeframe {
									from
									to
								}
								customRecurring {
									from
									to
									days
								}
							}
							direction
							exceptions {
								name
								source {
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ip
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								deviceOS
								destination {
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ip
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								country {
									id
									name
								}
								device {
									id
									name
								}
								application {
									application {
										id
										name
									}
									appCategory {
										id
										name
									}
									customApp {
										id
										name
									}
									customCategory {
										id
										name
									}
									sanctionedAppsCategory {
										id
										name
									}
									domain
									fqdn
									ip
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
								}
								service {
									standard {
										id
										name
									}
									custom {
										port
										portRange {
											from
											to
										}
										protocol
									}
								}
								connectionOrigin
								direction
							}
						}
						properties
					}
					sections {
						audit {
							updatedTime
							updatedBy
						}
						section {
							id
							name
						}
						properties
					}
					auditWanFirewallPolicy: audit {
						publishedTime
						publishedBy
					}
					revisionWanFirewallPolicy: revision {
						id
						name
						description
						changes
						createdTime
						updatedTime
					}
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallCreatePolicyRevision(ctx context.Context, policyCreateRevisionInput cato_models.PolicyCreateRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallCreatePolicyRevision, error) {
	vars := map[string]any{
		"policyCreateRevisionInput": policyCreateRevisionInput,
		"accountId":                 accountID,
	}

	var res PolicyWanFirewallCreatePolicyRevision
	if err := c.Client.Post(ctx, "policyWanFirewallCreatePolicyRevision", PolicyWanFirewallCreatePolicyRevisionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallDiscardPolicyRevisionDocument = `mutation policyWanFirewallDiscardPolicyRevision ($policyDiscardRevisionInput: PolicyDiscardRevisionInput, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			discardPolicyRevision(input: $policyDiscardRevisionInput) {
				policy {
					enabled
					rules {
						audit {
							updatedTime
							updatedBy
						}
						rule {
							id
							name
							description
							index
							section {
								id
								name
							}
							enabled
							source {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							connectionOrigin
							country {
								id
								name
							}
							device {
								id
								name
							}
							deviceOS
							destination {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							application {
								application {
									id
									name
								}
								appCategory {
									id
									name
								}
								customApp {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							action
							tracking {
								event {
									enabled
								}
								alert {
									enabled
									frequency
									subscriptionGroup {
										id
										name
									}
									webhook {
										id
										name
									}
									mailingList {
										id
										name
									}
								}
							}
							schedule {
								activeOn
								customTimeframe {
									from
									to
								}
								customRecurring {
									from
									to
									days
								}
							}
							direction
							exceptions {
								name
								source {
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ip
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								deviceOS
								destination {
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ip
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								country {
									id
									name
								}
								device {
									id
									name
								}
								application {
									application {
										id
										name
									}
									appCategory {
										id
										name
									}
									customApp {
										id
										name
									}
									customCategory {
										id
										name
									}
									sanctionedAppsCategory {
										id
										name
									}
									domain
									fqdn
									ip
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
								}
								service {
									standard {
										id
										name
									}
									custom {
										port
										portRange {
											from
											to
										}
										protocol
									}
								}
								connectionOrigin
								direction
							}
						}
						properties
					}
					sections {
						audit {
							updatedTime
							updatedBy
						}
						section {
							id
							name
						}
						properties
					}
					auditWanFirewallPolicy: audit {
						publishedTime
						publishedBy
					}
					revisionWanFirewallPolicy: revision {
						id
						name
						description
						changes
						createdTime
						updatedTime
					}
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallDiscardPolicyRevision(ctx context.Context, policyDiscardRevisionInput *cato_models.PolicyDiscardRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallDiscardPolicyRevision, error) {
	vars := map[string]any{
		"policyDiscardRevisionInput": policyDiscardRevisionInput,
		"accountId":                  accountID,
	}

	var res PolicyWanFirewallDiscardPolicyRevision
	if err := c.Client.Post(ctx, "policyWanFirewallDiscardPolicyRevision", PolicyWanFirewallDiscardPolicyRevisionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallMoveRuleDocument = `mutation policyWanFirewallMoveRule ($policyMoveRuleInput: PolicyMoveRuleInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			moveRule(input: $policyMoveRuleInput) {
				rule {
					audit {
						updatedTime
						updatedBy
					}
					rule {
						id
						name
						description
						index
						section {
							id
							name
						}
						enabled
						source {
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ip
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						connectionOrigin
						country {
							id
							name
						}
						device {
							id
							name
						}
						deviceOS
						destination {
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ip
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						application {
							application {
								id
								name
							}
							appCategory {
								id
								name
							}
							customApp {
								id
								name
							}
							customCategory {
								id
								name
							}
							sanctionedAppsCategory {
								id
								name
							}
							domain
							fqdn
							ip
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
						}
						service {
							standard {
								id
								name
							}
							custom {
								port
								portRange {
									from
									to
								}
								protocol
							}
						}
						action
						tracking {
							event {
								enabled
							}
							alert {
								enabled
								frequency
								subscriptionGroup {
									id
									name
								}
								webhook {
									id
									name
								}
								mailingList {
									id
									name
								}
							}
						}
						schedule {
							activeOn
							customTimeframePolicySchedule: customTimeframe {
								from
								to
							}
							customRecurringPolicySchedule: customRecurring {
								from
								to
								days
							}
						}
						direction
						exceptions {
							name
							source {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							deviceOS
							destination {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							country {
								id
								name
							}
							device {
								id
								name
							}
							application {
								application {
									id
									name
								}
								appCategory {
									id
									name
								}
								customApp {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							connectionOrigin
							direction
						}
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallMoveRule(ctx context.Context, policyMoveRuleInput cato_models.PolicyMoveRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallMoveRule, error) {
	vars := map[string]any{
		"policyMoveRuleInput": policyMoveRuleInput,
		"accountId":           accountID,
	}

	var res PolicyWanFirewallMoveRule
	if err := c.Client.Post(ctx, "policyWanFirewallMoveRule", PolicyWanFirewallMoveRuleDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallMoveSectionDocument = `mutation policyWanFirewallMoveSection ($policyMoveSectionInput: PolicyMoveSectionInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			moveSection(input: $policyMoveSectionInput) {
				section {
					audit {
						updatedTime
						updatedBy
					}
					section {
						id
						name
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallMoveSection(ctx context.Context, policyMoveSectionInput cato_models.PolicyMoveSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallMoveSection, error) {
	vars := map[string]any{
		"policyMoveSectionInput": policyMoveSectionInput,
		"accountId":              accountID,
	}

	var res PolicyWanFirewallMoveSection
	if err := c.Client.Post(ctx, "policyWanFirewallMoveSection", PolicyWanFirewallMoveSectionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallPublishPolicyRevisionDocument = `mutation policyWanFirewallPublishPolicyRevision ($policyPublishRevisionInput: PolicyPublishRevisionInput, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			publishPolicyRevision(input: $policyPublishRevisionInput) {
				policy {
					enabled
					rules {
						audit {
							updatedTime
							updatedBy
						}
						rule {
							id
							name
							description
							index
							section {
								id
								name
							}
							enabled
							source {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							connectionOrigin
							country {
								id
								name
							}
							device {
								id
								name
							}
							deviceOS
							destination {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							application {
								application {
									id
									name
								}
								appCategory {
									id
									name
								}
								customApp {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							action
							tracking {
								event {
									enabled
								}
								alert {
									enabled
									frequency
									subscriptionGroup {
										id
										name
									}
									webhook {
										id
										name
									}
									mailingList {
										id
										name
									}
								}
							}
							schedule {
								activeOn
								customTimeframe {
									from
									to
								}
								customRecurring {
									from
									to
									days
								}
							}
							direction
							exceptions {
								name
								source {
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ip
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								deviceOS
								destination {
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ip
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								country {
									id
									name
								}
								device {
									id
									name
								}
								application {
									application {
										id
										name
									}
									appCategory {
										id
										name
									}
									customApp {
										id
										name
									}
									customCategory {
										id
										name
									}
									sanctionedAppsCategory {
										id
										name
									}
									domain
									fqdn
									ip
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
								}
								service {
									standard {
										id
										name
									}
									custom {
										port
										portRange {
											from
											to
										}
										protocol
									}
								}
								connectionOrigin
								direction
							}
						}
						properties
					}
					sections {
						audit {
							updatedTime
							updatedBy
						}
						section {
							id
							name
						}
						properties
					}
					auditWanFirewallPolicy: audit {
						publishedTime
						publishedBy
					}
					revisionWanFirewallPolicy: revision {
						id
						name
						description
						changes
						createdTime
						updatedTime
					}
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallPublishPolicyRevision(ctx context.Context, policyPublishRevisionInput *cato_models.PolicyPublishRevisionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallPublishPolicyRevision, error) {
	vars := map[string]any{
		"policyPublishRevisionInput": policyPublishRevisionInput,
		"accountId":                  accountID,
	}

	var res PolicyWanFirewallPublishPolicyRevision
	if err := c.Client.Post(ctx, "policyWanFirewallPublishPolicyRevision", PolicyWanFirewallPublishPolicyRevisionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallRemoveRuleDocument = `mutation policyWanFirewallRemoveRule ($wanFirewallRemoveRuleInput: WanFirewallRemoveRuleInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			removeRule(input: $wanFirewallRemoveRuleInput) {
				rule {
					audit {
						updatedTime
						updatedBy
					}
					rule {
						id
						name
						description
						index
						section {
							id
							name
						}
						enabled
						source {
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ip
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						connectionOrigin
						country {
							id
							name
						}
						device {
							id
							name
						}
						deviceOS
						destination {
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ip
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						application {
							application {
								id
								name
							}
							appCategory {
								id
								name
							}
							customApp {
								id
								name
							}
							customCategory {
								id
								name
							}
							sanctionedAppsCategory {
								id
								name
							}
							domain
							fqdn
							ip
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
						}
						service {
							standard {
								id
								name
							}
							custom {
								port
								portRange {
									from
									to
								}
								protocol
							}
						}
						action
						tracking {
							event {
								enabled
							}
							alert {
								enabled
								frequency
								subscriptionGroup {
									id
									name
								}
								webhook {
									id
									name
								}
								mailingList {
									id
									name
								}
							}
						}
						schedule {
							activeOn
							customTimeframePolicySchedule: customTimeframe {
								from
								to
							}
							customRecurringPolicySchedule: customRecurring {
								from
								to
								days
							}
						}
						direction
						exceptions {
							name
							source {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							deviceOS
							destination {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							country {
								id
								name
							}
							device {
								id
								name
							}
							application {
								application {
									id
									name
								}
								appCategory {
									id
									name
								}
								customApp {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							connectionOrigin
							direction
						}
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallRemoveRule(ctx context.Context, wanFirewallRemoveRuleInput cato_models.WanFirewallRemoveRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallRemoveRule, error) {
	vars := map[string]any{
		"wanFirewallRemoveRuleInput": wanFirewallRemoveRuleInput,
		"accountId":                  accountID,
	}

	var res PolicyWanFirewallRemoveRule
	if err := c.Client.Post(ctx, "policyWanFirewallRemoveRule", PolicyWanFirewallRemoveRuleDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallRemoveSectionDocument = `mutation policyWanFirewallRemoveSection ($policyRemoveSectionInput: PolicyRemoveSectionInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			removeSection(input: $policyRemoveSectionInput) {
				section {
					audit {
						updatedTime
						updatedBy
					}
					section {
						id
						name
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallRemoveSection(ctx context.Context, policyRemoveSectionInput cato_models.PolicyRemoveSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallRemoveSection, error) {
	vars := map[string]any{
		"policyRemoveSectionInput": policyRemoveSectionInput,
		"accountId":                accountID,
	}

	var res PolicyWanFirewallRemoveSection
	if err := c.Client.Post(ctx, "policyWanFirewallRemoveSection", PolicyWanFirewallRemoveSectionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallUpdatePolicyDocument = `mutation policyWanFirewallUpdatePolicy ($wanFirewallPolicyUpdateInput: WanFirewallPolicyUpdateInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			updatePolicy(input: $wanFirewallPolicyUpdateInput) {
				policy {
					enabled
					rules {
						audit {
							updatedTime
							updatedBy
						}
						rule {
							id
							name
							description
							index
							section {
								id
								name
							}
							enabled
							source {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							connectionOrigin
							country {
								id
								name
							}
							device {
								id
								name
							}
							deviceOS
							destination {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							application {
								application {
									id
									name
								}
								appCategory {
									id
									name
								}
								customApp {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							action
							tracking {
								event {
									enabled
								}
								alert {
									enabled
									frequency
									subscriptionGroup {
										id
										name
									}
									webhook {
										id
										name
									}
									mailingList {
										id
										name
									}
								}
							}
							schedule {
								activeOn
								customTimeframe {
									from
									to
								}
								customRecurring {
									from
									to
									days
								}
							}
							direction
							exceptions {
								name
								source {
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ip
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								deviceOS
								destination {
									host {
										id
										name
									}
									site {
										id
										name
									}
									subnet
									ip
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
									networkInterface {
										id
										name
									}
									siteNetworkSubnet {
										id
										name
									}
									floatingSubnet {
										id
										name
									}
									user {
										id
										name
									}
									usersGroup {
										id
										name
									}
									group {
										id
										name
									}
									systemGroup {
										id
										name
									}
								}
								country {
									id
									name
								}
								device {
									id
									name
								}
								application {
									application {
										id
										name
									}
									appCategory {
										id
										name
									}
									customApp {
										id
										name
									}
									customCategory {
										id
										name
									}
									sanctionedAppsCategory {
										id
										name
									}
									domain
									fqdn
									ip
									subnet
									ipRange {
										from
										to
									}
									globalIpRange {
										id
										name
									}
								}
								service {
									standard {
										id
										name
									}
									custom {
										port
										portRange {
											from
											to
										}
										protocol
									}
								}
								connectionOrigin
								direction
							}
						}
						properties
					}
					sections {
						audit {
							updatedTime
							updatedBy
						}
						section {
							id
							name
						}
						properties
					}
					auditWanFirewallPolicy: audit {
						publishedTime
						publishedBy
					}
					revisionWanFirewallPolicy: revision {
						id
						name
						description
						changes
						createdTime
						updatedTime
					}
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallUpdatePolicy(ctx context.Context, wanFirewallPolicyUpdateInput cato_models.WanFirewallPolicyUpdateInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallUpdatePolicy, error) {
	vars := map[string]any{
		"wanFirewallPolicyUpdateInput": wanFirewallPolicyUpdateInput,
		"accountId":                    accountID,
	}

	var res PolicyWanFirewallUpdatePolicy
	if err := c.Client.Post(ctx, "policyWanFirewallUpdatePolicy", PolicyWanFirewallUpdatePolicyDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallUpdateRuleDocument = `mutation policyWanFirewallUpdateRule ($wanFirewallUpdateRuleInput: WanFirewallUpdateRuleInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			updateRule(input: $wanFirewallUpdateRuleInput) {
				rule {
					audit {
						updatedTime
						updatedBy
					}
					rule {
						id
						name
						description
						index
						section {
							id
							name
						}
						enabled
						source {
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ip
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						connectionOrigin
						country {
							id
							name
						}
						device {
							id
							name
						}
						deviceOS
						destination {
							host {
								id
								name
							}
							site {
								id
								name
							}
							subnet
							ip
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
							networkInterface {
								id
								name
							}
							siteNetworkSubnet {
								id
								name
							}
							floatingSubnet {
								id
								name
							}
							user {
								id
								name
							}
							usersGroup {
								id
								name
							}
							group {
								id
								name
							}
							systemGroup {
								id
								name
							}
						}
						application {
							application {
								id
								name
							}
							appCategory {
								id
								name
							}
							customApp {
								id
								name
							}
							customCategory {
								id
								name
							}
							sanctionedAppsCategory {
								id
								name
							}
							domain
							fqdn
							ip
							subnet
							ipRange {
								from
								to
							}
							globalIpRange {
								id
								name
							}
						}
						service {
							standard {
								id
								name
							}
							custom {
								port
								portRange {
									from
									to
								}
								protocol
							}
						}
						action
						tracking {
							event {
								enabled
							}
							alert {
								enabled
								frequency
								subscriptionGroup {
									id
									name
								}
								webhook {
									id
									name
								}
								mailingList {
									id
									name
								}
							}
						}
						schedule {
							activeOnPolicySchedule: activeOn
							customTimeframePolicySchedule: customTimeframe {
								from
								to
							}
							customRecurringPolicySchedule: customRecurring {
								from
								to
								days
							}
						}
						direction
						exceptions {
							name
							source {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							deviceOS
							destination {
								host {
									id
									name
								}
								site {
									id
									name
								}
								subnet
								ip
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
								networkInterface {
									id
									name
								}
								siteNetworkSubnet {
									id
									name
								}
								floatingSubnet {
									id
									name
								}
								user {
									id
									name
								}
								usersGroup {
									id
									name
								}
								group {
									id
									name
								}
								systemGroup {
									id
									name
								}
							}
							country {
								id
								name
							}
							device {
								id
								name
							}
							application {
								application {
									id
									name
								}
								appCategory {
									id
									name
								}
								customApp {
									id
									name
								}
								customCategory {
									id
									name
								}
								sanctionedAppsCategory {
									id
									name
								}
								domain
								fqdn
								ip
								subnet
								ipRange {
									from
									to
								}
								globalIpRange {
									id
									name
								}
							}
							service {
								standard {
									id
									name
								}
								custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocol
								}
							}
							connectionOriginWanFirewallRuleException: connectionOrigin
							directionWanFirewallRuleException: direction
						}
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallUpdateRule(ctx context.Context, wanFirewallUpdateRuleInput cato_models.WanFirewallUpdateRuleInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallUpdateRule, error) {
	vars := map[string]any{
		"wanFirewallUpdateRuleInput": wanFirewallUpdateRuleInput,
		"accountId":                  accountID,
	}

	var res PolicyWanFirewallUpdateRule
	if err := c.Client.Post(ctx, "policyWanFirewallUpdateRule", PolicyWanFirewallUpdateRuleDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const PolicyWanFirewallUpdateSectionDocument = `mutation policyWanFirewallUpdateSection ($policyUpdateSectionInput: PolicyUpdateSectionInput!, $accountId: ID!) {
	policy(accountId: $accountId) {
		wanFirewall {
			updateSection(input: $policyUpdateSectionInput) {
				section {
					audit {
						updatedTime
						updatedBy
					}
					section {
						id
						name
					}
					properties
				}
				status
				errors {
					errorMessage
					errorCode
				}
			}
		}
	}
}
`

func (c *Client) PolicyWanFirewallUpdateSection(ctx context.Context, policyUpdateSectionInput cato_models.PolicyUpdateSectionInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*PolicyWanFirewallUpdateSection, error) {
	vars := map[string]any{
		"policyUpdateSectionInput": policyUpdateSectionInput,
		"accountId":                accountID,
	}

	var res PolicyWanFirewallUpdateSection
	if err := c.Client.Post(ctx, "policyWanFirewallUpdateSection", PolicyWanFirewallUpdateSectionDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteDocument = `query site ($cloudInterconnectPhysicalConnectionInput: CloudInterconnectPhysicalConnectionInput!, $cloudInterconnectPhysicalConnectionIdInput: CloudInterconnectPhysicalConnectionIdInput!, $cloudInterconnectConnectionConnectivityInput: CloudInterconnectConnectionConnectivityInput!, $bgpPeerRefInput: BgpPeerRefInput!, $bgpPeerListInput: BgpPeerListInput!, $siteBgpStatusInput: SiteBgpStatusInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		cloudInterconnectPhysicalConnection(input: $cloudInterconnectPhysicalConnectionInput) {
			id
			site {
				id
				name
			}
			haRole
			popLocation {
				id
				name
			}
			serviceProviderName
			encapsulationMethod
			subnet
			privateCatoIp
			privateSiteIp
			upstreamBwLimit
			downstreamBwLimit
			vlan
			sVlan
			cVlan
		}
		cloudInterconnectPhysicalConnectionId(input: $cloudInterconnectPhysicalConnectionIdInput) {
			id
		}
		cloudInterconnectConnectionConnectivity(input: $cloudInterconnectConnectionConnectivityInput) {
			success
		}
		bgpPeer(input: $bgpPeerRefInput) {
			site {
				id
				name
			}
			id
			name
			peerAsn
			catoAsn
			peerIp
			catoIp
			advertiseDefaultRoute
			advertiseAllRoutes
			advertiseSummaryRoutes
			summaryRoute {
				id
				route
				community {
					from
					to
				}
			}
			defaultAction
			performNat
			md5AuthKey
			metric
			holdTime
			keepaliveInterval
			bfdEnabled
			bfdSettingsBgpPeer: bfdSettings {
				transmitInterval
				receiveInterval
				multiplier
			}
			trackingBgpPeer: tracking {
				id
				enabled
				alertFrequency
				subscriptionId
			}
		}
		bgpPeerList(input: $bgpPeerListInput) {
			bgpPeerBgpPeerListPayload: bgpPeer {
				site {
					id
					name
				}
				id
				name
				peerAsn
				catoAsn
				peerIp
				catoIp
				advertiseDefaultRoute
				advertiseAllRoutes
				advertiseSummaryRoutes
				summaryRoute {
					id
					route
					community {
						from
						to
					}
				}
				defaultAction
				performNat
				md5AuthKey
				metric
				holdTime
				keepaliveInterval
				bfdEnabled
				bfdSettings {
					transmitInterval
					receiveInterval
					multiplier
				}
				tracking {
					id
					enabled
					alertFrequency
					subscriptionId
				}
			}
			total
		}
		siteBgpStatus(input: $siteBgpStatusInput) {
			status {
				remoteIp
				bgpSession
				bfdSession
				routesFromPeer
				routesToPeer
				rejectedRoutesFromPeer {
					subnet
					type
					community {
						from
						to
					}
					rule
					lastPublishAttempt
				}
			}
			rawStatus
		}
	}
}
`

func (c *Client) Site(ctx context.Context, cloudInterconnectPhysicalConnectionInput cato_models.CloudInterconnectPhysicalConnectionInput, cloudInterconnectPhysicalConnectionIDInput cato_models.CloudInterconnectPhysicalConnectionIDInput, cloudInterconnectConnectionConnectivityInput cato_models.CloudInterconnectConnectionConnectivityInput, bgpPeerRefInput cato_models.BgpPeerRefInput, bgpPeerListInput cato_models.BgpPeerListInput, siteBgpStatusInput cato_models.SiteBgpStatusInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*Site, error) {
	vars := map[string]any{
		"cloudInterconnectPhysicalConnectionInput":     cloudInterconnectPhysicalConnectionInput,
		"cloudInterconnectPhysicalConnectionIdInput":   cloudInterconnectPhysicalConnectionIDInput,
		"cloudInterconnectConnectionConnectivityInput": cloudInterconnectConnectionConnectivityInput,
		"bgpPeerRefInput":    bgpPeerRefInput,
		"bgpPeerListInput":   bgpPeerListInput,
		"siteBgpStatusInput": siteBgpStatusInput,
		"accountId":          accountID,
	}

	var res Site
	if err := c.Client.Post(ctx, "site", SiteDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteAddIpsecIkeV2SiteDocument = `mutation siteAddIpsecIkeV2Site ($addIpsecIkeV2SiteInput: AddIpsecIkeV2SiteInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		addIpsecIkeV2Site(input: $addIpsecIkeV2SiteInput) {
			siteId
		}
	}
}
`

func (c *Client) SiteAddIpsecIkeV2Site(ctx context.Context, addIpsecIkeV2SiteInput cato_models.AddIpsecIkeV2SiteInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddIpsecIkeV2Site, error) {
	vars := map[string]any{
		"addIpsecIkeV2SiteInput": addIpsecIkeV2SiteInput,
		"accountId":              accountID,
	}

	var res SiteAddIpsecIkeV2Site
	if err := c.Client.Post(ctx, "siteAddIpsecIkeV2Site", SiteAddIpsecIkeV2SiteDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteAddIpsecIkeV2SiteTunnelsDocument = `mutation siteAddIpsecIkeV2SiteTunnels ($siteId: ID!, $addIpsecIkeV2SiteTunnelsInput: AddIpsecIkeV2SiteTunnelsInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		addIpsecIkeV2SiteTunnels(siteId: $siteId, input: $addIpsecIkeV2SiteTunnelsInput) {
			siteId
			primaryAddIpsecIkeV2SiteTunnelsPayload: primary {
				fqdn
				tunnels {
					tunnelIdAddIpsecIkeV2SiteTunnelPayload: tunnelId
					localId
				}
			}
			secondaryAddIpsecIkeV2SiteTunnelsPayload: secondary {
				fqdn
				tunnels {
					tunnelIdAddIpsecIkeV2SiteTunnelPayload: tunnelId
					localId
				}
			}
		}
	}
}
`

func (c *Client) SiteAddIpsecIkeV2SiteTunnels(ctx context.Context, siteID string, addIpsecIkeV2SiteTunnelsInput cato_models.AddIpsecIkeV2SiteTunnelsInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddIpsecIkeV2SiteTunnels, error) {
	vars := map[string]any{
		"siteId":                        siteID,
		"addIpsecIkeV2SiteTunnelsInput": addIpsecIkeV2SiteTunnelsInput,
		"accountId":                     accountID,
	}

	var res SiteAddIpsecIkeV2SiteTunnels
	if err := c.Client.Post(ctx, "siteAddIpsecIkeV2SiteTunnels", SiteAddIpsecIkeV2SiteTunnelsDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteAddNetworkRangeDocument = `mutation siteAddNetworkRange ($lanSocketInterfaceId: ID!, $addNetworkRangeInput: AddNetworkRangeInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		addNetworkRange(lanSocketInterfaceId: $lanSocketInterfaceId, input: $addNetworkRangeInput) {
			networkRangeId
		}
	}
}
`

func (c *Client) SiteAddNetworkRange(ctx context.Context, lanSocketInterfaceID string, addNetworkRangeInput cato_models.AddNetworkRangeInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddNetworkRange, error) {
	vars := map[string]any{
		"lanSocketInterfaceId": lanSocketInterfaceID,
		"addNetworkRangeInput": addNetworkRangeInput,
		"accountId":            accountID,
	}

	var res SiteAddNetworkRange
	if err := c.Client.Post(ctx, "siteAddNetworkRange", SiteAddNetworkRangeDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteAddSocketSiteDocument = `mutation siteAddSocketSite ($addSocketSiteInput: AddSocketSiteInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		addSocketSite(input: $addSocketSiteInput) {
			siteId
		}
	}
}
`

func (c *Client) SiteAddSocketSite(ctx context.Context, addSocketSiteInput cato_models.AddSocketSiteInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddSocketSite, error) {
	vars := map[string]any{
		"addSocketSiteInput": addSocketSiteInput,
		"accountId":          accountID,
	}

	var res SiteAddSocketSite
	if err := c.Client.Post(ctx, "siteAddSocketSite", SiteAddSocketSiteDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteAddStaticHostDocument = `mutation siteAddStaticHost ($siteId: ID!, $addStaticHostInput: AddStaticHostInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		addStaticHost(siteId: $siteId, input: $addStaticHostInput) {
			hostId
		}
	}
}
`

func (c *Client) SiteAddStaticHost(ctx context.Context, siteID string, addStaticHostInput cato_models.AddStaticHostInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteAddStaticHost, error) {
	vars := map[string]any{
		"siteId":             siteID,
		"addStaticHostInput": addStaticHostInput,
		"accountId":          accountID,
	}

	var res SiteAddStaticHost
	if err := c.Client.Post(ctx, "siteAddStaticHost", SiteAddStaticHostDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteRemoveNetworkRangeDocument = `mutation siteRemoveNetworkRange ($networkRangeId: ID!, $accountId: ID!) {
	site(accountId: $accountId) {
		removeNetworkRange(networkRangeId: $networkRangeId) {
			networkRangeId
		}
	}
}
`

func (c *Client) SiteRemoveNetworkRange(ctx context.Context, networkRangeID string, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteRemoveNetworkRange, error) {
	vars := map[string]any{
		"networkRangeId": networkRangeID,
		"accountId":      accountID,
	}

	var res SiteRemoveNetworkRange
	if err := c.Client.Post(ctx, "siteRemoveNetworkRange", SiteRemoveNetworkRangeDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteRemoveSiteDocument = `mutation siteRemoveSite ($siteId: ID!, $accountId: ID!) {
	site(accountId: $accountId) {
		removeSite(siteId: $siteId) {
			siteId
		}
	}
}
`

func (c *Client) SiteRemoveSite(ctx context.Context, siteID string, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteRemoveSite, error) {
	vars := map[string]any{
		"siteId":    siteID,
		"accountId": accountID,
	}

	var res SiteRemoveSite
	if err := c.Client.Post(ctx, "siteRemoveSite", SiteRemoveSiteDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteRemoveStaticHostDocument = `mutation siteRemoveStaticHost ($hostId: ID!, $accountId: ID!) {
	site(accountId: $accountId) {
		removeStaticHost(hostId: $hostId) {
			hostId
		}
	}
}
`

func (c *Client) SiteRemoveStaticHost(ctx context.Context, hostID string, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteRemoveStaticHost, error) {
	vars := map[string]any{
		"hostId":    hostID,
		"accountId": accountID,
	}

	var res SiteRemoveStaticHost
	if err := c.Client.Post(ctx, "siteRemoveStaticHost", SiteRemoveStaticHostDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteUpdateHaDocument = `mutation siteUpdateHa ($siteId: ID!, $updateHaInput: UpdateHaInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		updateHa(siteId: $siteId, input: $updateHaInput) {
			siteId
		}
	}
}
`

func (c *Client) SiteUpdateHa(ctx context.Context, siteID string, updateHaInput cato_models.UpdateHaInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateHa, error) {
	vars := map[string]any{
		"siteId":        siteID,
		"updateHaInput": updateHaInput,
		"accountId":     accountID,
	}

	var res SiteUpdateHa
	if err := c.Client.Post(ctx, "siteUpdateHa", SiteUpdateHaDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteUpdateIpsecIkeV2SiteGeneralDetailsDocument = `mutation siteUpdateIpsecIkeV2SiteGeneralDetails ($siteId: ID!, $updateIpsecIkeV2SiteGeneralDetailsInput: UpdateIpsecIkeV2SiteGeneralDetailsInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		updateIpsecIkeV2SiteGeneralDetails(siteId: $siteId, input: $updateIpsecIkeV2SiteGeneralDetailsInput) {
			siteId
			localId
		}
	}
}
`

func (c *Client) SiteUpdateIpsecIkeV2SiteGeneralDetails(ctx context.Context, siteID string, updateIpsecIkeV2SiteGeneralDetailsInput cato_models.UpdateIpsecIkeV2SiteGeneralDetailsInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateIpsecIkeV2SiteGeneralDetails, error) {
	vars := map[string]any{
		"siteId": siteID,
		"updateIpsecIkeV2SiteGeneralDetailsInput": updateIpsecIkeV2SiteGeneralDetailsInput,
		"accountId": accountID,
	}

	var res SiteUpdateIpsecIkeV2SiteGeneralDetails
	if err := c.Client.Post(ctx, "siteUpdateIpsecIkeV2SiteGeneralDetails", SiteUpdateIpsecIkeV2SiteGeneralDetailsDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteUpdateIpsecIkeV2SiteTunnelsDocument = `mutation siteUpdateIpsecIkeV2SiteTunnels ($siteId: ID!, $updateIpsecIkeV2SiteTunnelsInput: UpdateIpsecIkeV2SiteTunnelsInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		updateIpsecIkeV2SiteTunnels(siteId: $siteId, input: $updateIpsecIkeV2SiteTunnelsInput) {
			siteId
			primaryUpdateIpsecIkeV2SiteTunnelsPayload: primary {
				fqdn
				tunnels {
					tunnelIdUpdateIpsecIkeV2SiteTunnelPayload: tunnelId
					localId
				}
			}
			secondaryUpdateIpsecIkeV2SiteTunnelsPayload: secondary {
				fqdn
				tunnels {
					tunnelIdUpdateIpsecIkeV2SiteTunnelPayload: tunnelId
					localId
				}
			}
		}
	}
}
`

func (c *Client) SiteUpdateIpsecIkeV2SiteTunnels(ctx context.Context, siteID string, updateIpsecIkeV2SiteTunnelsInput cato_models.UpdateIpsecIkeV2SiteTunnelsInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateIpsecIkeV2SiteTunnels, error) {
	vars := map[string]any{
		"siteId":                           siteID,
		"updateIpsecIkeV2SiteTunnelsInput": updateIpsecIkeV2SiteTunnelsInput,
		"accountId":                        accountID,
	}

	var res SiteUpdateIpsecIkeV2SiteTunnels
	if err := c.Client.Post(ctx, "siteUpdateIpsecIkeV2SiteTunnels", SiteUpdateIpsecIkeV2SiteTunnelsDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteUpdateNetworkRangeDocument = `mutation siteUpdateNetworkRange ($networkRangeId: ID!, $updateNetworkRangeInput: UpdateNetworkRangeInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		updateNetworkRange(networkRangeId: $networkRangeId, input: $updateNetworkRangeInput) {
			networkRangeId
		}
	}
}
`

func (c *Client) SiteUpdateNetworkRange(ctx context.Context, networkRangeID string, updateNetworkRangeInput cato_models.UpdateNetworkRangeInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateNetworkRange, error) {
	vars := map[string]any{
		"networkRangeId":          networkRangeID,
		"updateNetworkRangeInput": updateNetworkRangeInput,
		"accountId":               accountID,
	}

	var res SiteUpdateNetworkRange
	if err := c.Client.Post(ctx, "siteUpdateNetworkRange", SiteUpdateNetworkRangeDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteUpdateSiteGeneralDetailsDocument = `mutation siteUpdateSiteGeneralDetails ($siteId: ID!, $updateSiteGeneralDetailsInput: UpdateSiteGeneralDetailsInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		updateSiteGeneralDetails(siteId: $siteId, input: $updateSiteGeneralDetailsInput) {
			siteId
		}
	}
}
`

func (c *Client) SiteUpdateSiteGeneralDetails(ctx context.Context, siteID string, updateSiteGeneralDetailsInput cato_models.UpdateSiteGeneralDetailsInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateSiteGeneralDetails, error) {
	vars := map[string]any{
		"siteId":                        siteID,
		"updateSiteGeneralDetailsInput": updateSiteGeneralDetailsInput,
		"accountId":                     accountID,
	}

	var res SiteUpdateSiteGeneralDetails
	if err := c.Client.Post(ctx, "siteUpdateSiteGeneralDetails", SiteUpdateSiteGeneralDetailsDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteUpdateSocketInterfaceDocument = `mutation siteUpdateSocketInterface ($siteId: ID!, $socketInterfaceId: SocketInterfaceIDEnum!, $updateSocketInterfaceInput: UpdateSocketInterfaceInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		updateSocketInterface(siteId: $siteId, socketInterfaceId: $socketInterfaceId, input: $updateSocketInterfaceInput) {
			siteId
			socketInterfaceId
		}
	}
}
`

func (c *Client) SiteUpdateSocketInterface(ctx context.Context, siteID string, socketInterfaceID cato_models.SocketInterfaceIDEnum, updateSocketInterfaceInput cato_models.UpdateSocketInterfaceInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateSocketInterface, error) {
	vars := map[string]any{
		"siteId":                     siteID,
		"socketInterfaceId":          socketInterfaceID,
		"updateSocketInterfaceInput": updateSocketInterfaceInput,
		"accountId":                  accountID,
	}

	var res SiteUpdateSocketInterface
	if err := c.Client.Post(ctx, "siteUpdateSocketInterface", SiteUpdateSocketInterfaceDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SiteUpdateStaticHostDocument = `mutation siteUpdateStaticHost ($hostId: ID!, $updateStaticHostInput: UpdateStaticHostInput!, $accountId: ID!) {
	site(accountId: $accountId) {
		updateStaticHost(hostId: $hostId, input: $updateStaticHostInput) {
			hostId
		}
	}
}
`

func (c *Client) SiteUpdateStaticHost(ctx context.Context, hostID string, updateStaticHostInput cato_models.UpdateStaticHostInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*SiteUpdateStaticHost, error) {
	vars := map[string]any{
		"hostId":                hostID,
		"updateStaticHostInput": updateStaticHostInput,
		"accountId":             accountID,
	}

	var res SiteUpdateStaticHost
	if err := c.Client.Post(ctx, "siteUpdateStaticHost", SiteUpdateStaticHostDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const SubDomainsDocument = `query subDomains ($accountID: ID!, $managedAccount: Boolean) {
	subDomains(accountID: $accountID, managedAccount: $managedAccount) {
		accountId
		accountName
		accountType
		subDomain
	}
}
`

func (c *Client) SubDomains(ctx context.Context, accountID string, managedAccount *bool, interceptors ...clientv2.RequestInterceptor) (*SubDomains, error) {
	vars := map[string]any{
		"accountID":      accountID,
		"managedAccount": managedAccount,
	}

	var res SubDomains
	if err := c.Client.Post(ctx, "subDomains", SubDomainsDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

const XdrDocument = `query xdr ($storyInput: StoryInput!, $accountID: ID!) {
	xdr(accountID: $accountID) {
		stories(input: $storyInput) {
			paging {
				from
				limit
				total
			}
			items {
				id
				accountId
				analystName
				analystEmail
				accountName
				updatedAt
				createdAt
				playbook
				summary
				incident {
					id
					firstSignal
					lastSignal
					engineTypeMergedIncident: engineType
					vendorMergedIncident: vendor
					producer
					producerName
					connectionTypeMergedIncident: connectionType
					indication
					queryName
					criticality
					source
					ticket
					statusMergedIncident: status
					research
					siteName
					storyDuration
					description
					sourceIp
					analystFeedbackMergedIncident: analystFeedback {
						verdict
						severity
						threatType {
							name
							recommendedAction
							details
						}
						threatClassification
						additionalInfo
					}
					siteMergedIncident: site {
						id
						name
					}
					userMergedIncident: user {
						id
						name
					}
					predictedVerdictMergedIncident: predictedVerdict
					predictedThreatType
					... on MicrosoftEndpoint {
						similarStoriesData {
							storyId
							threatTypeName
							verdict
							threatClassification
							similarityPercentage
							indication
						}
						device {
							id
							deviceName
							osDetailsMicrosoftDeviceDetails: osDetails {
								osType
								osBuild
								osVersion
							}
							loggedOnUsersMicrosoftDeviceDetails: loggedOnUsers {
								id
								name
								... on MicrosoftEndpointUser {
									userSid
									accountName
									domainName
									principalName
								}
								... on CatoEndpointUser {
									id
									name
								}
							}
							firstSeenDateTime
							avStatusMicrosoftDeviceDetails: avStatus
							healthStatusMicrosoftDeviceDetails: healthStatus
							rbacGroupMicrosoftDeviceDetails: rbacGroup {
								id
								name
							}
							ipInterfaces
							azureAdDeviceId
							onboardingStatusMicrosoftDeviceDetails: onboardingStatus
						}
						alerts {
							id
							title
							description
							threatName
							mitreTechnique {
								id
								name
							}
							mitreSubTechnique {
								id
								name
							}
							createdDateTime
							resources {
								id
								createdDateTime
								remediationStatus
								remediationStatusDetails
								tags
								roles
								verdict
								... on MicrosoftProcessResource {
									processId
									processCommandLine
									imageFile {
										name
										path
										size
										sha1
										sha256
										md5
										issuer
										signer
										publisher
									}
									userAccount {
										id
										name
										... on MicrosoftEndpointUser {
											userSid
											accountName
											domainName
											principalName
										}
										... on CatoEndpointUser {
											id
											name
										}
									}
								}
								... on MicrosoftFileResource {
									fileDetails {
										name
										path
										size
										sha1
										sha256
										md5
										issuer
										signer
										publisher
									}
									detectionStatus
								}
								... on MicrosoftRegistryResource {
									hive
									key
									value
									valueName
									valueType
								}
							}
							activities {
								id
								resourceId
								parentResourceId
								action
								firstActivityDateTime
								lastActivityDateTime
							}
							criticality
							comments
							recommendedActions
							category
							ownerName
							threatFamilyName
							threatType
							resolvedDateTime
							firstActivityDateTime
							lastActivityDateTime
							lastUpdateDateTime
							localIp
							destinationIp
							destinationUrl
							statusMicrosoftDefenderEndpointAlert: status
							providerAlertId
							alertWebUrl
							determinationMicrosoftDefenderEndpointAlert: determination
							detectionSourceMicrosoftDefenderEndpointAlert: detectionSource
							classificationMicrosoftDefenderEndpointAlert: classification
						}
					}
					... on AnomalyStats {
						similarStoriesData {
							storyId
							threatTypeName
							verdict
							threatClassification
							similarityPercentage
							indication
						}
						srcSiteId
						os
						deviceName
						macAddress
						logonName
						clientClass
						drillDownFilter {
							name
							value
						}
						breakdownField
						subjectType
						extra {
							name
							type
							value
						}
						gaussian {
							std
							ss
							z_score
							avg
							n
						}
						metric {
							name
							value
						}
						metricDetails {
							name
							units
						}
						mitres {
							id
							name
						}
						rules
						timeSeries {
							data
							label
							sum
							unitsIncidentTimeseries: units
							info
							keyIncidentTimeseries: key {
								measureFieldName
								dimensions {
									fieldName
									value
								}
							}
						}
						targets {
							typeIncidentTargetRep: type
							name
							analysisScore
							infectionSource
							threatReference
							catoPopularity
							threatFeeds
							creationTime
							categories
							countryOfRegistration
							searchHits
							engines
							eventData {
								signatureId
								eventType
								threatType
								threatName
								severity
								action
								ruleId
								virusName
								scanResult
								appId
								appName
								dnsProtectionCategory
							}
						}
						direction
					}
					... on AnomalyEvents {
						similarStoriesData {
							storyId
							threatTypeName
							verdict
							threatClassification
							similarityPercentage
							indication
						}
						srcSiteId
						os
						deviceName
						macAddress
						logonName
						clientClass
						drillDownFilter {
							name
							value
						}
						breakdownField
						subjectType
						extra {
							name
							type
							value
						}
						gaussian {
							std
							ss
							z_score
							avg
							n
						}
						metric {
							name
							value
						}
						metricDetails {
							name
							units
						}
						mitres {
							id
							name
						}
						rules
						timeSeries {
							data
							label
							sum
							unitsIncidentTimeseries: units
							info
							keyIncidentTimeseries: key {
								measureFieldName
								dimensions {
									fieldName
									value
								}
							}
						}
						targets {
							typeIncidentTargetRep: type
							name
							analysisScore
							infectionSource
							threatReference
							catoPopularity
							threatFeeds
							creationTime
							categories
							countryOfRegistration
							searchHits
							engines
							eventData {
								signatureId
								eventType
								threatType
								threatName
								severity
								action
								ruleId
								virusName
								scanResult
								appId
								appName
								dnsProtectionCategory
							}
						}
						direction
					}
					... on Threat {
						similarStoriesData {
							storyId
							threatTypeName
							verdict
							threatClassification
							similarityPercentage
							indication
						}
						srcSiteId
						flowsCardinality
						riskLevel
						os
						deviceName
						macAddress
						logonName
						direction
						clientClass
						events {
							signatureId
							eventType
							threatType
							threatName
							severity
							action
							ruleId
							virusName
							scanResultEvent: scanResult
							appId
							appName
							dnsProtectionCategory
						}
						mitres {
							id
							name
						}
						timeSeries {
							data
							label
							sum
							unitsIncidentTimeseries: units
							info
							keyIncidentTimeseries: key {
								measureFieldName
								dimensions {
									fieldName
									value
								}
							}
						}
						targets {
							typeIncidentTargetRep: type
							name
							analysisScore
							infectionSource
							threatReference
							catoPopularity
							threatFeeds
							creationTime
							categories
							countryOfRegistration
							searchHits
							engines
							eventData {
								signatureId
								eventType
								threatType
								threatName
								severity
								action
								ruleId
								virusName
								scanResult
								appId
								appName
								dnsProtectionCategory
							}
						}
						flows {
							appName
							clientClass
							sourceIp
							sourcePort
							destinationCountry
							destinationIp
							destinationPort
							direction
							createdAt
							referer
							userAgent
							method
							url
							target
							domain
							sourceGeolocation
							destinationGeolocation
							tunnelGeolocation
							httpResponseCode
							dnsResponseIP
							smbFileName
							user
							fileHash
							ja3
						}
					}
					... on ThreatPrevention {
						similarStoriesData {
							storyId
							threatTypeName
							verdict
							threatClassification
							similarityPercentage
							indication
						}
						srcSiteId
						flowsCardinality
						riskLevel
						os
						deviceName
						macAddress
						logonName
						direction
						clientClass
						events {
							signatureId
							eventType
							threatType
							threatName
							severity
							action
							ruleId
							virusName
							scanResultEvent: scanResult
							appId
							appName
							dnsProtectionCategory
						}
						mitres {
							id
							name
						}
						timeSeries {
							data
							label
							sum
							unitsIncidentTimeseries: units
							info
							keyIncidentTimeseries: key {
								measureFieldName
								dimensions {
									fieldName
									value
								}
							}
						}
						targets {
							typeIncidentTargetRep: type
							name
							analysisScore
							infectionSource
							threatReference
							catoPopularity
							threatFeeds
							creationTime
							categories
							countryOfRegistration
							searchHits
							engines
							eventData {
								signatureId
								eventType
								threatType
								threatName
								severity
								action
								ruleId
								virusName
								scanResult
								appId
								appName
								dnsProtectionCategory
							}
						}
						threatPreventionsEvents {
							appName
							clientClass
							sourceIp
							sourcePort
							destinationCountry
							destinationIp
							destinationPort
							direction
							createdAt
							method
							url
							target
							domain
							sourceGeolocation
							destinationGeolocation
							tunnelGeolocation
							dnsResponseIP
							smbFileName
							user
							userAgent
							fileHash
							ja3
							referrer
							httpResponseCode
						}
					}
					... on NetworkXDRIncident {
						similarStoriesData {
							storyId
							threatTypeName
							verdict
							threatClassification
							similarityPercentage
							indication
						}
						networkIncidentTimeline {
							created
							validated
							description
							eventTypeNetworkTimelineEvent: eventType
							incidentId
							networkEventSourceNetworkTimelineEvent: networkEventSource
							eventIds
							acknowledged
							linkId
							linkName
							linkConfigPrecedenceNetworkTimelineEvent: linkConfigPrecedence
							linkStatusNetworkTimelineEvent: linkStatus
							linkConfigBandwidth
							deviceConfigHaRoleNetworkTimelineEvent: deviceConfigHaRole
							deviceHaRoleStateNetworkTimelineEvent: deviceHaRoleState
							socketSerialId
							pop
							isp
							bgpConnectionNetworkTimelineEvent: bgpConnection {
								connectionName
								peerIp
								peerAsn
								catoIp
								catoAsn
							}
							linkQualityIssueNetworkTimelineEvent: linkQualityIssue {
								issueType
								direction
								current
								threshold
							}
							hostIp
							ruleName
							tunnelResetCount
							muted
						}
						storyType
						occurrences
						siteConnectionType
						siteConfigLocation
						acknowledged
						linkId
						linkName
						linkConfigPrecedence
						deviceConfigHaRole
						licenseRegion
						licenseBandwidth
						pop
						isp
						bgpConnection {
							connectionName
							peerIp
							peerAsn
							catoIp
							catoAsn
						}
						hostIp
						ruleName
						muted
						ilmmDetails {
							linkDetailsIlmmDetails: linkDetails {
								linkId
								description
								ispLinkId
								comments
								onboardingStatus
								activeLicense
							}
							ispDetailsIlmmDetails: ispDetails {
								name
								ispAccountId
								supportEmail
								supportPhone
								description
								countryCode
								loaFile {
									fileName
									fileHash
									uploadedAt
								}
							}
							contacts {
								name
								phone
								email
							}
						}
					}
					... on CatoEndpoint {
						similarStoriesData {
							storyId
							threatTypeName
							verdict
							threatClassification
							similarityPercentage
							indication
						}
						device {
							id
							deviceName
							osDetailsCatoEndpointDeviceDetails: osDetails {
								osType
								osBuild
								osVersion
							}
							loggedOnUsersCatoEndpointDeviceDetails: loggedOnUsers {
								id
								name
								... on MicrosoftEndpointUser {
									userSid
									accountName
									domainName
									principalName
								}
								... on CatoEndpointUser {
									id
									name
								}
							}
							macAddress
						}
						alerts {
							id
							title
							description
							threatName
							mitreTechnique {
								id
								name
							}
							mitreSubTechnique {
								id
								name
							}
							createdDateTime
							resources {
								id
								createdDateTime
								remediationStatus
								... on CatoProcessResource {
									processId
									processCommandLine
									imageFile {
										name
										path
										size
										sha1
										sha256
										md5
										issuer
										signer
										publisher
									}
									userAccount {
										id
										name
										... on MicrosoftEndpointUser {
											userSid
											accountName
											domainName
											principalName
										}
										... on CatoEndpointUser {
											id
											name
										}
									}
								}
								... on CatoFileResource {
									fileDetails {
										name
										path
										size
										sha1
										sha256
										md5
										issuer
										signer
										publisher
									}
									detectionStatus
								}
							}
							activities {
								id
								resourceId
								parentResourceId
							}
							criticality
							engineTypeCatoEndpointAlert: engineType
							statusCatoEndpointAlert: status
							endpointProtectionProfile
						}
					}
				}
				timeline {
					createdAt
					description
					context
					type
					descriptions
					categoryTimelineItem: category
					additionalInfo
					analystInfoTimelineItem: analystInfo {
						name
						email
					}
				}
			}
		}
	}
}
`

func (c *Client) Xdr(ctx context.Context, storyInput cato_models.StoryInput, accountID string, interceptors ...clientv2.RequestInterceptor) (*Xdr, error) {
	vars := map[string]any{
		"storyInput": storyInput,
		"accountID":  accountID,
	}

	var res Xdr
	if err := c.Client.Post(ctx, "xdr", XdrDocument, &res, vars, interceptors...); err != nil {
		if c.Client.ParseDataWhenErrors {
			return &res, err
		}

		return nil, err
	}

	return &res, nil
}

var DocumentOperationNames = map[string]string{
	AccountBySubdomainDocument:                          "accountBySubdomain",
	AccountMetricsDocument:                              "accountMetrics",
	AccountRolesDocument:                                "accountRoles",
	AccountSnapshotDocument:                             "accountSnapshot",
	AdminAddAdminDocument:                               "adminAddAdmin",
	AdminRemoveAdminDocument:                            "adminRemoveAdmin",
	AdminUpdateAdminDocument:                            "adminUpdateAdmin",
	AdminDocument:                                       "admin",
	AdminsDocument:                                      "admins",
	AppStatsDocument:                                    "appStats",
	AppStatsTimeSeriesDocument:                          "appStatsTimeSeries",
	AuditFeedDocument:                                   "auditFeed",
	EntityLookupDocument:                                "entityLookup",
	EventsDocument:                                      "events",
	EventsFeedDocument:                                  "eventsFeed",
	EventsTimeSeriesDocument:                            "eventsTimeSeries",
	HardwareManagementDocument:                          "hardwareManagement",
	LicensingDocument:                                   "licensing",
	SiteAddBgpPeerDocument:                              "siteAddBgpPeer",
	SiteRemoveBgpPeerDocument:                           "siteRemoveBgpPeer",
	SiteUpdateBgpPeerDocument:                           "siteUpdateBgpPeer",
	SitesAddBgpPeerDocument:                             "sitesAddBgpPeer",
	SitesRemoveBgpPeerDocument:                          "sitesRemoveBgpPeer",
	SitesUpdateBgpPeerDocument:                          "sitesUpdateBgpPeer",
	PolicyInternetFirewallAddSectionDocument:            "policyInternetFirewallAddSection",
	PolicyInternetFirewallCreatePolicyRevisionDocument:  "policyInternetFirewallCreatePolicyRevision",
	PolicyInternetFirewallDiscardPolicyRevisionDocument: "policyInternetFirewallDiscardPolicyRevision",
	PolicyInternetFirewallMoveRuleDocument:              "policyInternetFirewallMoveRule",
	PolicyInternetFirewallMoveSectionDocument:           "policyInternetFirewallMoveSection",
	PolicyInternetFirewallRemoveRuleDocument:            "policyInternetFirewallRemoveRule",
	PolicyInternetFirewallRemoveSectionDocument:         "policyInternetFirewallRemoveSection",
	PolicyInternetFirewallPublishPolicyRevisionDocument: "policyInternetFirewallPublishPolicyRevision",
	PolicyInternetFirewallUpdateRuleDocument:            "policyInternetFirewallUpdateRule",
	PolicyInternetFirewallUpdateSectionDocument:         "policyInternetFirewallUpdateSection",
	PolicyInternetFirewallUpdatePolicyDocument:          "policyInternetFirewallUpdatePolicy",
	PolicyDocument:                                      "policy",
	PolicyInternetFirewallAddRuleDocument:               "policyInternetFirewallAddRule",
	PolicyWanFirewallAddRuleDocument:                    "policyWanFirewallAddRule",
	PolicyWanFirewallAddSectionDocument:                 "policyWanFirewallAddSection",
	PolicyWanFirewallCreatePolicyRevisionDocument:       "policyWanFirewallCreatePolicyRevision",
	PolicyWanFirewallDiscardPolicyRevisionDocument:      "policyWanFirewallDiscardPolicyRevision",
	PolicyWanFirewallMoveRuleDocument:                   "policyWanFirewallMoveRule",
	PolicyWanFirewallMoveSectionDocument:                "policyWanFirewallMoveSection",
	PolicyWanFirewallPublishPolicyRevisionDocument:      "policyWanFirewallPublishPolicyRevision",
	PolicyWanFirewallRemoveRuleDocument:                 "policyWanFirewallRemoveRule",
	PolicyWanFirewallRemoveSectionDocument:              "policyWanFirewallRemoveSection",
	PolicyWanFirewallUpdatePolicyDocument:               "policyWanFirewallUpdatePolicy",
	PolicyWanFirewallUpdateRuleDocument:                 "policyWanFirewallUpdateRule",
	PolicyWanFirewallUpdateSectionDocument:              "policyWanFirewallUpdateSection",
	SiteDocument:                                        "site",
	SiteAddIpsecIkeV2SiteDocument:                       "siteAddIpsecIkeV2Site",
	SiteAddIpsecIkeV2SiteTunnelsDocument:                "siteAddIpsecIkeV2SiteTunnels",
	SiteAddNetworkRangeDocument:                         "siteAddNetworkRange",
	SiteAddSocketSiteDocument:                           "siteAddSocketSite",
	SiteAddStaticHostDocument:                           "siteAddStaticHost",
	SiteRemoveNetworkRangeDocument:                      "siteRemoveNetworkRange",
	SiteRemoveSiteDocument:                              "siteRemoveSite",
	SiteRemoveStaticHostDocument:                        "siteRemoveStaticHost",
	SiteUpdateHaDocument:                                "siteUpdateHa",
	SiteUpdateIpsecIkeV2SiteGeneralDetailsDocument:      "siteUpdateIpsecIkeV2SiteGeneralDetails",
	SiteUpdateIpsecIkeV2SiteTunnelsDocument:             "siteUpdateIpsecIkeV2SiteTunnels",
	SiteUpdateNetworkRangeDocument:                      "siteUpdateNetworkRange",
	SiteUpdateSiteGeneralDetailsDocument:                "siteUpdateSiteGeneralDetails",
	SiteUpdateSocketInterfaceDocument:                   "siteUpdateSocketInterface",
	SiteUpdateStaticHostDocument:                        "siteUpdateStaticHost",
	SubDomainsDocument:                                  "subDomains",
	XdrDocument:                                         "xdr",
}
